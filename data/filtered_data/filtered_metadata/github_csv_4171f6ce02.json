{
    "table_id": "github_csv_4171f6ce02",
    "source": "github_csv",
    "original_metadata": {
        "source_dataset": "github_csv",
        "repository": "zhengtr/rbda-ml-inference",
        "repository_url": "https://github.com/zhengtr/rbda-ml-inference",
        "repository_owner": "zhengtr",
        "repository_name": "rbda-ml-inference",
        "repository_stars": 0,
        "repository_language": "Unknown",
        "file_path": "sample_data/mini_answers.csv",
        "branch": "main",
        "download_url": "https://raw.githubusercontent.com/zhengtr/rbda-ml-inference/main/sample_data/mini_answers.csv",
        "file_size_bytes": 0,
        "collection_method": "github_api",
        "table_statistics": {
            "num_rows": 9,
            "num_columns": 5,
            "num_cells": 45,
            "numeric_columns": 3,
            "text_columns": 2,
            "numeric_percentage": 0.6,
            "column_names": [
                "StackOverflow",
                "2015",
                "33741950",
                "0",
                "<p>the solution can be obtained by using the <strong>outputstream</strong> and using <strong>files.copy</strong> function</p> <pre><code> inputstream filecontent = img.getinputstream(); path img_destination=paths.get(\"h://products_image//\"+filename);//the output file path with the file name. as without file name it wont get created. files.copy(filecontent. img_destination);//inputstream to the path in which file needs to be copied </code></pre> ."
            ],
            "data_types": {
                "StackOverflow": "object",
                "2015": "int64",
                "33741950": "int64",
                "0": "int64",
                "<p>the solution can be obtained by using the <strong>outputstream</strong> and using <strong>files.copy</strong> function</p> <pre><code> inputstream filecontent = img.getinputstream(); path img_destination=paths.get(\"h://products_image//\"+filename);//the output file path with the file name. as without file name it wont get created. files.copy(filecontent. img_destination);//inputstream to the path in which file needs to be copied </code></pre> .": "object"
            }
        }
    },
    "dimensions": {
        "rows": 9,
        "columns": 5
    },
    "schema": {
        "columns": [
            "StackOverflow",
            "2015",
            "33741950",
            "0",
            "<p>the solution can be obtained by using the <strong>outputstream</strong> and using <strong>files.copy</strong> function</p> <pre><code> inputstream filecontent = img.getinputstream(); path img_destination=paths.get(\"h://products_image//\"+filename);//the output file path with the file name. as without file name it wont get created. files.copy(filecontent. img_destination);//inputstream to the path in which file needs to be copied </code></pre> ."
        ],
        "dtypes": {
            "StackOverflow": "object",
            "2015": "int64",
            "33741950": "int64",
            "0": "int64",
            "<p>the solution can be obtained by using the <strong>outputstream</strong> and using <strong>files.copy</strong> function</p> <pre><code> inputstream filecontent = img.getinputstream(); path img_destination=paths.get(\"h://products_image//\"+filename);//the output file path with the file name. as without file name it wont get created. files.copy(filecontent. img_destination);//inputstream to the path in which file needs to be copied </code></pre> .": "object"
        }
    }
}
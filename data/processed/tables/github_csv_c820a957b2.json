{
  "columns": [
    "id",
    "title",
    "username",
    "language",
    "date",
    "content"
  ],
  "data": [
    [
      "MCt7Vrdt",
      "RobloxDevTutorials Beginner's Series - Lesson 10: Elseif",
      "ProDeveloper5876",
      "Lua",
      "Thursday 8th of June 2023 06:45:55 PM CDT",
      "if script.number.Value == 7 then\r\n\tprint(\"The value is 7! Correct!\")\r\nelseif script.number.Value == 6 then\r\n\tprint(\"The value isn't 7, but it is 6!\")\r\nelse\r\n\tprint(\"The number isn't 7 or 6!\")\r\nend\r\n"
    ],
    [
      "Ce6p6M8N",
      "BTC Wallet Credentials have been reset",
      "confeossif_29",
      "GetText",
      "Thursday 8th of June 2023 06:28:01 PM CDT",
      "Dear User\nWe have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.\nYour new login credentials will be \naprendealigar7m:cXQ2PH on 193.233.202.76(SSH)\nRegards"
    ],
    [
      "0rS0WMU0",
      "models.py",
      "mikora",
      "Python",
      "Thursday 8th of June 2023 06:13:22 PM CDT",
      "import os\r\nfrom datetime import date\r\nfrom django.db import models\r\n\r\n#   'a' ---> Artist\r\nclass Artist(models.Model):\r\n    ida = models.AutoField(primary_key=True)  # primary key\r\n\r\n    aname = models.CharField(max_length=100, verbose_name=\"Name\")\r\n    stagename = models.CharField(max_length=100, verbose_name=\"Stage name\")\r\n    birth = models.DateField(\"Birth\")\r\n    age = models.IntegerField(default=0)    # read only\r\n    n_gold = models.IntegerField(default=0, verbose_name=\"Gold records\")  # read only\r\n    n_plat = models.IntegerField(default=0, verbose_name=\"Platinum records\")  # read only\r\n    nation = models.CharField(max_length=100, verbose_name=\"Nationality\")\r\n\r\n    artist_image = models.ImageField(null=True, blank=True, upload_to=\"artist_img/\")    # profile pic\r\n    show_ida = models.IntegerField(verbose_name=\"Ida\", null=True, default=-1)\r\n\r\n    #   [str] that shows in the dropdown menu\r\n    def __str__(self):\r\n        return str(self.stagename)\r\n\r\n    def __repr__(self):\r\n        return f\"Artist(ida={self.ida}, aname='{self.aname}', stagename='{self.stagename}', birth={self.birth}, age={self.age}, n_gold={self.n_gold}, n_plat={self.n_plat}, nation='{self.nation}')\"\r\n\r\n\r\n    ####################################################################################################################\r\n\r\n    def calculate_certifications(self):\r\n        artist_albums = Album.objects.filter(ida=self)\r\n\r\n        self.gold = artist_albums.filter(gold=True).count()\r\n        self.plat = artist_albums.filter(plat=True).count()\r\n\r\n    #   Override ---> calculate read only fields\r\n    def save(self, *args, **kwargs):\r\n        self.calculate_certifications()\r\n        self.age = date.today().year - self.birth.year\r\n\r\n        if self.ida is not None:\r\n            self.show_ida = self.ida\r\n        else:\r\n            self.show_ida = -1\r\n\r\n        super().save(*args, **kwargs)\r\n\r\n\r\n#   'b' ---> Album\r\nclass Album(models.Model):\r\n    idb = models.AutoField(primary_key=True)  # primary key\r\n\r\n    ida = models.ForeignKey(Artist, on_delete=models.CASCADE)  # foreign key, read only\r\n    artist_name = models.CharField(max_length=100, verbose_name=\"Artist\", default=\"Artist name will appear here...\")    # read only\r\n    bname = models.CharField(max_length=100, verbose_name=\"Name\")\r\n    year = models.IntegerField(verbose_name=\"Release year\")\r\n    genre = models.CharField(max_length=100)\r\n    gold = models.BooleanField(verbose_name=\"Gold record\")\r\n    plat = models.BooleanField(verbose_name=\"Platinum record\")\r\n\r\n    album_image = models.ImageField(null=True, blank=True, upload_to=\"album_img/\")  # album cover\r\n    show_idb = models.IntegerField(verbose_name=\"Idb\", null=True, default=-1)\r\n\r\n    def __str__(self):\r\n        return self.bname\r\n\r\n    ####################################################################################################################\r\n\r\n    #   Override --> calculate: 'artist_name', 'ida'\r\n    def save(self, *args, **kwargs):\r\n        #   artist_name\r\n        artist = Artist.objects.get(ida=self.ida_id)\r\n        self.artist_name = artist.stagename\r\n\r\n        #   ida\r\n        self.ida = artist\r\n        #   ...OPPURE...\r\n        #   self.ida_id = artist.ida\r\n\r\n        if self.idb is not None:\r\n            self.show_idb = self.idb\r\n        else:\r\n            self.show_idb = -1\r\n\r\n        super().save(*args, **kwargs)\r\n\r\n#   's' ---> Song\r\nclass Song(models.Model):\r\n    ids = models.AutoField(primary_key=True)  # primary key\r\n\r\n    idb = models.ForeignKey(Album, on_delete=models.CASCADE)  # foreign key\r\n    sname = models.CharField(max_length=100, verbose_name=\"Name\")\r\n    artist_name = models.CharField(max_length=100, verbose_name=\"Artist\", default=\"Artist name will appear here...\")    # read only\r\n    album_name = models.CharField(max_length=100, verbose_name=\"Album\", default=\"Album name will appear here...\")   # read only\r\n    pubdate = models.IntegerField(verbose_name=\"Release year\", default=0)   # read only\r\n    length = models.IntegerField(verbose_name=\"Length in [seconds]\")\r\n    spoty_str = models.IntegerField(verbose_name=\"Thousands of streams [x1000]\")\r\n\r\n    def __str__(self):\r\n        return self.sname\r\n\r\n    ####################################################################################################################\r\n\r\n    #   Override --> calculate: 'album_name', 'pubdate', 'artist_name'\r\n    def save(self, *args, **kwargs):\r\n        #   album_name, pubdate\r\n        album = Album.objects.get(idb=self.idb_id)\r\n        self.album_name = album.bname\r\n        self.pubdate = album.year\r\n\r\n        #   artist_name\r\n        artist = Artist.objects.get(ida=album.ida_id)\r\n        self.artist_name = artist.stagename\r\n\r\n        #   idb\r\n        self.idb = album\r\n\r\n        super().save(*args, **kwargs)\r\n\r\n"
    ],
    [
      "TcqjVpT2",
      "artist.html",
      "mikora",
      "HTML",
      "Thursday 8th of June 2023 06:12:51 PM CDT",
      "<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Overview Artista</title>\r\n    <style>\r\n\r\n        .artist-info {\r\n            margin: 20px;\r\n            background-color: #f0f0f0;\r\n            padding: 20px;\r\n            border-radius: 5px;\r\n            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\r\n        }\r\n\r\n        .artist-image {\r\n            float: left;\r\n            width: 350px;\r\n            height: 450px;\r\n            border-radius: 50%;\r\n            overflow: hidden;\r\n            border: 2px solid #000;\r\n            box-shadow: 0 12px 24px rgba(0, 0, 0, 0.3);\r\n        }\r\n\r\n        .artist-image img {\r\n            width: 100%;\r\n            height: 100%;\r\n            object-fit: cover;\r\n        }\r\n\r\n        .album-list {\r\n            margin: 20px;\r\n            background-color: #f8f8f8;\r\n            color: #000000;\r\n            padding: 20px;\r\n            border-radius: 5px;\r\n            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n        }\r\n\r\n\r\n        a {\r\n            color: #00008BFF;\r\n            text-decoration: none;\r\n            border-bottom: none;\r\n        }\r\n\r\n        body {\r\n            font-family: Candara, Arial, sans-serif;\r\n            background-color: #f5f5f5;\r\n        }\r\n\r\n\r\n        h1 {\r\n            color: #8b0000;\r\n            font-size: 40px;\r\n            font-weight: bold;\r\n            margin-top: 0;\r\n        }\r\n\r\n        p {\r\n            color: #000;\r\n            font-size: 24px;\r\n            margin-bottom: 10px;\r\n        }\r\n\r\n\r\n        h2 {\r\n            color: #000;\r\n            font-size: 28px;\r\n            font-weight: bold;\r\n            margin-top: 0;\r\n        }\r\n\r\n        ul {\r\n            list-style-type: disc;\r\n            padding-left: 20px;\r\n            margin-top: 10px;\r\n            margin-bottom: 10px;\r\n        }\r\n\r\n        li {\r\n            color: #000;\r\n            font-size: 24px;\r\n            margin-bottom: 5px;\r\n        }\r\n\r\n        .no-albums {\r\n            color: #999;\r\n            font-style: italic;\r\n        }\r\n\r\n\r\n    </style>\r\n</head>\r\n<body>\r\n<div class=\"artist-info\">\r\n\r\n    <!-- Artist profile pic -->\r\n    <div class=\"artist-image\">\r\n        <!-- image path -->\r\n        <img src=\"/media/artist_img/a{{ artist.ida }}_{{ path_stagename }}.jpg\" alt=\"artist profile pic\">\r\n    </div>\r\n\r\n    <!-- Artist profile pic -->\r\n    <div style=\"margin-left: 370px;\">\r\n        <h1 style=\"color: #8b0000;\">{{ artist.stagename }}</h1>\r\n        <p><strong>Nome:</strong> {{ artist.aname }}</p>\r\n        <p><strong>Data di nascita:</strong> {{ artist.birth }}</p>\r\n        <p><strong>Et\u00e0:</strong> {{ artist.age }}</p>\r\n        <p><strong>Nazione:</strong> {{ artist.nation }}</p>\r\n        <p><strong>Album d'oro:</strong> {{ artist.n_gold }}</p>\r\n        <p><strong>Album di platino:</strong> {{ artist.n_plat }}</p>\r\n    </div>\r\n</div>\r\n\r\n<!-- album list with href -->\r\n<div class=\"album-list\">\r\n    <h2>Album dell'artista</h2>\r\n    <ul>\r\n        {% for album in albums %}\r\n            <li><a href=\"{% url 'album_bio' album.idb %}\">{{ album.bname }}</a> ({{ album.year }})</li>\r\n        {% empty %}\r\n            <li class=\"no-albums\">Nessun album disponibile</li>\r\n        {% endfor %}\r\n    </ul>\r\n</div>\r\n</body>\r\n</html>\r\n"
    ],
    [
      "hCpbxPfc",
      "wisteria",
      "thequeenroyal",
      "CSS",
      "Thursday 8th of June 2023 05:44:25 PM CDT",
      "@import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Mono&family=IBM+Plex+Serif&family=Abril+Fatface&family=Montserrat:wght@500;900&family=Poppins:wght@500;900&family=Playfair+Display:ital,wght@1,900&display=swap');\r\n@font-face {\r\n   font-family: \"Couture\"; \r\n  src: url(https://dl.dropbox.com/s/uooxtl95ioyu2f9/couture-bld.otf);\r\n format(\"truetype\"); }\r\n/* latin-ext */\r\n@font-face {\r\n  font-family: 'Montserrat';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n}\r\n#wisteria {\r\n  width: 800px;\r\n  height: auto;\r\n  margin: 25px 0 0;\r\n    \r\n}\r\n#wisteriaa b {\r\n  color: var(--accent);\r\n}\r\n#wisteria .basing {\r\n  width: 100%;\r\n   border: var(--border);\r\nbox-sizing: border-box;\r\n}\r\n  #wisteria .bases {\r\n    width: 100%;\r\n   background: var(--background); \r\n   box-sizing: border-box;\r\n  border: var(--border);\r\n  padding: 35px;\r\n  }\r\n#wisteria .title {\r\n  font: 900 40px/150% Playfair Display;\r\n  color: var(--color);\r\n  text-align: center;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n}\r\n#wisteria .title:after {\r\n  content:'';\r\n  display: block;\r\n  margin: 25px auto;\r\n  width: 50%;\r\n  height: 5px;\r\n  background: #c9a0dc;\r\n  \r\n}\r\n#wisteria .post {\r\n  background: var(--background); \r\n  font: 500 12px/235% Montserrat;\r\n  text-align: justify;\r\n  letter-spacing: .5px;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  color: var(--text);\r\n}\r\n#wisteria .postbase {\r\n    background: var(--background); \r\n    width: 100%;\r\n  padding: 30px;\r\n  box-sizing: border-box;\r\n}\r\n#wisteria .post span {\r\n  background: #5E0A80;\r\n  padding: 10px 25px;\r\n  font: 40px Abril Fatface;\r\n  text-transform: uppercase;\r\n  color: var(--color);\r\n  float: left;\r\n  margin: 5px 10px; \r\n} \r\n #wisteria:after {\r\n  display: block;\r\n  content: \"starlight\";\r\n  padding: 5px 10px; \r\n  font: 10px Consolas;\r\n  text-transform: uppercase;\r\n  opacity: .4;\r\n  font-weight: bold; \r\n  color: #8c8c8c; }"
    ],
    [
      "5FhN1uU5",
      "Untitled",
      "zefie",
      "C#",
      "Thursday 8th of June 2023 05:39:57 PM CDT",
      "using System;\r\nusing System.Diagnostics;\r\nusing System.Drawing;\r\nusing System.Runtime.InteropServices;\r\nusing System.Threading;\r\nusing System.Windows.Forms;\r\n\r\nnamespace WindowsFormsApp1\r\n{\r\n    public partial class Form1 : Form\r\n    {\r\n\r\n        public struct Rect\r\n        {\r\n            public int Left { get; set; }\r\n            public int Top { get; set; }\r\n            public int Right { get; set; }\r\n            public int Bottom { get; set; }\r\n        }\r\n        public Form1()\r\n        {\r\n            doCommands();\r\n            this.WindowState = FormWindowState.Minimized;\r\n        }\r\n\r\n        private static void doCommands()\r\n        {\r\n            string path = System.IO.Path.GetDirectoryName(\r\n              System.Windows.Forms.Application.ExecutablePath);\r\n\r\n            Process p = Process.Start(path + \"\\\\WS4000v4.exe\");\r\n            p.WaitForInputIdle();\r\n\r\n            IntPtr hWnd = IntPtr.Zero;\r\n            foreach (Process pList in Process.GetProcesses())\r\n            {\r\n                if (pList.MainWindowTitle.Contains(\"WS4000 Simulator Public Beta\"))\r\n                {\r\n                    hWnd = pList.MainWindowHandle;\r\n                }\r\n            }\r\n\r\n            Rect WSRect = new Rect();\r\n            GetWindowRect(hWnd, ref WSRect);\r\n\r\n\r\n            SetForegroundWindow(hWnd);\r\n            for (int i = 0; i<10; i++)\r\n            {\r\n                SendKeys.SendWait(\"F8\");\r\n                Thread.Sleep(250);\r\n                i++;\r\n            }\r\n            Thread.Sleep(1000);\r\n            MouseHook.MoveMouse(new Point(WSRect.Left + 100, WSRect.Top + 60));\r\n            Thread.Sleep(250);\r\n            MouseHook.SendClick();\r\n            Thread.Sleep(250);\r\n            MouseHook.MoveMouse(new Point(WSRect.Left + 100, WSRect.Top + 80));\r\n            Thread.Sleep(250);\r\n            MouseHook.SendClick();\r\n            Thread.Sleep(250);\r\n            Environment.Exit(0);\r\n        }\r\n\r\n        [DllImport(\"User32.dll\")]\r\n        static extern int SetForegroundWindow(IntPtr point);\r\n\r\n        [DllImport(\"user32.dll\")]\r\n        public static extern bool GetWindowRect(IntPtr hwnd, ref Rect rectangle);\r\n    }\r\n}\r\n"
    ],
    [
      "4g8HzhpJ",
      "Check for login usage.",
      "retro64xyz",
      "PowerShell",
      "Thursday 8th of June 2023 05:33:09 PM CDT",
      "# Import the Active Directory module\r\nImport-Module ActiveDirectory\r\n\r\n# Define the user and domain\r\n$username = \"jdoe\"\r\n$domain = \"yourdomain.com\"\r\n\r\n# Get the list of all computer names in the domain\r\n$computers = Get-ADComputer -Filter * | ForEach-Object {$_.Name}\r\n\r\n# Loop through each computer\r\nforeach ($computer in $computers)\r\n{\r\n    # Write the current computer name to the console\r\n    Write-Host \"Checking $computer...\"\r\n\r\n    # Check if we can connect to the computer\r\n    if (Test-Connection -ComputerName $computer -Count 1 -Quiet)\r\n    {\r\n        # We can connect, so now we query the Security Event Log\r\n        $logs = Get-WinEvent -ComputerName $computer -LogName 'Security' -ErrorAction SilentlyContinue | \r\n                    Where-Object {$_.Message -match $username -and $_.Id -eq 4624}\r\n\r\n        if ($logs)\r\n        {\r\n            # If logs are found, print the details\r\n            Write-Host \"$username has logged into $computer\"\r\n        }\r\n    }\r\n    else\r\n    {\r\n        # Can't connect to the computer\r\n        Write-Host \"Could not connect to $computer\"\r\n    }\r\n}\r\n"
    ],
    [
      "spJWXaTg",
      "Lerp With Timeline and Curvefloat",
      "unleashedcode",
      "C++",
      "Thursday 8th of June 2023 04:56:16 PM CDT",
      "#header .h\r\n\r\n#pragma once\r\n\r\n#include \"CoreMinimal.h\"\r\n#include \"GameFramework/Actor.h\"\r\n#include \"Components/TimeLineComponent.h\"\r\n#include \"Planet.generated.h\"\r\n\r\n\r\nclass UStaticMeshComponent;\r\nclass UTimelineComponent;\r\nclass UCurveFloat;\r\n\r\n\r\nUCLASS()\r\nclass STARTRANSPORT_API APlanet : public AActor\r\n{\r\n\tGENERATED_BODY()\r\n\t\r\npublic:\t\r\n\t// Sets default values for this actor's properties\r\n\tAPlanet();\r\n\r\n\r\n\t\r\n\r\nprotected:\r\n\t// Called when the game starts or when spawned\r\n\tvirtual void BeginPlay() override;\r\n\t\r\n\t/* Mesh */\r\n\tUPROPERTY(EditDefaultsOnly, Category = \"Planet\")\r\n\tTObjectPtr<UStaticMeshComponent> PlanetMesh;\r\n\r\n\t/* Timeline */\r\n\tUPROPERTY(EditAnywhere,BlueprintReadWrite, Category = \"Planet\")\r\n\tTObjectPtr<UTimelineComponent> MainTimeline;\r\n\r\n\t/* Curve */\r\n\tUPROPERTY(EditAnywhere,BlueprintReadWrite, Category = \"Planet\")\r\n\tTObjectPtr<UCurveFloat> PlanetRotationCurve;\r\n\r\n\r\n\tUFUNCTION()\r\n\tvoid RotatePlanet(float Value);\r\n\r\n\tUFUNCTION()\r\n\tvoid TimelineEnd();\r\n\r\n\r\n\r\nprivate:\t\r\n\t\t\r\n\tFRotator PlanetCurrentRotation = FRotator(0.f);\r\n\tFRotator PlanetTargetRotation = FRotator(0.f);\r\n\r\n\tfloat RotationAmount = 360.0f;\r\n\tfloat LengthOfTimeline = 30.0f;\r\n\t\r\n};\r\n\r\n#cpp\r\n\r\n#include \"Actors/Planet/Planet.h\"\r\n#include \"Components/StaticMeshComponent.h\"\r\n#include \"Components/TimeLineComponent.h\"\r\n#include \"Curves/CurveFloat.h\"\r\n#include \"Kismet/GameplayStatics.h\"\r\n\r\n\r\n// Sets default values\r\nAPlanet::APlanet()\r\n{\r\n \t// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.\r\n\tPrimaryActorTick.bStartWithTickEnabled = true;\r\n\tPrimaryActorTick.bCanEverTick = true;\r\n\tbNetLoadOnClient = false;\r\n\tSetCanBeDamaged(false);\r\n\r\n\t//Mesh\r\n\tPlanetMesh = CreateDefaultSubobject<UStaticMeshComponent>(TEXT(\"PlanetMesh\"));\r\n\tPlanetMesh->SetEnableGravity(false);\r\n\tPlanetMesh->SetCollisionEnabled(ECollisionEnabled::NoCollision);\t\r\n\t\r\n\t//Root Component\r\n\tSetRootComponent(PlanetMesh);\r\n\t\r\n\t//Curve to use\r\n\tPlanetRotationCurve = CreateDefaultSubobject<UCurveFloat>(TEXT(\"CurveFloat\"));\r\n\t\r\n\t//Timeline\r\n\tMainTimeline = CreateDefaultSubobject<UTimelineComponent>(TEXT(\"TimeLineComp\"));\r\n}\r\n\r\n\r\n\r\n// Called when the game starts or when spawned\r\nvoid APlanet::BeginPlay()\r\n{\r\n\tSuper::BeginPlay();\r\n\r\n\t//Bind the timelineupdate to the rotateplanet function\r\n\tFOnTimelineFloat TimelineMovementValue;\r\n\tFOnTimelineEvent TimelineFinishEvent;\r\n\r\n\t//Bind functions to timeline\r\n\tTimelineMovementValue.BindUFunction(this, FName(\"RotatePlanet\"));\r\n\tTimelineFinishEvent.BindUFunction(this, FName(\"TimelineEnd\"));\r\n\r\n\tif (PlanetRotationCurve)\r\n\t{\t\t\r\n\t\t//This will allow the curve to feed the data to TimelineMovementValue, which in turn will give RotatePlanet() its value param.\r\n\t\tMainTimeline->AddInterpFloat(PlanetRotationCurve, TimelineMovementValue);\r\n\r\n\t\t//This will now allow the timline, when finished, to call the TimlineFinish event of StartRotating()\r\n\t\tMainTimeline->SetTimelineFinishedFunc(TimelineFinishEvent);\r\n\t}\r\n\t\t\r\n\r\n\t//Initialize the Starting Rotation and Ending Rotation\r\n\tPlanetCurrentRotation = GetActorRotation();\r\n\tPlanetTargetRotation = PlanetCurrentRotation;\r\n\r\n\t//Add the 360 degrees on the Yaw\r\n\tPlanetTargetRotation.Yaw += RotationAmount;\r\n\t\r\n\t//Start the timline\r\n\tMainTimeline->PlayFromStart();\r\n\r\n}\r\n\r\n\r\n\r\nvoid APlanet::RotatePlanet(float Value)\r\n{\r\n\t//Create the new rotation\r\n\tFRotator NewRotation = FMath::Lerp(PlanetCurrentRotation, PlanetTargetRotation, Value);\t\r\n\tSetActorRotation(NewRotation);\r\n\t\r\n\t\t\r\n\tUE_LOG(LogTemp, Warning, TEXT(\"VALUE: %f \"), Value);\r\n\tUE_LOG(LogTemp, Warning, TEXT(\"CurrentRotation %s\"), *GetActorRotation().ToString());\r\n\tUE_LOG(LogTemp, Warning, TEXT(\"PlanetTargetRot: %s\"),  *PlanetTargetRotation.ToString());\r\n\t\r\n\r\n\r\n\r\n}\r\n\r\n//Rotate the planet\r\nvoid APlanet::TimelineEnd()\r\n{\r\n\tUE_LOG(LogTemp, Warning, TEXT(\"TimelineEndCalled\"));\r\n}\r\n"
    ],
    [
      "Musa8ikM",
      "Bot Over-The-Clouds ETH/USDT.P BYBIT 4H LONG E SHORT",
      "Maurizio-Ciullo",
      "JavaScript",
      "Thursday 8th of June 2023 03:18:31 PM CDT",
      "\r\n\t\t\t\t\t\t\t// Bot Over-The-Clouds ETH/USDT.P BYBIT 4H LONG E SHORT //\r\n\t\t\t\t\t\t\t  // Versione con uscita chiusuare sotto la baseline //\r\n\r\n// Il trading system completo - Over The Clouds ETH/USDT.P BYBIT 4H LONG E SHORT (Trend Following)\r\n// (Sviluppo Dati Exchange = BINANCE + BYBIT) (BINANCE Dal=18/08/2017 Al 21/10/2020) (BYBIT Dal=21/10/2020 Al 20/05/2023)\r\n// (Exchange= BYBIT) (Sottostante ETH-USDT.P) (Timeframe= 4H) (Direzione= LONG E SHORT) (Swing Posizione= SI) (Esclusione Ore=NO) (Esclusione Giorni=NO) (Esclusione Mesi=NO) \r\n// (Take Profit Long/Short Market = NO) (Take Profit Limit Long/Short= NO)\r\n// (Stop Loss Limit Long= NO) (Stop Loss Limit Short= NO) (Stop Loss Market Long/Short= SI) (Trailing Stop Market=SI) (Stop Emergenza= NO)\r\n// (Rischio Operazione 2% Perdita Media Calcolato Sul Ticker: ETHUSDT BINANCE SPOT) (Max Drawdown Permesso 10,03%) (Calcolato Sul Ticker: ETHUSDT.P BYBIT CHE E' IL PEGGIORE DELLE ENTRIES MODE)\r\n// (In Sample Dal=18/08/17 Al 12/07/22) (Out Of Sample Dal=12/07/22 Al 20/05/23)\r\n// (Money Management = 23% Del Capitale Pinesctipt)\r\n// (Money Management = 25% Del Capitale Tradestation)\r\n// (Progettatta Il=07/07/23)\r\n\r\n// Caricamento Dati Bybit Su Tradestation: Exchange Time, Regular Session, 7x7 23:00 23:00, Session Hour.\r\n\r\n                                                    // ATTENZIONE //\r\n// Quando si mette la strategia live, ricordarsi di impostare 1 solo input \"quello che vogliamo utilizzare come normal/ more_aggressive/less_aggressive entries\" su true e\r\n// impostare gli altri su false. Commentare anche i BUY COMMAND che non utilizziamo.\r\n\r\n\r\n// Auentare il Max Bars Back A 75 Su Tradestation Altrimenti Non Funziona E Cliccare Su Enable Strategy Altrimenti Non Parte\r\n\r\n// Qui a differenza di tradingview non ho creato lo swith mode per gli ingressi cambiando periodi atr e mopltiplicatore atr, farlo a mano dagli input.\r\n\r\n\r\n////////// Start detecting Ichimoku Cloud //////////                                                                                                   \r\nInputs: Standard(26), Turning(9), Delayed(52), Uscita(0), mystop(0), myprofit(0);\r\nVariables:StdLine(0), TurnLine(0), Span1(0), Span2(0);\r\nStdLine = (Highest(High, Standard) + Lowest(Low, Standard)) / 2; // \"BASE LINE\"\r\nTurnLine = (Highest(High, Turning) + Lowest(Low, Turning)) / 2;  // \"CONVERSION LINE\"\r\nSpan1 = (StdLine + TurnLine) / 2;                                // \"SPAN A No 25 Offset\"\r\nSpan2 = (Highest(High, Delayed) + Lowest(Low, Delayed)) / 2;     // \"SPAN B No 25 Offset\"\r\n\r\n// Span1 e Span2 non hanno l'offset di 25 candele fa, per ulteriori verifiche vedi Study Ichimoku oppure fare il print qui su Strategy.\r\n\r\n// Print Debug Ichimoku\r\n{Once Clearprintlog;\r\nprint(Getstrategyname, \", \", Symbol, \", \", Formatdate(\"dd/MM/yy\", ElDateToDateTime( Date )), \", \", BarDateTime.Format( \"%H%M.%S\" ), \", \", Close, \", \", StdLine, \", \", TurnLine, \", \", Span1, \", \",Span2 , \", \",); \r\nprint(StdLine);\r\nprint(TurnLine);\r\nprint(Span1);\r\nprint(Span2);}\r\n////////// End detecting Ichimoku Cloud //////////\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n////////// Start Detection ATR (Average True Range Long E Short) //////////\r\n// Valori migliori e pi\u00f9 stabili boom bar long I migliori sono scritti per prima: //7-.1.2//12-1.2 //11-1.2\r\n// La 7-1.2entra pi\u00f9 facilmente ed entra pi\u00f9 in basso solo che se il periodo non \u00e8 buono prende pi\u00f9 stop\r\n// La 11-1.2 entra meno, operazione leggermente minore ma se il periodo \u00e8 peggiore prende meno stop\r\n// Preferisco la 7-1.2 Pi\u00f9 aggressiva e la 11-1.2 pi\u00f9 stabile\r\ninput:\r\n\tinput_atr_period_long(7), \r\n\tinput_atr_period_short(33),\r\n\tinput_atr_Mult_long(1.2),\r\n\tinput_atr_Mult_short(1.2),\r\n\tinput_ema_long(84),\r\n\tinput_ema_short(83),\r\n\tInitialCapital(100000),\r\n\tpercent_risk(100),\r\n\tonly_long(false),\r\n\tonly_short(false);\r\n\t\r\n\t\r\n\t\r\nVars:\r\n\t valore_atr_long(0),\r\n\t valore_atr_short(0),\r\n\t boom_bar_long(false),\r\n\t boom_bar_short(false),\r\n\t ema_long(0),\r\n\t ema_short(0),\r\n\t entrata_long(false),\r\n\t entrata_short(false),\r\n\t uscita_long(false),\r\n\t uscita_short(false),\r\n\t nr_share(0),\r\n\t risk(0);\r\n\t \r\n\r\n////////// Start Detecting ATR (Average True Range Long E Short) //////////\r\nvalore_atr_long      =   AvgTrueRange(input_atr_period_long);\r\nvalore_atr_short \t =   AvgTrueRange(input_atr_period_short);\r\n////////// End Detecting ATR (Average True Range Long E Short) //////////\r\n\r\n\r\n////////// Start Detecting Boom Bar Long //////////\r\nboom_bar_long = Absvalue(open - close) > valore_atr_long * input_atr_Mult_long;\r\nIf boom_bar_long Then\r\n// Plotshape Boom_Bar_Long\r\nBegin\r\n\tValue1 = Text_new(D, T, L, \"*\");\r\n\tText_setcolor(Value1, Yellow);\r\n\tText_setstyle(Value1, 2, 0);\r\nEnd;\r\n////////// End Detecting Boom Bar Long //////////\r\n\r\n\r\n////////// Start Detecting Boom Bar Short //////////\r\nboom_bar_short = Absvalue(open - close) > valore_atr_short * input_atr_Mult_short;\r\nIf boom_bar_short Then\r\n// Plotshape Boom_Bar_Short\r\nBegin\r\n\tValue2 = Text_new(D, T, L, \"*\");\r\n\tText_setcolor(Value1, Yellow);\r\n\tText_setstyle(Value1, 2, 0);\r\nEnd;\r\n////////// End Detecting Boom Bar Short //////////\r\n\r\n\r\n////////// Start Detecting Media EMA Long //////////\r\nema_long = XAverage(close, input_ema_long);\r\n////////// End Detecting Media EMA Long ////////// \r\n\r\n\r\n////////// Start Detecting Media EMA Short //////////\r\nema_short = XAverage(close, input_ema_short);\r\n////////// End Detecting Media EMA Short //////////\r\n\r\n\r\n\r\n ////////// Start Money Managment //////////\r\nrisk = percent_risk/100;\r\nnr_share = floor((InitialCapital + NetProfit) * risk) / close;\r\n ////////// End Money Managment //////////\r\n\r\n\r\n////////// Start Condizioni Entrata E Uscita Long E Short //////////\r\nentrata_long = close > StdLine and TurnLine > StdLine and close > Span2  and close > ema_long  and boom_bar_long and not only_short;\r\nentrata_short = close < StdLine and TurnLine  < StdLine and close < Span2  and close < ema_short and boom_bar_short and not only_long;\r\n\r\nuscita_long = close < StdLine;\r\nuscita_short = close > StdLine;\r\n////////// End Condizioni Entrata E Uscita Long E Short //////////\r\n\r\n\r\n////////// Start Entrata E Uscita Long //////////\r\nif marketposition = 0 and entrata_long Then\r\n   Begin;\r\n   \t  Buy(\"Long\") nr_share contracts Next Bar at market;   \r\n   End;\r\n   \r\nif marketposition = 1 and uscita_long Then\r\n\tBegin;\r\n\t\tSell(\"Exit Market Long\") from entry(\"Long\") Next Bar at market;\t   \r\n\tEnd;\r\n////////// End Entrata E Uscita Long //////////\r\n\r\n\r\n\r\n////////// Start Entrata E Uscita Short //////////\r\nif marketposition = 0 and entrata_short Then\r\n   Begin;\r\n   \t  Sellshort(\"Short\") nr_share contracts Next Bar at market;   \r\n   End;\r\n   \r\nif marketposition = -1 and uscita_short Then\r\n\tBegin;\r\n\t\tBuytocover(\"Exit Market Short\") from entry(\"Short\") Next Bar at market;\t   \r\n\tEnd;\r\n////////// End Entrata E Uscita Short //////////"
    ],
    [
      "TyT9U6Kx",
      "Bot Over The Clouds ETH/USDT.P BYBIT 4H LONG E SHORT",
      "Maurizio-Ciullo",
      "JavaScript",
      "Thursday 8th of June 2023 03:12:26 PM CDT",
      "// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/\r\n// \u00a9 Maurizio-Ciullo\r\n\r\n\t\t\t\t\t\t\t\t\t// Versione con uscita chiusuara sotto la baseline //\r\n\r\n// Il trading system completo - Over The Clouds ETH/USDT.P BYBIT 4H LONG E SHORT (Trend Following)\r\n// (Sviluppo Dati Exchange = BINANCE + BYBIT) (BINANCE Dal=18/08/2017 Al 21/10/2020) (BYBIT Dal=21/10/2020 Al 20/05/2023)\r\n// (Exchange= BYBIT) (Sottostante ETH-USDT.P) (Timeframe= 4H) (Direzione= LONG E SHORT) (Swing Posizione= SI) (Esclusione Ore=NO) (Esclusione Giorni=NO) (Esclusione Mesi=NO) \r\n// (Take Profit Long/Short Market = NO) (Take Profit Limit Long/Short= NO)\r\n// (Stop Loss Limit Long= NO) (Stop Loss Limit Short= NO) (Stop Loss Market Long/Short= SI) (Trailing Stop Market=SI) (Stop Emergenza= NO)\r\n// (Rischio Operazione 2% Perdita Media Calcolato Sul Ticker: ETHUSDT BINANCE SPOT) (Max Drawdown Permesso 10,03% Calcolato Sul Ticker: ETHUSDT.P BYBIT CHE E' IL PEGGIORE DELLE ENTRIES MODE)\r\n// (In Sample Dal=18/08/17 Al 12/07/22) (Out Of Sample Dal=12/07/22 Al 20/05/23)\r\n// (Money Management = 23% Del Capitale)\r\n// (Money Management = 25% Del Capitale Tradestation)\r\n// (Progettatta Il=07/07/23)\r\n\r\n// Caricamento Dati Bybit Su Tradestation: Exchange Time, Regular Session, 7x7 23:00 23:00, Session Hour.\r\n// Auentare il Max Bars Back A 75 Su Tradestation Altrimenti Non Funziona E Cliccare Su Enable Strategy Altrimenti Non Parte\r\n\r\n                                                    // ATTENZIONE //\r\n// Quando si mette la strategia live, ricordarsi di impostare 1 solo input \"quello che vogliamo utilizzare come normal/ more_aggressive/less_aggressive entries\" su true e\r\n// impostare gli altri su false. Commentare anche i BUY COMMAND che non utilizziamo.\r\n\r\n//@version=5\r\nstrategy(title='Bot Over-The-Clouds ETH/USDT.P BYBIT 4H LONG E SHORT', overlay=true,\r\n         //max_bars_back=5000, // Serve Per Caricare Pi\u00f9 Storico Per Il Trailing Stop\r\n         pyramiding=0,\r\n         initial_capital=1000,\r\n         commission_type=strategy.commission.percent,\r\n         commission_value=0.1,\r\n         slippage=3,\r\n         default_qty_type=strategy.percent_of_equity,\r\n         precision=2,\r\n         default_qty_value=23)\r\n\r\n\r\n// Inputs\r\nonlyLong = input.bool(title='Solo long', defval=false, inline='1', group='Direction')\r\nonlyShort = input.bool(title='Solo short', defval=false, inline='1', group='Direction')\r\nin_normal = input.bool(title=\"normal entry mode\", defval=true, tooltip = \"Entry Conditions Choice\", inline='1', group='Aggresivity Entries Noraml')\r\nin_more_aggressive = input.bool(title=\"more aggressive entry mode\", defval=false, tooltip = \"Entry Conditions Choice\", inline='1', group='Aggresivity Entries Aggresive')\r\nin_less_aggressive = input.bool(title=\"less aggressive entry mode\", defval=false, tooltip = \"Entry Conditions Choicee\", inline='1', group='Aggresivity Entries Less Aggressive')\r\nin_ema_long = input.int(title='in_ema_long', defval=84, minval=0, maxval=300, step=1, inline='1', group='Ema Lenght')\r\nin_ema_short = input.int(title='in_ema_short', defval=83, minval=0, maxval=300, step=1, inline='1', group='Ema Lenght')\r\n\r\n\r\n// Calcolo del range del backtest\r\nstartDate = input.int(title='Start Date', defval=17, minval=1, maxval=31, group='Time Window')\r\nstartMonth = input.int(title='Start Month', defval=08, minval=1, maxval=12, group='Time Window')\r\nstartYear = input.int(title='Start Year', defval=2000, minval=1800, maxval=2100, group='Time Window')\r\n\r\nendDate = input.int(title='End Date', defval=01, minval=1, maxval=31, group='Time Window')\r\nendMonth = input.int(title='End Month', defval=01, minval=1, maxval=12, group='Time Window')\r\nendYear = input.int(title='End Year', defval=2121, minval=1800, maxval=2150, group='Time Window')\r\n\r\n\r\ninDateRange = time >= timestamp(syminfo.timezone, startYear, startMonth, startDate, 0, 0) and time < timestamp(syminfo.timezone, endYear, endMonth, endDate, 0, 0)\r\n\r\n\r\n// Start Hour Range Trading Non Attivo /////////////////////\r\n//hourTrading = input(title='sessione valida di trading', defval='0600-2300:23456')\r\n//hourRangeTrading = time(timeframe.period, hourTrading)\r\n\r\n\r\n// Start Detecting Ichimoku Cloud //\r\nconversionPeriods = input.int(9, minval=1, title=\"Conversion Line Periods\", group='Ichomoku'),\r\nbasePeriods = input.int(26, minval=1, title=\"Base Line Periods\", group='Ichomoku')\r\nlaggingSpan2Periods = input.int(52, minval=1, title=\"Lagging Span 2 Periods\", group='Ichomoku'),\r\ndisplacement = input.int(26, minval=1, title=\"Displacement\", group='Ichomoku')\r\n\r\ndonchian(len) => math.avg(ta.lowest(len), ta.highest(len))\r\n\r\nconversionLine = donchian(conversionPeriods)\r\nbaseLine = donchian(basePeriods)\r\nspanA = math.avg(conversionLine, baseLine)\r\nspanB = donchian(laggingSpan2Periods)\r\nStdLine = (ta.highest(high, 52) + ta.lowest(low, 52)) / 2 \r\nplot(conversionLine, title=\"Conversion Line\", color=#0496ff)\r\nplot(baseLine, color=#991515, title=\"Base Line\")\r\nplot(close, title=\"Lagging Span\", offset = -displacement + 1, color=#459915)\r\n\r\np1 = plot(spanA, offset = displacement - 1, color=color.green,\r\n title=\"Plot Span A\")\r\np2 = plot(spanB, offset = displacement - 1, color=color.red,\r\n title=\"Plot Span B\")\r\nfill(p1, p2, color = spanA > spanB ? color.green : color.red)\r\n// plot(spanA[25], title=\"Span A\", color=color.orange)\r\n// plot(spanB[25],  title=\"Span B\",color=color.yellow)\r\n// plot(spanA, title=\"Span A No 25 Offset\", color=color.rgb(218, 16, 253))\r\n// plot(spanB, title=\"Span B No 25 Offset\", color=color.rgb(218, 16, 253))\r\n// End Detecting Ichimoku Cloud //\r\n\r\n\r\n// Start Detecting ATR Long Normal //\r\nin_length_atr_long_normal = input.int(title=\"Atr Length_long_normal\", defval=11, minval=0, group='Atr Long Normal')\r\nin_smoothing_atr_long_normal = input.string(title=\"Smoothing_atr_long_normal\", defval=\"SMA\", options=[\"RMA\", \"SMA\", \"EMA\", \"WMA\"], group='Atr Long Normal')\r\nma_function_long(source, in_length_atr_long_normal) =>\r\n\tswitch in_smoothing_atr_long_normal\r\n\t\t\"RMA\" => ta.rma(source, in_length_atr_long_normal)\r\n\t\t\"SMA\" => ta.sma(source, in_length_atr_long_normal)\r\n\t\t\"EMA\" => ta.ema(source, in_length_atr_long_normal)\r\n\t\t=> ta.wma(source, in_length_atr_long_normal)\r\nplot(ma_function_long(ta.tr(true), in_length_atr_long_normal), title = \"ATR_long_normal\", color=color.new(#ca5555, 0))\r\n// End Detecting ATR Long Normal //\r\n\r\n// Start Detecting ATR Long More Aggressive //\r\nin_length_atr_long_more_aggressive = input.int(title=\"Atr Length_long_more_aggressive\", defval=7, minval=0, group='Atr Long More Aggresive')\r\nin_smoothing_atr_long_more_aggressive = input.string(title=\"Smoothing_atr_long_more_aggressive\", defval=\"SMA\", options=[\"RMA\", \"SMA\", \"EMA\", \"WMA\"], group='Atr Long More Aggresive')\r\nma_function_long_more_aggressive(source, in_length_atr_long_more_aggressive) =>\r\n\tswitch in_smoothing_atr_long_more_aggressive\r\n\t\t\"RMA\" => ta.rma(source, in_length_atr_long_more_aggressive)\r\n\t\t\"SMA\" => ta.sma(source, in_length_atr_long_more_aggressive)\r\n\t\t\"EMA\" => ta.ema(source, in_length_atr_long_more_aggressive)\r\n\t\t=> ta.wma(source, in_length_atr_long_more_aggressive)\r\nplot(ma_function_long_more_aggressive(ta.tr(true), in_length_atr_long_more_aggressive), title = \"ATR_long_more_aggressive\", color=color.new(#ff4646, 0))\r\n// End Detecting ATR Long More Aggressive //\r\n\r\n// Start Detecting ATR Long Less Aggressive //\r\nin_length_atr_long_less_aggressive = input.int(title=\"Atr Length_long_less_aggressive\", defval=12, minval=0, group='Atr Long Less Aggresive')\r\nin_smoothing_atr_long_less_aggressive = input.string(title=\"Smoothing_atr_long_less_aggressive\", defval=\"SMA\", options=[\"RMA\", \"SMA\", \"EMA\", \"WMA\"], group='Atr Long Less Aggresive')\r\nma_function_long_less_aggressive(source, in_length_atr_long_less_aggressive) =>\r\n\tswitch in_smoothing_atr_long_less_aggressive\r\n\t\t\"RMA\" => ta.rma(source, in_length_atr_long_less_aggressive)\r\n\t\t\"SMA\" => ta.sma(source, in_length_atr_long_less_aggressive)\r\n\t\t\"EMA\" => ta.ema(source, in_length_atr_long_less_aggressive)\r\n\t\t=> ta.wma(source, in_length_atr_long_less_aggressive)\r\nplot(ma_function_long_less_aggressive(ta.tr(true), in_length_atr_long_less_aggressive), title = \"ATR_long_less__aggressive\", color=color.new(#ff4646, 0))\r\n// End Detecting ATR Long Less Aggressive //\r\n\r\n\r\n// Start Detecting ATR Short //\r\nin_length_atr_short = input.int(title=\"Atr Length_short\", defval=11, minval=0, group='Atr Short')\r\nin_smoothing_atr_short = input.string(title=\"Smoothing_atr_short\", defval=\"SMA\", options=[\"RMA\", \"SMA\", \"EMA\", \"WMA\"], group='Atr Short')\r\nma_function_short(source, in_length_atr_short) =>\r\n\tswitch in_smoothing_atr_short\r\n\t\t\"RMA\" => ta.rma(source, in_length_atr_short)\r\n\t\t\"SMA\" => ta.sma(source, in_length_atr_short)\r\n\t\t\"EMA\" => ta.ema(source, in_length_atr_short)\r\n\t\t=> ta.wma(source, in_length_atr_short)\r\nplot(ma_function_short(ta.tr(true), in_length_atr_short), title = \"ATR_short\", color=color.new(#B71C1C, 0))\r\n// End Detecting ATR Short //\r\n\r\n\r\n// Start Detecting Boom Bar Long (Normal-Aggressive-Less_aggressive//\r\natr_long_normal = ma_function_long(ta.tr(true), in_length_atr_long_normal)\r\natr_long_more_aggressive = ma_function_long_more_aggressive(ta.tr(true), in_length_atr_long_more_aggressive)\r\natr_long_less_aggressive = ma_function_long_less_aggressive(ta.tr(true), in_length_atr_long_less_aggressive)\r\nin_atr_Mult_long_normal = input.float(title='atr_Mult_long_normal', minval=0, maxval=5, defval=1.2, step=0.1, group='Atr Long Normal')\r\nin_atr_Mult_long_more_aggressive = input.float(title='atr_Mult_long_more_aggressive', minval=0, maxval=5, defval=1.2, step=0.1, group='Atr Long More Aggresive')\r\nin_atr_Mult_long_less_aggressive = input.float(title='atr_Mult_long_less_aggressive', minval=0, maxval=5, defval=1.2, step=0.1, group='Atr Long Less Aggresive')\r\nboom_bar_long_normal = math.abs(open - close) > atr_long_normal * in_atr_Mult_long_normal\r\nboom_bar_long_more_aggressive = math.abs(open - close) > atr_long_more_aggressive * in_atr_Mult_long_more_aggressive\r\nboom_bar_long_less_aggressive = math.abs(open - close) > atr_long_less_aggressive * in_atr_Mult_long_less_aggressive\r\n// End Detecting Boom Bar Long //\r\n\r\n\r\n// Start Detecting Boom Bar Short //\r\natr_short = ma_function_short(ta.tr(true), in_length_atr_short)\r\nin_atr_Mult_short = input.float(title='atr_Mult_short', minval=0, maxval=5, defval=1.2, step=0.1, group='Atr Short')\r\nboom_bar_short = math.abs(open - close) > atr_short * in_atr_Mult_short\r\n// End Detecting Boom Bar Short //\r\n\r\nbarcolor(boom_bar_long_normal and in_normal and not in_more_aggressive and not in_less_aggressive ? color.lime : boom_bar_short and in_normal and not in_more_aggressive and not in_less_aggressive ? color.lime : na)\r\nbarcolor(boom_bar_long_more_aggressive and in_more_aggressive and not in_normal and not in_less_aggressive ? color.lime : boom_bar_short and in_more_aggressive and not in_normal and not in_less_aggressive ? color.lime : na)\r\nbarcolor(boom_bar_long_less_aggressive and in_less_aggressive and not in_normal and not in_more_aggressive ? color.lime : boom_bar_short and in_less_aggressive and not in_normal and not in_more_aggressive ? color.lime : na)\r\n\r\n\r\n// Start Detecting Ema Long And Short //\r\nema_long = ta.ema(close, in_ema_long)\r\nplot(ema_long, title=\"ema_long\", color=color.green, linewidth = 2)\r\n\r\nema_short = ta.ema(close, in_ema_short)\r\nplot(ema_short, title=\"ema_short\", color=color.red, linewidth = 2)\r\n// End Detecting Ema Long And Short //\r\n\r\n\r\nplot(strategy.position_size != 0 ? strategy.opentrades.entry_price(0) : na , color=strategy.position_size > 0 ? color.blue : strategy.position_size < 0 ? color.red : na, style=plot.style_linebr, title=\"entry_price\") // stampa l'entry price in rosso se short in blu se long\r\n//plot(strategy.position_size > 0 ?  take_profit_long_price : strategy.position_size < 0 ? take_profit_short_price: na, color=color.green, style=plot.style_cross, linewidth=2, title=\"tk_limit\")\r\n//plot(strategy.position_size > 0 ?  stop_loss_long_price : strategy.position_size < 0 ? stop_loss_short_price: na, color=color.red, style=plot.style_cross, linewidth=2, title=\"sl_limit\")\r\n\r\nbgcolor(strategy.position_size > 0 ? color.green : strategy.position_size < 0 ? color.red : na, transp=90)// sfondo verde quando siamo long, sfondo rosso quando siamo short, no sfondo quando non siamo in posizione //color.new(color.red, 99): na)\r\n\r\n\r\n// Plot No Trading Allowed giorni da 1 a 7 1 \u00e8 domenica. Mesi da 1 a 12 1 \u00e8 Gennaio. //\r\n\r\n// giorni_esclusi = dayofweek(time)\r\n// plotshape(giorni_esclusi[1] == 2 ? giorni_esclusi : na, color=color.green, title=\"giorni_esclusi\")\r\n// mesi_esclusi = month(time)\r\n// plotshape(mesi_esclusi[1] == 9 ? mesi_esclusi : na, color=color.yellow, title=\"mesi_esclusi\")\r\n\r\n\r\n// Qui abbiamo in delay buy, sell, close command: ,\"delay\":\"15\" per dare il tempo di cancellare prima eventuali ordini pendenti e poi entrare in posizione\r\n// Il cancel command non deve avere il delay.\r\nbuy_command = 'BUY COMMAND'\r\nsell_command = 'SELL COMMAND'\r\nclose_command = 'CLOSE COMMAND'\r\n//cancel_command = 'CANCEL COMMAND'\r\n\r\n\r\n// Start Entry Conditions Long And Short //\r\nentry_long = close > baseLine and conversionLine>baseLine and close>spanB  and close > ema_long  and boom_bar_long_normal and inDateRange and not onlyShort and in_normal and not in_more_aggressive and not in_less_aggressive\r\nentry_long_more_aggressive = close > baseLine and conversionLine>baseLine and close>spanB  and close > ema_long  and boom_bar_long_more_aggressive and inDateRange and not onlyShort and in_more_aggressive and not in_normal and not in_less_aggressive\r\nentry_long_less_aggressive = close > baseLine and conversionLine>baseLine and close>spanB  and close > ema_long  and boom_bar_long_less_aggressive and inDateRange and not onlyShort and in_less_aggressive and not in_normal and not in_more_aggressive\r\nentry_short = close < baseLine and conversionLine<baseLine and close<spanB  and close < ema_short and boom_bar_short and inDateRange and not onlyLong and ((in_normal and not in_more_aggressive and not in_less_aggressive) or (in_more_aggressive and not in_normal and not in_less_aggressive) or (in_less_aggressive and not in_normal and not in_more_aggressive))\r\n//  End Entry Conditions Long And Short //\r\n\r\n\r\n// Start Exit Conditions Long And Short //\r\nexit_long = close < baseLine\r\nexit_short = close > baseLine \r\n// End Exit Conditions Long And Short //\r\n\r\nplot(strategy.opentrades)\r\n\r\n\r\n// Entry Exit Long / Short\r\nif entry_long // and strategy.opentrades == 0\r\n    strategy.entry('long', strategy.long, alert_message = \"Open Long Position\")//, comment = buy_command)\r\nif entry_long_more_aggressive\r\n    strategy.entry('long', strategy.long, alert_message = \"Open Long Position More Aggressive\")//, comment = buy_command)\r\nif entry_long_less_aggressive\r\n    strategy.entry('long', strategy.long, alert_message = \"Open Long Position Less Aggressive\")//, comment = buy_command)\r\nif exit_long \r\n    strategy.close(id='long', alert_message = \"Close Long Position\")//, comment = close_command)\r\n\r\nif entry_short // and strategy.opentrades == 0\r\n    strategy.entry('short', strategy.short, alert_message = \"Open Short Position\")//, comment = sell_command)\r\nif exit_short \r\n    strategy.close(id='short', alert_message = \"Close Short Position\")//, comment = close_command)\r\n\r\n\r\n// Nome Alert: Over-The-Clouds ETH/USDT.P BYBIT 4H\r\n// Commento Alert: {{strategy.order.comment}}\r\n// Webhook Classico Pi\u00f9 Sicuro Ma Pi\u00f9 Lento: https://alerts.tv-hub.org  \r\n// Webhook Nuovo Meno Sicuro Ma Pi\u00f9 Veloce: https://alerts.tv-hub.org/api/ExecuteTradeSignalClassic\r\n\r\n\r\n// ------- Inizio Calcolatore Size Posizioni Aperte E Size Posizioni Residue E Segna Con Una Croce Se Abbiamo Realizzato Un Profitto ------- // \r\n                                   // Il Segno Croce Profitto Realizzato Non Funziona Sullo Swing Posizione //\r\n\r\n// bought = strategy.position_size[0]> strategy.position_size[1]\r\n// Close_TP = false    \r\n// Close_TP := strategy.position_size[1] - strategy.position_size[0] and strategy.position_size[1] != 0 and strategy.position_size[0] != 0\r\n    \r\n// plotshape(Close_TP,title=\"Close_TP\", style=shape.xcross, color=color.blue, size =size.small, editable = true)\r\n// plot(strategy.position_size[1],\"Position Old\")\r\n// plot(strategy.position_size,\"Position\")\r\n\r\n// ------- Fine Calcolatore Size Posizioni Aperte E Size Posizioni Residue E Segna Con Una Croce Se Abbiamo Realizzato Un Profitto ------- // \r\n\r\n\r\n// ----------------- Inizio Tabella risultati mensili. Per visualizzare andare nelle impostazioni propriet\u00e0 e spuntare ad ogni tick -----------------\r\n\r\n// new_month = month(time) != month(time[1])\r\n// new_year  = year(time)  != year(time[1])\r\n\r\n// eq = strategy.equity\r\n\r\n// bar_pnl = eq / eq[1] - 1\r\n\r\n// cur_month_pnl = 0.0\r\n// cur_year_pnl  = 0.0\r\n\r\n// // Current Monthly P&L\r\n// cur_month_pnl := new_month ? 0.0 : \r\n//                  (1 + cur_month_pnl[1]) * (1 + bar_pnl) - 1 \r\n\r\n// // Current Yearly P&L\r\n// cur_year_pnl := new_year ? 0.0 : \r\n//                  (1 + cur_year_pnl[1]) * (1 + bar_pnl) - 1  \r\n\r\n// // Arrays to store Yearly and Monthly P&Ls\r\n// var month_pnl  = array.new_float(0)\r\n// var month_time = array.new_int(0)\r\n\r\n// var year_pnl  = array.new_float(0)\r\n// var year_time = array.new_int(0)\r\n\r\n// last_computed = false\r\n\r\n// if (not na(cur_month_pnl[1]) and (new_month or barstate.islast))\r\n//     if (last_computed[1])\r\n//         array.pop(month_pnl)\r\n//         array.pop(month_time)\r\n\r\n//     array.push(month_pnl , cur_month_pnl[1])\r\n//     array.push(month_time, time[1])\r\n\r\n// if (not na(cur_year_pnl[1]) and (new_year or barstate.islast))\r\n//     if (last_computed[1])\r\n//         array.pop(year_pnl)\r\n//         array.pop(year_time)\r\n\r\n//     array.push(year_pnl , cur_year_pnl[1])\r\n//     array.push(year_time, time[1])\r\n\r\n// last_computed := barstate.islast ? true : nz(last_computed[1])\r\n\r\n// // Monthly P&L Table    \r\n// var monthly_table = table(na)\r\n// prec      = input(2, title = \"Return Precision\")\r\n\r\n// if (barstate.islast)\r\n//     monthly_table := table.new(position.bottom_right, columns = 14, rows = array.size(year_pnl) + 1, bgcolor=#0F0F0F,border_width=1,border_color=#000000)\r\n\r\n//     table.cell(monthly_table, 0,  0, \"\",     text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n//     table.cell(monthly_table, 1,  0, \"Jan\",  text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n//     table.cell(monthly_table, 2,  0, \"Feb\",  text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n//     table.cell(monthly_table, 3,  0, \"Mar\",  text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n//     table.cell(monthly_table, 4,  0, \"Apr\",  text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n//     table.cell(monthly_table, 5,  0, \"May\",  text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n//     table.cell(monthly_table, 6,  0, \"Jun\",  text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n//     table.cell(monthly_table, 7,  0, \"Jul\",  text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n//     table.cell(monthly_table, 8,  0, \"Aug\",  text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n//     table.cell(monthly_table, 9,  0, \"Sep\",  text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n//     table.cell(monthly_table, 10, 0, \"Oct\",  text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n//     table.cell(monthly_table, 11, 0, \"Nov\",  text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n//     table.cell(monthly_table, 12, 0, \"Dec\",  text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n//     table.cell(monthly_table, 13, 0, \"Year\", text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n\r\n\r\n//     for yi = 0 to array.size(year_pnl) - 1\r\n//         table.cell(monthly_table, 0,  yi + 1, str.tostring(year(array.get(year_time, yi))), text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n\r\n//         y_color = array.get(year_pnl, yi) > 0 ? color.lime : color.red\r\n//         table.cell(monthly_table, 13, yi + 1, str.tostring(math.round(array.get(year_pnl, yi) * 100, prec)), bgcolor = y_color)\r\n\r\n//     for mi = 0 to array.size(month_time) - 1\r\n//         m_row   = year(array.get(month_time, mi))  - year(array.get(year_time, 0)) + 1\r\n//         m_col   = month(array.get(month_time, mi)) \r\n//         m_color = array.get(month_pnl, mi) > 0 ? color.lime : color.red\r\n\r\n//         table.cell(monthly_table, m_col, m_row, str.tostring(math.round(array.get(month_pnl, mi) * 100, prec)), bgcolor = m_color)\r\n\r\n// ----------------- Fine Tabella risultati mensili. Per visualizzare andare nelle impostazioni propriet\u00e0 e spuntare ad ogni tick -----------------"
    ],
    [
      "fqnvrLX1",
      "TrafficLight.ino",
      "ripred",
      "C++",
      "Thursday 8th of June 2023 03:09:49 PM CDT",
      "// \r\n// TrafficLight.ino\r\n// \r\n\r\nenum MagicNumbers {\r\n    // alias' for the 3 sides\r\n         N = 0,\r\n         E = 1,\r\n         S = 2,\r\n\r\n    // alias' for the two sets of traffic: NS and EW\r\n        NS = 0,\r\n        EW = 1,\r\n\r\n    // alias' for the 3 colors\r\n     GREEN = 0,\r\n    YELLOW = 1,\r\n       RED = 2,\r\n\r\n    // motion sensor pin at 12\r\n    motionSensorPin = 12,\r\n};\r\n\r\n\r\n// \r\n// LED pin definitions array:\r\n// \r\nint pins[3][3];\r\n\r\n// \r\n// Global Variables\r\n// \r\nbool motionDetected = false;\r\n\r\n// \r\n// Current traffic flow\r\n// \r\nint flowing = NS;\r\n\r\n// \r\n// Preset Color Patterns:\r\n//                       G     Y     R\r\nint   greenOnly[3] = { HIGH,  LOW,  LOW };\r\nint  yellowOnly[3] = {  LOW, HIGH,  LOW };\r\nint     redOnly[3] = {  LOW,  LOW, HIGH };\r\nint yellowGreen[3] = { HIGH, HIGH,  LOW };\r\n\r\n\r\n// \r\n// set the 3 lights on one of the sides\r\n// \r\nvoid set_side(int dir, int colors[3]) {\r\n    for (int color = GREEN; color <= RED; color++) {\r\n        digitalWrite(pins[dir][color], colors[color]);\r\n    }\r\n}\r\n\r\n\r\n// \r\n// Sets the current flow of traffic to the specified colors\r\n// \r\nvoid set_green() {\r\n    if (flowing == NS) {\r\n        set_side(N, greenOnly);\r\n        set_side(E,   redOnly);\r\n        set_side(S, greenOnly);\r\n    }\r\n    else {\r\n        set_side(N,   redOnly);\r\n        set_side(E, greenOnly);\r\n        set_side(S,   redOnly);\r\n    }\r\n}\r\n\r\n\r\nvoid set_caution() {\r\n    if (flowing == NS) {\r\n        set_side(N, yellowGreen);\r\n        set_side(S, yellowGreen);\r\n    }\r\n    else {\r\n        set_side(E, yellowGreen);\r\n    }\r\n}\r\n\r\n\r\nvoid change_flow() {\r\n    if (flowing == NS) {\r\n        flowing = EW;\r\n    }\r\n    else {\r\n        flowing = NS;\r\n    }\r\n}\r\n\r\n\r\nvoid setup() {\r\n    delay(500);\r\n    Serial.begin(115200);\r\n    delay(500);\r\n\r\n    // configure the input pin\r\n    pinMode(motionSensorPin, INPUT);\r\n    \r\n    // configure the output pins\r\n    for (int side = N; side <= S; side++) {\r\n        for (int color = GREEN; color <= RED; color++) {\r\n            // calculate the pin #\r\n            int pin = color + (side * 3) + 2;\r\n\r\n            // set the pin mode: (INPUT, INPUT_PULLUP, or OUTPUT)\r\n            pinMode(pin, OUTPUT);\r\n\r\n            // remember the pin numbers\r\n            pins[side][color] = pin;\r\n        }\r\n    }\r\n\r\n    set_green();\r\n}\r\n\r\n\r\nvoid loop() {\r\n    motionDetected = digitalRead(motionSensorPin);\r\n\r\n    if (motionDetected) {\r\n        set_caution();  // sets green and yellow in the current flow direction\r\n        delay(5000);\r\n        change_flow();  // change from NS flow to EW or from EW to NS flow\r\n        set_green();    // sets green in current flow direction and red in the other direction\r\n    }\r\n}\r\n"
    ],
    [
      "5JBucAYE",
      "Untitled",
      "robkatt",
      "Lua",
      "Thursday 8th of June 2023 02:58:24 PM CDT",
      "local modem = peripheral.find(\"modem\")\r\nmodem.open(42131)\r\nmodem.transmit(42131,42131,\"door\")\r\nterm.clear()\r\n\r\n\r\n"
    ],
    [
      "2wJmqGNc",
      "prompt",
      "CR7CR7",
      "JavaScript",
      "Thursday 8th of June 2023 02:34:09 PM CDT",
      "// Variables for prompt\r\nvar originalPrompt = window.prompt;\r\nvar nextPromptResult = false;\r\nvar recordedPrompt = null;\r\n\r\n// Variables for confirm\r\nvar originalConfirmation = window.confirm;\r\nvar nextConfirmationResult = false;\r\nvar recordedConfirmation = null;\r\n\r\n// Variables for alert\r\nvar originalAlert = window.alert;\r\nvar nextAlertResult = false;\r\nvar recordedAlert = null;\r\n\r\n// Function to get the frame location\r\nfunction getFrameLocation() {\r\n  let frameLocation = \"\";\r\n  let currentWindow = window;\r\n  let currentParentWindow;\r\n  while (currentWindow !== window.top) {\r\n    currentParentWindow = currentWindow.parent;\r\n    for (let idx = 0; idx < currentParentWindow.frames.length; idx++) {\r\n      if (currentParentWindow.frames[idx] === currentWindow) {\r\n        frameLocation = \":\" + idx + frameLocation;\r\n        currentWindow = currentParentWindow;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  frameLocation = \"root\" + frameLocation;\r\n  return frameLocation;\r\n}\r\n\r\n// Function to handle prompt in non-top windows\r\nfunction handlePromptInNonTopWindows(text, defaultText) {\r\n  if (document.body.hasAttribute(\"SideeXPlayingFlag\")) {\r\n    return window.top.prompt(text, defaultText);\r\n  } else {\r\n    let result = originalPrompt(text, defaultText);\r\n    let frameLocation = getFrameLocation();\r\n    window.top.postMessage({\r\n      direction: \"from-page-script\",\r\n      recordedType: \"prompt\",\r\n      recordedMessage: text,\r\n      recordedResult: result,\r\n      frameLocation: frameLocation\r\n    }, \"*\");\r\n    return result;\r\n  }\r\n}\r\n\r\n// Function to handle confirm in non-top windows\r\nfunction handleConfirmInNonTopWindows(text) {\r\n  if (document.body.hasAttribute(\"SideeXPlayingFlag\")) {\r\n    return window.top.confirm(text);\r\n  } else {\r\n    let result = originalConfirmation(text);\r\n    let frameLocation = getFrameLocation();\r\n    window.top.postMessage({\r\n      direction: \"from-page-script\",\r\n      recordedType: \"confirm\",\r\n      recordedMessage: text,\r\n      recordedResult: result,\r\n      frameLocation: frameLocation\r\n    }, \"*\");\r\n    return result;\r\n  }\r\n}\r\n\r\n// Function to handle alert in non-top windows\r\nfunction handleAlertInNonTopWindows(text) {\r\n  if (document.body.hasAttribute(\"SideeXPlayingFlag\")) {\r\n    recordedAlert = text;\r\n    window.top.postMessage({\r\n      direction: \"from-page-script\",\r\n      response: \"alert\",\r\n      value: recordedAlert\r\n    }, \"*\");\r\n    return;\r\n  } else {\r\n    let result = originalAlert(text);\r\n    let frameLocation = getFrameLocation();\r\n    window.top.postMessage({\r\n      direction: \"from-page-script\",\r\n      recordedType: \"alert\",\r\n      recordedMessage: text,\r\n      recordedResult: result,\r\n      frameLocation: frameLocation\r\n    }, \"*\");\r\n    return result;\r\n  }\r\n}\r\n\r\n// Function to handle prompt in top window\r\nfunction handlePromptInTopWindow(text, defaultText) {\r\n  if (document.body.hasAttribute(\"setPrompt\")) {\r\n    recordedPrompt = text;\r\n    document.body.removeAttribute(\"setPrompt\");\r\n    return nextPromptResult;\r\n  } else {\r\n    let result = originalPrompt(text, defaultText);\r\n    let frameLocation = getFrameLocation();\r\n    window.top.postMessage({\r\n      direction: \"from-page-script\",\r\n      recordedType: \"prompt\",\r\n      recordedMessage: text,\r\n      recordedResult: result,\r\n      frameLocation: frameLocation\r\n    }, \"*\");\r\n    return result;\r\n  }\r\n}\r\n\r\n// Function to handle confirm in top window\r\nfunction handleConfirmInTopWindow(text) {\r\n  if (document.body.hasAttribute(\"setConfirm\")) {\r\n    recordedConfirmation = text;\r\n    document.body.removeAttribute(\"setConfirm\");\r\n    return nextConfirmationResult;\r\n  } else {\r\n    let result = originalConfirmation(text);\r\n    let frameLocation = getFrameLocation();\r\n    window.top.postMessage({\r\n      direction: \"from-page-script\",\r\n      recordedType: \"confirm\",\r\n      recordedMessage: text,\r\n      recordedResult: result,\r\n      frameLocation: frameLocation\r\n    }, \"*\");\r\n    return result;\r\n  }\r\n}\r\n\r\n// Function to handle alert in top window\r\nfunction handleAlertInTopWindow(text) {\r\n  if (document.body.hasAttribute(\"SideeXPlayingFlag\")) {\r\n    recordedAlert = text;\r\n    window.top.postMessage({\r\n      direction: \"from-page-script\",\r\n      response: \"alert\",\r\n      value: recordedAlert\r\n    }, \"*\");\r\n    return;\r\n  } else {\r\n    let result = originalAlert(text);\r\n    let frameLocation = getFrameLocation();\r\n    window.top.postMessage({\r\n      direction: \"from-page-script\",\r\n      recordedType: \"alert\",\r\n      recordedMessage: text,\r\n      recordedResult: result,\r\n      frameLocation: frameLocation\r\n    }, \"*\");\r\n    return result;\r\n  }\r\n}\r\n\r\n// Override prompt function\r\nif (window !== window.top) {\r\n  window.prompt = function(text, defaultText) {\r\n    return handlePromptInNonTopWindows(text, defaultText);\r\n  };\r\n\r\n  window.confirm = function(text) {\r\n    return handleConfirmInNonTopWindows(text);\r\n  };\r\n\r\n  window.alert = function(text) {\r\n    return handleAlertInNonTopWindows(text);\r\n  };\r\n} else {\r\n  window.prompt = function(text, defaultText) {\r\n    return handlePromptInTopWindow(text, defaultText);\r\n  };\r\n\r\n  window.confirm = function(text) {\r\n    return handleConfirmInTopWindow(text);\r\n  };\r\n\r\n  window.alert = function(text) {\r\n    return handleAlertInTopWindow(text);\r\n  };\r\n}\r\n\r\n// Play window methods\r\nif (window === window.top) {\r\n  window.addEventListener(\"message\", function(event) {\r\n    if (event.source === window && event.data && event.data.direction === \"from-content-script\") {\r\n      let result = undefined;\r\n      switch (event.data.command) {\r\n        case \"setNextPromptResult\":\r\n          nextPromptResult = event.data.target;\r\n          document.body.setAttribute(\"setPrompt\", true);\r\n          window.postMessage({\r\n            direction: \"from-page-script\",\r\n            response: \"prompt\"\r\n          }, \"*\");\r\n          break;\r\n        case \"getPromptMessage\":\r\n          result = recordedPrompt;\r\n          recordedPrompt = null;\r\n          window.postMessage({\r\n            direction: \"from-page-script\",\r\n            response: \"prompt\",\r\n            value: result\r\n          }, \"*\");\r\n          break;\r\n        case \"setNextConfirmationResult\":\r\n          nextConfirmationResult = event.data.target;\r\n          document.body.setAttribute(\"setConfirm\", true);\r\n          window.postMessage({\r\n            direction: \"from-page-script\",\r\n            response: \"confirm\"\r\n          }, \"*\");\r\n          break;\r\n        case \"getConfirmationMessage\":\r\n          result = recordedConfirmation;\r\n          recordedConfirmation = null;\r\n          try {\r\n            console.error(\"no\");\r\n            window.postMessage({\r\n              direction: \"from-page-script\",\r\n              response: \"confirm\",\r\n              value: result\r\n            }, \"*\");\r\n          } catch (e) {\r\n            console.error(e);\r\n          }\r\n          break;\r\n        case \"setNextAlertResult\":\r\n          nextAlertResult = event.data.target;\r\n          document.body.setAttribute(\"setAlert\", true);\r\n          window.postMessage({\r\n            direction: \"from-page-script\",\r\n            response: \"alert\"\r\n          }, \"*\");\r\n          break;\r\n      }\r\n    }\r\n  });\r\n}\r\n"
    ],
    [
      "Y8L8gHn8",
      "Untitled",
      "robkatt",
      "Lua",
      "Thursday 8th of June 2023 02:27:26 PM CDT",
      "local modem = peripheral.find(\"modem\") \r\nmodem.open(42131)\r\n\r\nDoor = true\r\nwhile true do\r\nlocal event, side, channel, replyChannel, message, distance = os.pullEvent(\"modem_message\")\r\n\r\nif (channel == 42131) then\r\n    \r\n    if(tostring(message) ==\"door\") then\r\n        \r\n        if (Door == true) then\r\n            print(\"open\")\r\n            redstone.setOutput(\"right\", false)\r\n            Door = false\r\n         \r\n        elseif (Door == false) then\r\n            print(\"close\")\r\n            redstone.setOutput(\"right\", true)\r\n            Door = true\r\n        end\r\n\r\n    end\r\nend\r\nend\r\n"
    ],
    [
      "WwLXhPUQ",
      "shoppingList",
      "CR7CR7",
      "JavaScript",
      "Thursday 8th of June 2023 02:20:04 PM CDT",
      "function addEventListenersToElement(element) {\r\n  element.addEventListener(\"click\", () => {\r\n    element.classList.toggle(\"done\");\r\n  });\r\n\r\n  var deleteButton = element.querySelector(\"button\");\r\n  deleteButton.addEventListener(\"click\", () => {\r\n    element.remove();\r\n  });\r\n}\r\n\r\nfunction addEventListenersToListElements() {\r\n  var liArray = document.querySelectorAll(\"li\");\r\n  liArray.forEach(addEventListenersToElement);\r\n}\r\n\r\nfunction createListElement() {\r\n  var li = document.createElement(\"li\");\r\n  li.appendChild(document.createTextNode(input.value + \" \"));\r\n\r\n  var deleteButton = document.createElement(\"button\");\r\n  deleteButton.appendChild(document.createTextNode(\"Delete\"));\r\n  li.appendChild(deleteButton);\r\n\r\n  ul.appendChild(li);\r\n  input.value = \"\";\r\n\r\n  addEventListenersToElement(li);\r\n}\r\n\r\n// Call addEventListenersToListElements() once initially\r\naddEventListenersToListElements();\r\n"
    ],
    [
      "BBvf6AGp",
      "Hacking tightVNC",
      "Mihao",
      "Bash",
      "Thursday 8th of June 2023 02:18:07 PM CDT",
      "# Aktualizacja paczek apt-get\r\nsudo apt-get update\r\n\r\n# instalacja paczki libc6-dev\r\n# paczka ta moze wymagac usuniecia poprzedniej wersji\r\nsudo apt-get -y install libc6-dev\r\n\r\n# WYKONUJEMY TYLKO GDY polecenie wy\u017cej nie przejdzie i powtarzamy polecenie powy\u017cej\r\napt-get remove binutils\r\n\r\n# instalacja tight server-a (je\u017celi bedzie pyta\u0107 o jakie\u015b zgody to zgadzamy si\u0119) \r\nsudo apt install tightvncserver \r\n\r\n# po instalacji modyfikujemy plik - slowo kali moze wymagac zmiany jezeli ktos zmienil konto uzytkownika lub uzytkonwnik\r\n# nazywa sie root\r\n\r\nnano /home/kali/.vnc/xstartup \r\n\r\n# kasujemy z powyzszego pliku wszystko i wklejamy to co jest ponizej - bez tego nie bedzie obrazu\r\n# Przy kopiowaniu najlepiej u\u017cy\u0107 myszki i po skasowaniu wszystkiego nacisn\u0105\u0107 PPM i paste\r\n# zapisujemy za pomoca ctrl + x i klikamy literke Y i enter\r\n\r\n#!/bin/sh\r\nunset SESSION_MANAGER\r\nunset DBUS_SESSION_BUS_ADDRESS\r\nstartxfce4 &\r\n[ -x /etc/vnc/xstartup ] && exec /etc/vnc/xstartup\r\n[ -r $HOME/.Xresources ] && xrdb $HOME/.Xresources\r\nxsetroot -solid grey &\r\nvncconfig -iconic &\r\n\r\n# zmieniamy prawa dostepu do pliku i pozwalamy na uruchamianie (ta fala to tylda pod klawiszem escape) \r\n\r\nchmod +x ~/.vnc/xstartup\r\n\r\n# uruchomienie  (przy pierwszym uruchomieniu poprosi o has\u0142o ktore trzeba ZAPAMIETAC) \r\n\r\nvncserver\r\n\r\n#zakonczenie dzialania serwera\r\n\r\nvncserver -kill :1\r\n\r\n"
    ],
    [
      "YckWt90W",
      "PHP sqlite3 to CSV",
      "metalx1000",
      "PHP",
      "Thursday 8th of June 2023 02:15:18 PM CDT",
      "<?php\r\n// Copyright (C) 2023 Kris Occhipinti\r\n// https://filmsbykris.com\r\n//\r\n// This program is free software; you can redistribute it and/or\r\n// modify it under the terms of the GNU Affero General Public\r\n// License as published by the Free Software Foundation; \r\n// version 3 of the License.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n// Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Lesser General Public License\r\n// along with this program; if not, write to the Free Software Foundation,\r\n// Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n// https://www.gnu.org/licenses/agpl-3.0.txt\r\nheader('Content-Type: text/csv');\r\nheader('Content-Disposition: attachment; filename=\"tshirt-orders.csv\"');\r\n$db = new SQLite3('db/orders.db');\r\n$results = $db->query('SELECT * FROM orders');\r\n$data = array();\r\necho \"Order Number,Name,Email,s,m,l,xl,xxl,picked up,paid,style,xxxl,xxxxl\\n\";\r\nwhile ($row = $results->fetchArray(SQLITE3_ASSOC)) {\r\necho implode(array_values($row), \",\") . \"\\n\";\r\n}\r\n\r\n?>\r\n"
    ],
    [
      "304HWk4X",
      "dp_me",
      "Korotkodul",
      "Python",
      "Thursday 8th of June 2023 02:11:55 PM CDT",
      "n = 5\r\nF0 = [0] * (n + 1)\r\nF00 = [0] * (n + 1)\r\nF1 = [0] * (n + 1)\r\nF11 = [0] * (n + 1)\r\nF0[1] = 1\r\nF1[1] = 1\r\nF00[2] = 1\r\nF11[2] = 1\r\nF0[2] = 1\r\nF1[2] = 1\r\n\r\nfor i in range(3,n + 1):\r\n    F0[i] = F0[i-1] + F1[i-1] + F11[i-1]\r\n    F1[i] = F1[i-1] + F0[i-1] + F00[i-1]\r\n    F00[i] = F1[i-1] + F11[i-1]\r\n    F11[i] = F0[i-1] + F00[i-1]\r\n\r\nprint(F0)\r\nprint(F1)\r\nprint(F00)\r\nprint(F11)\r\n#R = F0[n] + F00[n] + F1[n] + F11[n]\r\n#print(R)\r\n"
    ],
    [
      "s6HhkYpL",
      "dp_them",
      "Korotkodul",
      "Python",
      "Thursday 8th of June 2023 02:11:40 PM CDT",
      "n = 5\r\nF0 = [0] * (n + 1)\r\nF00 = [0] * (n + 1)\r\nF1 = [0] * (n + 1)\r\nF11 = [0] * (n + 1)\r\nF0[1] = 1\r\nF1[1] = 1\r\nfor i in range(2, n + 1):\r\n    F0[i] = F1[i - 1] + F11[i - 1]\r\n    F1[i] = F0[i - 1] + F00[i - 1]\r\n    F00[i] = F0[i - 1]\r\n    F11[i] = F1[i - 1]\r\n\r\nprint(F0)\r\nprint(F1)\r\nprint(F00)\r\nprint(F11)\r\n#R = F0[n] + F00[n] + F1[n] + F11[n]\r\n#print(R)"
    ],
    [
      "u1r0wP5x",
      "Logger",
      "Carnality",
      "C#",
      "Thursday 8th of June 2023 01:57:10 PM CDT",
      "using System;\r\nusing System.IO;\r\n\r\nnamespace Logging\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            \r\n        }\r\n    }\r\n\r\n    public class ConsoleLogWriter : ILogger\r\n    {\r\n        public void WriteError(string message)\r\n        {\r\n            Console.WriteLine(message);\r\n        }\r\n    }\r\n\r\n    public class FileLogWriter : ILogger\r\n    {\r\n        private string _nameFile = \"\";\r\n\r\n        public FileLogWriter(string nameFile)\r\n        {\r\n            _nameFile = nameFile;\r\n        }\r\n\r\n        public void WriteError(string message)\r\n        {\r\n            File.WriteAllText(_nameFile, message);\r\n        }\r\n    }\r\n\r\n    public class SecureLogWriter : ILogger\r\n    {\r\n        private ILogger _logger;\r\n\r\n        public SecureLogWriter(ILogger logger)\r\n        {\r\n            _logger = logger;\r\n        }\r\n\r\n        public void WriteError(string message)\r\n        {\r\n            if (DateTime.Now.DayOfWeek == DayOfWeek.Friday)\r\n            {\r\n                _logger.WriteError(message);\r\n            }\r\n        }\r\n    }\r\n\r\n    public class SecureConsoleLogWriter : SecureLogWriter\r\n    {\r\n        public SecureConsoleLogWriter(ConsoleLogWriter consoleLogWriter) : base(consoleLogWriter)\r\n        {\r\n        }\r\n    }\r\n\r\n    public class SecureFileLogWriter : SecureLogWriter\r\n    {\r\n        public SecureFileLogWriter(FileLogWriter fileLogWriter) : base(fileLogWriter)\r\n        {\r\n        }\r\n    }\r\n\r\n    public class SecureFileAndConsoleLogWriter : SecureLogWriter\r\n    {\r\n        private ConsoleLogWriter _consoleLogWriter;\r\n\r\n        public SecureFileAndConsoleLogWriter(ConsoleLogWriter consoleLogWriter, FileLogWriter fileLogWriter) : base(fileLogWriter)\r\n        {\r\n            _consoleLogWriter = consoleLogWriter;\r\n        }\r\n\r\n        public new void WriteError(string message)\r\n        {\r\n            base.WriteError(message);\r\n\r\n            _consoleLogWriter.WriteError(message);\r\n        }\r\n    }\r\n\r\n    public class Pathfinder : ILogger\r\n    {\r\n        public Pathfinder(ILogger logger, string message)\r\n        {\r\n            logger.WriteError(message);\r\n        }\r\n\r\n        public void Find(ILogger logger, string message)\r\n        {\r\n            logger.WriteError(message);\r\n        }\r\n\r\n        public void WriteError(string message)\r\n        {\r\n            Console.Write(message);\r\n        }\r\n    }\r\n\r\n    public interface ILogger\r\n    {\r\n        void WriteError(string message);\r\n    }\r\n}\r\n"
    ],
    [
      "4gZ2rSth",
      "EsEnigma",
      "j0h",
      "C",
      "Thursday 8th of June 2023 01:51:41 PM CDT",
      "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <ctype.h>\r\n#include <unistd.h>\r\nint main(int argc, char ** argv){\r\n\t/*\r\n\t * Read a file. for each character, offset by N for the first value,\r\n\t * for every other value, N+previous char value. \r\n\t * Example: enigma -n 3 ABC \r\n\t *    A+3=D=4 \r\n\t *    B+4= G=6\r\n\t *    C+7=J=10\r\n\t * */\r\n\t \r\n\t \tif(argc !=3){\r\n\t\tprintf(\"Usage: %s <integer offset> <inputfile.txt>\\n\", argv[0]);\r\n\treturn -1;\r\n\t\t}\r\n \tint offset = atoi(argv[1]);\r\n\t\t//printf(\"Offset : %d\\n\",offset);\r\n\tFILE *file1=fopen(argv[2], \"r\"); //file to decode\r\n\r\n\t \tif(file1==NULL ){\r\n\t\tprintf(\"Input Files ( %s ) Not Found\\n\", argv[2]);\r\n\t\treturn 0;\r\n\t\t}\r\n\t\tint count =0;\r\n\t\t\tchar c;  //file io char\r\n\t\tunsigned\tint p; // previous character Index\r\n\twhile(c!=EOF){\r\n\t\tc =tolower(fgetc(file1));\r\n\t\t\tif (count ==0){\r\n\t\t\tp=c+offset;\r\n\t\t\t//p=offset;\r\n\t\t\tprintf(\"char: %c  Offset: %d value: %c \\n\",c,offset,c+offset);\r\n\t\t\tcount ++;\r\n\t\t\toffset=p;\r\n\t\t\t} \r\n\t\t\tif (isalpha(c)>=97 || isalpha(c)<=122){\r\n//get the previous index plus the index of the current value c \r\n//offset = p + (c-'a'+1);\r\np=p-c-'a';\r\nprintf(\"P: %d \\n\",p);\r\noffset = p + (c-'a'+1);\r\n\t\t\r\n\t\t\t//p=p+ (c-'a');\r\n\t\t//\toffset = 1;\r\n//printf(\"char: %c  Offset: %d value: %c \\n\",c,offset, c+offset);\r\n\r\n\r\n\t\t\t\t//deal with other non alphabet characters here\r\n\t\t\t\tprintf(\" \");\r\n\t\t\t\t\r\n\t\t\t\t}\r\n}\r\n\r\n//sleep(10);\r\n//system(\"clear\");\t\t\r\n\treturn 0;\r\n\t}\r\n"
    ],
    [
      "PY1hruCC",
      "Python-based SQL queries - Group by, order by",
      "makispaiktis",
      "Python",
      "Thursday 8th of June 2023 01:42:26 PM CDT",
      "# *********************************************************************\r\n# *********************************************************************\r\n# Step 1 - Setup\r\n# *********************************************************************\r\n# *********************************************************************\r\n\r\nfrom google.cloud import bigquery\r\n\r\n# Create a \"Client\" object\r\nclient = bigquery.Client()\r\n\r\n# Construct a reference to the \"world_bank_intl_education\" dataset\r\ndataset_ref = client.dataset(\"world_bank_intl_education\", project=\"bigquery-public-data\")\r\n\r\n# API request - fetch the dataset\r\ndataset = client.get_dataset(dataset_ref)\r\n\r\n# Construct a reference to the \"international_education\" table\r\ntable_ref = dataset_ref.table(\"international_education\")\r\n\r\n# API request - fetch the table\r\ntable = client.get_table(table_ref)\r\n\r\n# Preview the first five lines of the \"international_education\" table\r\nclient.list_rows(table, max_results=5).to_dataframe()\r\n\r\n\r\n\r\n# *********************************************************************\r\n# *********************************************************************\r\n# Step 2 - Group by, order by\r\n# *********************************************************************\r\n# *********************************************************************\r\n\r\n\r\ncountry_spend_pct_query = \"\"\"\r\n                          SELECT country_name, AVG(value) AS avg_ed_spending_pct\r\n                          FROM `bigquery-public-data.world_bank_intl_education.international_education`\r\n                          WHERE indicator_code = 'SE.XPD.TOTL.GD.ZS' AND year>=2010 and year<=2017\r\n                          GROUP BY country_name\r\n                          ORDER BY avg_ed_spending_pct DESC\r\n                          \"\"\"\r\n\r\n# Set up the query (cancel the query if it would use too much of \r\n# your quota, with the limit set to 1 GB)\r\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)\r\ncountry_spend_pct_query_job = client.query(country_spend_pct_query, job_config=safe_config)\r\n\r\n# API request - run the query, and return a pandas DataFrame\r\ncountry_spending_results = country_spend_pct_query_job.to_dataframe()\r\n# View top few rows of results\r\nprint(country_spending_results.head())\r\n\r\n\r\n# *********************************************************************\r\n# *********************************************************************\r\n# Step 3 - Group by a combination of columns (indicator_code, indicator_name)\r\n# *********************************************************************\r\n# *********************************************************************\r\n\r\ncode_count_query = \"\"\"\r\n                   SELECT indicator_code, indicator_name, COUNT(1) AS num_rows\r\n                   FROM `bigquery-public-data.world_bank_intl_education.international_education`\r\n                   WHERE year = 2016\r\n                   GROUP BY indicator_name, indicator_code\r\n                   HAVING COUNT(1) >= 175\r\n                   ORDER BY COUNT(1) DESC\r\n                   \"\"\"\r\n\r\n# Set up the query\r\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)\r\ncode_count_query_job = client.query(code_count_query, job_config=safe_config)\r\n\r\n# API request - run the query, and return a pandas DataFrame\r\ncode_count_results = code_count_query_job.to_dataframe()\r\n# View top few rows of results\r\nprint(code_count_results.head())\r\n"
    ],
    [
      "tu6yQNCJ",
      "Microsoft.PowerShell_profile.ps1",
      "XenoMorph616",
      "PowerShell",
      "Thursday 8th of June 2023 01:33:54 PM CDT",
      "# Reference: https://stackoverflow.com/a/29806921/7753274\r\n\r\n# Store the following code in $HOME\\Documents\\PowerShell\\Microsoft.PowerShell_profile.ps1\r\n# Reference: https://learn.microsoft.com/powershell/module/microsoft.powershell.core/about/about_profiles?view=powershell-7.3\r\n\r\n# Run the following command once in PowerShell as Administrator before running this script for the first time\r\n# Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope CurrentUser\r\n# Reference: https://learn.microsoft.com/powershell/module/microsoft.powershell.security/set-executionpolicy?view=powershell-7.3\r\n\r\nFunction NPM-Run-Dev {npm run dev}\r\nSet-Alias -Name dev -Value NPM-Run-Dev"
    ],
    [
      "NASGu6mK",
      "test_bots.py",
      "mrmamongo",
      "Python",
      "Thursday 8th of June 2023 01:27:05 PM CDT",
      "import unittest\r\n\r\nimport pytest\r\nfrom fastapi.testclient import TestClient\r\n\r\nfrom src.routers.bots.models import BotCreate, BotRead\r\n\r\n\r\n@pytest.mark.asyncio\r\nasync def test_get_bots_empty(event_loop, session_override, mock_client: TestClient):\r\n    bots = [\r\n        BotCreate(\r\n            bot_token=\"first\", name=\"first\", alias=\"first_bot\", description=\"first_bot\"\r\n        ),\r\n        BotCreate(\r\n            bot_token=\"second\",\r\n            name=\"second\",\r\n            alias=\"second_bot\",\r\n            description=\"second_bot\",\r\n        ),\r\n    ]\r\n\r\n    for bot in bots:\r\n        response = mock_client.post(\"/bot\", data=bot.json())\r\n        print(response.json())\r\n        assert response.status_code == 200\r\n\r\n    response = mock_client.get(\"/bot\")\r\n    print(response.text)\r\n    assert response.json() == [BotRead.parse_obj(bot.dict()).dict() for bot in bots]\r\n"
    ],
    [
      "tizR0X0H",
      "app.py",
      "mrmamongo",
      "Python",
      "Thursday 8th of June 2023 01:26:47 PM CDT",
      "# uvicorn src.main:app --host 0.0.0.0 --port 8000  --reload\r\nimport logging\r\nfrom contextlib import asynccontextmanager\r\n\r\nfrom fastapi import FastAPI\r\n\r\nfrom src.core.config import config\r\nfrom src.db.session import sessionmanager\r\nfrom src.routers import bot_router, channel_router, messages_router, task_router\r\n\r\nlogger = logging.getLogger(__name__)\r\n\r\n\r\ndef get_app(init_db: bool = True):\r\n    lifespan = None\r\n\r\n    if init_db:\r\n        sessionmanager.init(config.db_url(\"postgres+asyncpg\"))\r\n\r\n        @asynccontextmanager\r\n        async def lifespan(app: FastAPI):\r\n            yield\r\n            if sessionmanager._engine is not None:\r\n                await sessionmanager.close()\r\n\r\n    app = FastAPI(title=\"botsAPI\", lifespan=lifespan)\r\n\r\n    @app.on_event(\"startup\")\r\n    async def startup():\r\n        logging.basicConfig(level=logging.INFO)\r\n\r\n    app.include_router(bot_router)\r\n\t# ...other routers\r\n    return app\r\n"
    ],
    [
      "uzS0gZ3t",
      "conftest.py",
      "mrmamongo",
      "Python",
      "Thursday 8th of June 2023 01:26:06 PM CDT",
      "import asyncio\r\nfrom contextlib import ExitStack\r\n\r\nimport pytest\r\nimport pytest_asyncio\r\nfrom fastapi.testclient import TestClient\r\nfrom pytest_postgresql import factories\r\nfrom pytest_postgresql.janitor import DatabaseJanitor\r\n\r\nfrom src.app import get_app\r\nfrom src.db.session import get_session, sessionmanager\r\n\r\n\r\n@pytest_asyncio.fixture(autouse=True)\r\ndef app():\r\n    with ExitStack():\r\n        yield get_app(init_db=False)\r\n\r\n\r\n@pytest_asyncio.fixture\r\ndef mock_client(app):\r\n    with TestClient(app) as c:\r\n        yield c\r\n\r\n\r\ntest_db = factories.postgresql_proc(port=None, dbname=\"test_db\")\r\n\r\n\r\n@pytest_asyncio.fixture(scope=\"session\", autouse=True)\r\ndef event_loop():\r\n    loop = asyncio.get_event_loop_policy().new_event_loop()\r\n    yield loop\r\n    loop.close()\r\n\r\n\r\n@pytest_asyncio.fixture(scope=\"session\", autouse=True)\r\nasync def connection_test(test_db, event_loop):\r\n    pg_host = test_db.host\r\n    pg_port = test_db.port\r\n    pg_user = test_db.user\r\n    pg_db = test_db.dbname\r\n    pg_password = test_db.password\r\n\r\n    with DatabaseJanitor(\r\n            pg_user, pg_host, pg_port, pg_db, test_db.version, pg_password\r\n    ):\r\n        connection_str = f\"postgresql+asyncpg://{pg_user}:@{pg_host}:{pg_port}/{pg_db}\"\r\n        sessionmanager.init(connection_str)\r\n        yield sessionmanager\r\n\r\n        await sessionmanager.close()\r\n\r\n\r\n@pytest_asyncio.fixture(scope=\"function\", autouse=True)\r\nasync def create_tables(connection_test):\r\n    async with sessionmanager.connect() as connection:\r\n        await sessionmanager.drop_all(connection)\r\n        await sessionmanager.create_all(connection)\r\n\r\n\r\n@pytest_asyncio.fixture(scope='function')\r\nasync def session_override(app, connection_test):\r\n    async def get_db_override():\r\n        async with sessionmanager.session() as session:\r\n            yield session\r\n\r\n    app.dependency_overrides[get_session] = get_db_override\r\n"
    ],
    [
      "70KaZnLm",
      "session.py",
      "mrmamongo",
      "Python",
      "Thursday 8th of June 2023 01:25:41 PM CDT",
      "import contextlib\r\nfrom typing import AsyncIterator\r\n\r\nfrom sqlalchemy.ext.asyncio import (\r\n    AsyncConnection,\r\n    AsyncEngine,\r\n    AsyncSession,\r\n    async_sessionmaker,\r\n    create_async_engine,\r\n)\r\n\r\nfrom src.db.models import Base\r\n\r\n\r\nclass DatabaseSessionManager:\r\n    def __init__(self):\r\n        self._engine: AsyncEngine | None = None\r\n        self._sessionmaker: async_sessionmaker | None = None\r\n\r\n    def init(self, host: str):\r\n        self._engine = create_async_engine(host)\r\n        self._sessionmaker = async_sessionmaker(autocommit=False, bind=self._engine)\r\n\r\n    async def close(self):\r\n        if self._engine is None:\r\n            raise Exception(\"DatabaseSessionManager is not initialized\")\r\n        await self._engine.dispose()\r\n        self._engine = None\r\n        self._sessionmaker = None\r\n\r\n    @contextlib.asynccontextmanager\r\n    async def connect(self) -> AsyncIterator[AsyncConnection]:\r\n        if self._engine is None:\r\n            raise Exception(\"DatabaseSessionManager is not initialized\")\r\n\r\n        async with self._engine.begin() as connection:\r\n            try:\r\n                yield connection\r\n            except Exception:\r\n                await connection.rollback()\r\n                raise\r\n\r\n    @contextlib.asynccontextmanager\r\n    async def session(self) -> AsyncIterator[AsyncSession]:\r\n        if self._sessionmaker is None:\r\n            raise Exception(\"DatabaseSessionManager is not initialized\")\r\n\r\n        session = self._sessionmaker()\r\n        try:\r\n            yield session\r\n        except Exception:\r\n            await session.rollback()\r\n            raise\r\n        finally:\r\n            await session.close()\r\n\r\n    # Used for testing\r\n    async def create_all(self, connection: AsyncConnection):\r\n        await connection.run_sync(Base.metadata.create_all)\r\n\r\n    async def drop_all(self, connection: AsyncConnection):\r\n        await connection.run_sync(Base.metadata.drop_all)\r\n\r\n\r\nsessionmanager = DatabaseSessionManager()\r\n\r\n\r\nasync def get_session():\r\n    async with sessionmanager.session() as session:\r\n        yield session\r\n"
    ],
    [
      "X74ZzU4f",
      "Checking even and odd numbers",
      "grodek118",
      "Java",
      "Thursday 8th of June 2023 01:23:15 PM CDT",
      "import java.util.Random;\r\n\r\npublic class Main {\r\n\r\n    public static void main(String[] args) {\r\n\r\n        Random rnd = new Random();\r\n\r\n        int evenNumbers = 0;\r\n        int oddNumbers = 0;\r\n\r\n        for (int i = 0; i < 100; i++)\r\n        {\r\n            int x = rnd.nextInt(100) + 1;\r\n            isEven(x);\r\n        }\r\n    }\r\n\r\n    public static boolean isEven(int number)\r\n    {\r\n\r\n        if ((number % 2) == 0 )\r\n        {\r\n            System.out.println(number + \" is even\");\r\n            return true;\r\n\r\n        }\r\n        else\r\n        {\r\n            System.out.println(number + \" is odd\");\r\n            return false;\r\n        }\r\n    }\r\n}"
    ],
    [
      "KRwMJLwr",
      "Examp_prep",
      "ALEXANDAR_GEORGIEV",
      "Python",
      "Thursday 8th of June 2023 01:22:05 PM CDT",
      "# Christmas_elves\r\nfrom collections import deque\r\n\r\nelves = deque([int(x) for x in input().split()])\r\nmaterials = deque([int(x) for x in input().split()])\r\n\r\ntotal_energy = 0\r\ntotal_toys = 0\r\niterations = 0\r\n\r\nwhile elves and materials:\r\n    elf = elves.popleft()\r\n    material = materials[-1]\r\n\r\n    if elf < 5:\r\n        continue\r\n\r\n    iterations += 1\r\n    current_toys_count = 0\r\n\r\n    if iterations % 3 ==0:\r\n        material *= 2\r\n        current_toys_count += 1\r\n\r\n    if elf >= material:\r\n        total_energy += material\r\n        elf -= material\r\n\r\n        if iterations % 5 != 0: # \u0410\u043a\u043e \u043d\u0435 \u0441\u0438 \u043d\u0430 5-\u0442\u0430\u0442\u0430 \u0438\u0442\u0435\u0440\u0430\u0446\u0438\u044f \u0434\u0430\u0438 \u0438\u0433\u0440\u0430\u0447\u043a\u0438 \u043d\u0430 \u0435\u043b\u0444\r\n            elf += 1\r\n            current_toys_count += 1\r\n\r\n        else:\r\n            current_toys_count = 0\r\n\r\n        materials.pop()\r\n\r\n    else:\r\n        elf *= 2\r\n        current_toys_count = 0\r\n\r\n    total_toys += current_toys_count\r\n\r\n    elves.append(elf)\r\n\r\nprint(f\"Toys: {total_toys}\")\r\nprint(f\"Energy: {total_energy}\")\r\nif elves:\r\n    print(f\"Elves left: {', '.join(str(x) for x in elves)}\")\r\nif materials:\r\n    print(f\"Boxes left: {', '.join(str(x) for x in materials)}\")\r\n\r\n\r\n# Pawn_wars\r\n\r\nSIZE = 8\r\n# Ako \u0420\u0435\u0434\u043e\u0432\u0435\u0442\u0435 \u043c\u0435\u0436\u0434\u0443 \u0431\u0435\u043b\u0438\u0442\u0435 \u0438 \u0447\u0435\u0440\u043d\u0438\u0442\u0435 \u0441\u0430 \u0447\u0435\u0442\u0435\u043d \u0431\u0440\u043e\u0439 -> \u043f\u0435\u0447\u0435\u043b\u044f\u0442 \u0432\u0438\u043d\u0430\u0433\u0438 \u0431\u0435\u043b\u0438\u0442\u0435\r\n# Ako \u0420\u0435\u0434\u043e\u0432\u0435\u0442\u0435 \u043c\u0435\u0436\u0434\u0443 \u0431\u0435\u043b\u0438\u0442\u0435 \u0438 \u0447\u0435\u0440\u043d\u0438\u0442\u0435 \u0441\u0430 ne\u0447\u0435\u0442\u0435\u043d \u0431\u0440\u043e\u0439 -> \u043f\u0435\u0447\u0435\u043b\u044f\u0442 \u0432\u0438\u043d\u0430\u0433\u0438 `\u0447\u0435\u0440\u043d\u0438\u0442\u0435\r\nboard = []\r\npositions = [[], []]\r\n\r\ndef save_positions(search_for, index_to_save, r):\r\n    if search_for in board[r]:\r\n        positions[index_to_save].append(r)\r\n        positions[index_to_save].append(board[r].index(search_for))\r\n\r\n\r\nfor row in range(SIZE):\r\n    board.append([input().split()])\r\n\r\n    save_positions(\"w\", 0, row)\r\n    save_positions(\"b\", 1, row)\r\n\r\nif abs(positions[0][1] - positions[1][1]) != 1 or positions[1][0] > positions[0][0]:\r\n    if SIZE - positions[0][0] - 1 <= positions[1][0]:   # -1 \u0437\u0430\u0449\u043e\u0442\u043e \u0438\u043d\u0434\u0435\u043a\u0441 8 \u0435 \u043d\u0435\u0432\u0430\u043b\u0438\u0434\u0435\u043d \u0438\u043d\u0434\u0435\u043a\u0441 \u0438 \u0431\u0435\u043b\u0438\u0442\u0435 \u0432\u0438\u043d\u0430\u0433\u0438 \u0437\u0430\u043f\u043e\u0447\u0432\u0430\u0442 1-\u0432\u0438\r\n        print(f\"Game over! Black pawn promoted to a queen at {chr(97 + positions[1][1])}1.\")\r\n    else:\r\n        print(f\"Game over! White pawn promoted to a queen at {chr(97 + positions[0][1])}8.\")\r\n\r\nelse:\r\n    place = (positions[0][0] + positions[1][0]) // 2\r\n    # \u0410\u043a\u043e \u0438 \u0434\u0432\u0435\u0442\u0435 \u0441\u0430 \u043d\u0430 \u043d\u0435\u0447\u0435\u0442\u043d\u0438 \u0438\u043b\u0438 \u043d\u0430 \u0447\u0435\u0442\u043d\u0438 -> \u0432\u0438\u043d\u0430\u0433\u0438 \u043f\u0435\u0447\u0435\u043b\u044f\u0442 \u0447\u0435\u0442\u0440\u043d\u0438\u0442\u0435\r\n    if positions[0][0] % 2 == 0 and positions[1][0] % 2:\r\n        print(f\"Game over! Black win, capture on {chr(97 + positions[0][1])}{SIZE - place}.\")  # \u0447\u0435\u0440\u043d\u0438\u0442\u0435 \u043f\u0435\u0447\u0435\u043b\u044f\u0442 \u043d\u043e \u043d\u0430 \u043a\u043e\u043b\u043e\u043d\u0430\u0442\u0430 \u043d\u0430 \u0431\u0435\u043b\u0438\u0442\u0435, \u0437\u0430\u0449\u043e\u0442\u043e \u0432\u0437\u0438\u043c\u0430\u0442 \u043f\u0435\u0448\u043a\u0430\u0442\u0430\r\n    else:\r\n        print(f\"Game over! White win, capture on {chr(97 + positions[1][1])}{SIZE - place}.\")\r\n\r\n# Words_sorting\r\n\r\ndef words_sorting(*words):\r\n    words_dict = {word: sum(map(ord, word)) for word in words}  # map -> ord(letter) for letter in word\r\n\r\n    if sum(words_dict.values()) % 2 ==0:\r\n        return \"\\n\".join([f\"{w} - {s}\" for w, s in sorted(words_dict.items(), key=lambda x: x[0])])\r\n\r\n    return \"\\n\".join([f\"{w} - {s}\" for w, s in sorted(words_dict.items(), key=lambda x: -x[0])])\r\n\r\n# ___________________________ \u041d\u044f\u043c\u0430 \u0412\u0438\u043a\u0430\u043d\u0435 \u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u0442\u0430 ??\r\n"
    ],
    [
      "9RexvZ60",
      "class Number",
      "Fedorov_S_Od",
      "Python",
      "Thursday 8th of June 2023 01:06:48 PM CDT",
      "# 4\r\n// \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0430\u0441\u0441 Number, \u043f\u0440\u0438 \u0446\u0435\u043f\u043e\u0447\u043a\u0435 \u0432\u044b\u0437\u043e\u0432\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0431\u0443\u0434\u0443\u0442 \u0441\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u0447\u0438\u0441\u043b\u0430, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0447\u0442\u043e\u0431\u044b \u0441\u0430\u043c \u043a\u043b\u0430\u0441\u0441 \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0441\u043b\u043e\u0436\u0438\u0442\u044c \u0441 \u0447\u0438\u0441\u043b\u043e\u043c\r\n\r\nprint((Number(2, 1, 3, 54)()(1)()(9) + 10)(10)) # 90\r\n\r\nclass Number(tuple):\r\n    def _init__(self, *args):\r\n        self.args = args\r\n    # def __init__(self, *args):\r\n    #     super().__init__(*args)\r\n    def __call__(self):\r\n        return Number(self + sum(self.args))\r\n    # def __call__(self, *args: Any, **kwds: Any) -> Any:\r\n    #     return super().__call__(*args, **kwds)\r\n      \r\n# class add(int):\r\n#     def __call__(self,n):\r\n#         return add(self+n)\r\n\r\n# print(add(1)(2)(3)) #6\r\n# print(add(1)(2)(3)(4)) #10\r\n# print(add(1)(2)(3)(4)(5)) #15\r\n\r\n# print((Number(2, 1, 3, 54)()(1)()(9) + 10)(10)) # 90"
    ],
    [
      "f1PLH5h7",
      "halaman login",
      "BlackBoY_",
      "PHP",
      "Thursday 8th of June 2023 12:48:14 PM CDT",
      "<?php\r\nsession_start();\r\n\r\n// Fungsi untuk menghasilkan teks CAPTCHA acak\r\nfunction generateCaptchaText($length = 6) {\r\n    $characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    $captchaText = '';\r\n    $charactersLength = strlen($characters);\r\n\r\n    for ($i = 0; $i < $length; $i++) {\r\n        $captchaText .= $characters[rand(0, $charactersLength - 1)];\r\n    }\r\n\r\n    return $captchaText;\r\n}\r\n\r\n// Generate teks CAPTCHA jika belum ada di session\r\nif (!isset($_SESSION['captcha'])) {\r\n    $captchaText = generateCaptchaText();\r\n    $_SESSION['captcha'] = $captchaText;\r\n} else {\r\n    $captchaText = $_SESSION['captcha'];\r\n}\r\n\r\n?>\r\n\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Form Login</title>\r\n</head>\r\n<body>\r\n    <h2>Form Login</h2>\r\n    <?php\r\n    if (isset($_POST['submit'])) {\r\n        $username = $_POST['username'];\r\n        $password = $_POST['password'];\r\n        $captcha = $_POST['captcha'];\r\n\r\n        // Memvalidasi CAPTCHA\r\n        if ($captcha === $_SESSION['captcha']) {\r\n            if ($username === 'admin' && $password === 'admin') {\r\n                echo \"Berhasil login\";\r\n            } else {\r\n                echo \"Username atau password salah\";\r\n            }\r\n        } else {\r\n            echo \"Captcha tidak valid\";\r\n        }\r\n    }\r\n    ?>\r\n    <form method=\"POST\" action=\"\">\r\n        <div>\r\n            <?php echo $_SESSION['captcha'] ?>\r\n            <label for=\"username\">Username:</label>\r\n            <input type=\"text\" id=\"username\" name=\"username\" required>\r\n        </div>\r\n        <div>\r\n            <label for=\"password\">Password:</label>\r\n            <input type=\"password\" id=\"password\" name=\"password\" required>\r\n        </div>\r\n        <div>\r\n            <label for=\"captcha\">CAPTCHA:</label>\r\n            <input type=\"text\" id=\"captcha\" name=\"captcha\" required>\r\n            <img src=\"captcha.php\" alt=\"CAPTCHA Image\">\r\n        </div>\r\n        <div>\r\n            <input type=\"submit\" name=\"submit\" value=\"Login\">\r\n        </div>\r\n    </form>\r\n</body>\r\n</html>\r\n"
    ],
    [
      "Hu0eE2H8",
      "Untitled",
      "funtique",
      "Java",
      "Thursday 8th of June 2023 12:40:50 PM CDT",
      "    @Test\r\n    public void testaddBcc() throws Exception {\r\n        email.addBcc(TestEmails);\r\n        assertEquals(3, email.getBccAddresses().size());\r\n    }\r\n\r\n    @Test\r\n    public void testaddCc() throws Exception {\r\n        email.addCc(TestEmails);\r\n        assertEquals(3, email.getCcAddresses().size());\r\n    }\r\n\r\n\r\n    @Test\r\n    public void testaddReplyTo() throws Exception {\r\n        email.addReplyTo(TestEmails[0], \"Test\");\r\n    }\r\n\r\n\r\n    @Test\r\n    public void testgetHostName() throws Exception {\r\n        assertEquals(\"localhost\", email.getHostName());\r\n    }\r\n\r\n    @Test\r\n    public void testgetMailSession() throws Exception {\r\n       assertEquals(props, email.getMailSession().getProperties());\r\n    }\r\n\r\n\r\n    @Test\r\n    public void testgetSentDate() throws Exception {\r\n        Date date = new Date();\r\n        email.setSentDate(date);\r\n        assertEquals(date, email.getSentDate());\r\n \r\n    }"
    ],
    [
      "Yjx7WCC0",
      "Python-based SQL queries - Group by, Count",
      "makispaiktis",
      "Python",
      "Thursday 8th of June 2023 12:35:44 PM CDT",
      "# **********************************************************************\r\n# **********************************************************************\r\n# Step 1 - Setup\r\n# **********************************************************************\r\n# **********************************************************************\r\n\r\n\r\n# Import\r\nfrom google.cloud import bigquery\r\n\r\n# Create a \"Client\" object\r\nclient = bigquery.Client()\r\n\r\n# Construct a reference to the \"hacker_news\" dataset\r\ndataset_ref = client.dataset(\"hacker_news\", project=\"bigquery-public-data\")\r\n\r\n# API request - fetch the dataset\r\ndataset = client.get_dataset(dataset_ref)\r\n\r\n# Construct a reference to the \"comments\" table\r\ntable_ref = dataset_ref.table(\"comments\")\r\n\r\n# API request - fetch the table\r\ntable = client.get_table(table_ref)\r\n\r\n# Preview the first five lines of the \"comments\" table\r\nclient.list_rows(table, max_results=5).to_dataframe()\r\n\r\n\r\n\r\n\r\n\r\n# **********************************************************************\r\n# **********************************************************************\r\n# Step 2 - Group by\r\n# **********************************************************************\r\n# **********************************************************************\r\n\r\n# Query to select prolific commenters and post counts\r\nprolific_commenters_query = \"\"\"\r\n                            SELECT author, COUNT(1) as NumPosts\r\n                            FROM `bigquery-public-data.hacker_news.comments`\r\n                            GROUP BY author\r\n                            HAVING count(1)>10000\r\n                            \"\"\"\r\n\r\n# Set up the query (cancel the query if it would use too much of \r\n# your quota, with the limit set to 1 GB)\r\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)\r\nquery_job = client.query(prolific_commenters_query, job_config=safe_config)\r\n\r\n# API request - run the query, and return a pandas DataFrame\r\nprolific_commenters = query_job.to_dataframe()\r\n# View top few rows of results\r\nprint(prolific_commenters.head())\r\n\r\n\r\n\r\n# **********************************************************************\r\n# **********************************************************************\r\n# Step 3 - Count\r\n# **********************************************************************\r\n# **********************************************************************\r\n\r\n# Write your query here and figure out the answer\r\ndeleted_query = \"\"\"\r\n                SELECT COUNT(deleted) AS Deleted_Comments\r\n                FROM `bigquery-public-data.hacker_news.comments`\r\n                WHERE deleted = True\r\n                \"\"\"\r\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)\r\nquery_job = client.query(deleted_query, job_config=safe_config)\r\n\r\ndeleted_commenters = query_job.to_dataframe()\r\nprint(deleted_commenters.head())\r\n\r\n"
    ],
    [
      "WEQqgsmg",
      "Example Chart - Swift",
      "Don_Mag",
      "Swift",
      "Thursday 8th of June 2023 12:34:27 PM CDT",
      "// example chart view\r\n\r\nclass BarView: UIView {\r\n\tvar colors: [UIColor] = []\r\n\tvar values: [CGFloat] = []\r\n\tvar hConstraints: [NSLayoutConstraint] = []\r\n\r\n\tpublic func configureBar(maxVal: CGFloat, values: [CGFloat], colors: [UIColor]) {\r\n\t\tguard values.count == colors.count else {\r\n\t\t\tfatalError(\"Values count does not match Colors count!\")\r\n\t\t}\r\n\t\tsubviews.forEach { v in\r\n\t\t\tv.removeFromSuperview()\r\n\t\t}\r\n\t\thConstraints = []\r\n\t\tfor _ in 0..<values.count {\r\n\t\t\tlet seg = UIView()\r\n\t\t\tseg.translatesAutoresizingMaskIntoConstraints = false\r\n\t\t\taddSubview(seg)\r\n\t\t\tNSLayoutConstraint.activate([\r\n\t\t\t\tseg.leadingAnchor.constraint(equalTo: leadingAnchor),\r\n\t\t\t\tseg.trailingAnchor.constraint(equalTo: trailingAnchor),\r\n\t\t\t\tseg.bottomAnchor.constraint(equalTo: bottomAnchor),\r\n\t\t\t])\r\n\t\t\thConstraints.append(seg.heightAnchor.constraint(equalToConstant: 0))\r\n\t\t}\r\n\t\tfor (seg, c) in zip(subviews, colors) {\r\n\t\t\tseg.backgroundColor = c\r\n\t\t}\r\n\t\tvar curPct: CGFloat = 0\r\n\t\tfor (i, v) in values.enumerated() {\r\n\t\t\thConstraints[i].isActive = false\r\n\t\t\tlet seg = subviews[i]\r\n\t\t\tcurPct += v\r\n\t\t\thConstraints[i] = seg.heightAnchor.constraint(equalTo: heightAnchor, multiplier: curPct)\r\n\t\t\thConstraints[i].isActive = true\r\n\t\t}\r\n\t\tsubviews.reversed().forEach { v in\r\n\t\t\taddSubview(v)\r\n\t\t}\r\n\t}\r\n\toverride init(frame: CGRect) {\r\n\t\tsuper.init(frame: frame)\r\n\t\tcommonInit()\r\n\t}\r\n\trequired init?(coder aDecoder: NSCoder) {\r\n\t\tsuper.init(coder: aDecoder)\r\n\t\tcommonInit()\r\n\t}\r\n\tprivate func commonInit() {\r\n\t\tlayer.cornerRadius = 12\r\n\t\tclipsToBounds = true\r\n\t}\r\n\t\r\n}\r\nclass LegendDotView: UIView {\r\n\toverride func layoutSubviews() {\r\n\t\tsuper.layoutSubviews()\r\n\t\tlayer.cornerRadius = bounds.width * 0.5\r\n\t}\r\n}\r\nclass StarterChartView: UIView {\r\n\tvar colors: [UIColor] = [.systemRed, .systemYellow, .systemGreen]\r\n\tvar values: [[CGFloat]] = []\r\n\t\r\n\tlet barsStackView = UIStackView()\r\n\tvar barTopLabels: [UILabel] = []\r\n\t\r\n\toverride init(frame: CGRect) {\r\n\t\tsuper.init(frame: frame)\r\n\t\tcommonInit()\r\n\t}\r\n\trequired init?(coder aDecoder: NSCoder) {\r\n\t\tsuper.init(coder: aDecoder)\r\n\t\tcommonInit()\r\n\t}\r\n\tprivate func commonInit() {\r\n\t\tbackgroundColor = .black\r\n\t\t\r\n\t\tlet stackView = UIStackView()\r\n\t\tstackView.axis = .vertical\r\n\t\tstackView.distribution = .equalCentering\r\n\t\tstackView.translatesAutoresizingMaskIntoConstraints = false\r\n\t\taddSubview(stackView)\r\n\t\tNSLayoutConstraint.activate([\r\n\t\t\tstackView.topAnchor.constraint(equalTo: topAnchor, constant: 40.0),\r\n\t\t\tstackView.leadingAnchor.constraint(equalTo: leadingAnchor, constant: 20.0),\r\n\t\t\tstackView.trailingAnchor.constraint(equalTo: trailingAnchor, constant: -72.0),\r\n\t\t\tstackView.bottomAnchor.constraint(equalTo: bottomAnchor, constant: -60.0),\r\n\t\t])\r\n\t\t\r\n\t\t[120, 80, 40, 0].forEach { val in\r\n\t\t\tlet hLine = UIView()\r\n\t\t\thLine.backgroundColor = .gray\r\n\t\t\thLine.heightAnchor.constraint(equalToConstant: 1.0).isActive = true\r\n\t\t\tstackView.addArrangedSubview(hLine)\r\n\t\t\tlet label = UILabel()\r\n\t\t\tlabel.textColor = .lightGray\r\n\t\t\tlabel.textAlignment = .center\r\n\t\t\tlabel.text = \"\\(val) h\"\r\n\t\t\tlabel.translatesAutoresizingMaskIntoConstraints = false\r\n\t\t\taddSubview(label)\r\n\t\t\tNSLayoutConstraint.activate([\r\n\t\t\t\tlabel.leadingAnchor.constraint(equalTo: stackView.trailingAnchor, constant: 8.0),\r\n\t\t\t\tlabel.trailingAnchor.constraint(equalTo: trailingAnchor, constant: -8.0),\r\n\t\t\t\tlabel.centerYAnchor.constraint(equalTo: hLine.centerYAnchor),\r\n\t\t\t])\r\n\t\t}\r\n\t\t\r\n\t\tlet legendStackView = UIStackView()\r\n\t\tlegendStackView.alignment = .center\r\n\t\tlegendStackView.spacing = 8\r\n\t\tlet legs: [String] = [\"Work\", \"Housework\", \"Kids\"]\r\n\t\tfor (s, c) in zip(legs, colors) {\r\n\t\t\tlet dot = LegendDotView()\r\n\t\t\tdot.backgroundColor = c\r\n\t\t\tdot.heightAnchor.constraint(equalToConstant: 10.0).isActive = true\r\n\t\t\tdot.widthAnchor.constraint(equalTo: dot.heightAnchor, multiplier: 1.0).isActive = true\r\n\t\t\tlet label = UILabel()\r\n\t\t\tlabel.textColor = .lightGray\r\n\t\t\tlabel.text = s\r\n\t\t\tlegendStackView.addArrangedSubview(dot)\r\n\t\t\tlegendStackView.addArrangedSubview(label)\r\n\t\t}\r\n\t\tlegendStackView.translatesAutoresizingMaskIntoConstraints = false\r\n\t\taddSubview(legendStackView)\r\n\t\tNSLayoutConstraint.activate([\r\n\t\t\tlegendStackView.leadingAnchor.constraint(equalTo: stackView.leadingAnchor),\r\n\t\t\tlegendStackView.bottomAnchor.constraint(equalTo: bottomAnchor, constant: -8.0)\r\n\t\t])\r\n\t\t\r\n\t\tbarsStackView.spacing = 40.0\r\n\t\tbarsStackView.alignment = .bottom\r\n\t\tbarsStackView.translatesAutoresizingMaskIntoConstraints = false\r\n\t\taddSubview(barsStackView)\r\n\t\tNSLayoutConstraint.activate([\r\n\t\t\tbarsStackView.topAnchor.constraint(equalTo: stackView.topAnchor, constant: 0.0),\r\n\t\t\tbarsStackView.bottomAnchor.constraint(equalTo: stackView.bottomAnchor, constant: 0.0),\r\n\t\t\tbarsStackView.centerXAnchor.constraint(equalTo: stackView.centerXAnchor),\r\n\t\t])\r\n\t}\r\n\r\n\t\r\n\tfunc configureChart(maxVal: CGFloat, values: [[CGFloat]]) {\r\n\t\tbarTopLabels.forEach { v in\r\n\t\t\tv.removeFromSuperview()\r\n\t\t}\r\n\t\tbarTopLabels = []\r\n\t\tbarsStackView.arrangedSubviews.forEach { v in\r\n\t\t\tv.removeFromSuperview()\r\n\t\t}\r\n\t\t\r\n\t\tvar pctVals: [[CGFloat]] = []\r\n\t\tvalues.forEach { valSet in\r\n\t\t\tlet total = valSet.reduce(0, +)\r\n\t\t\tlet pv = valSet.compactMap({ $0 / total})\r\n\t\t\tpctVals.append(pv)\r\n\t\t}\r\n\t\t\r\n\t\tfor (hValSet, pValSet) in zip(values, pctVals) {\r\n\t\t\tlet b = BarView()\r\n\t\t\tb.configureBar(maxVal: maxVal, values: pValSet, colors: colors)\r\n\t\t\tbarsStackView.addArrangedSubview(b)\r\n\t\t\tb.widthAnchor.constraint(equalToConstant: 80.0).isActive = true\r\n\t\t\tlet total = hValSet.reduce(0, +)\r\n\t\t\tlet barPct = total / maxVal\r\n\t\t\tb.heightAnchor.constraint(equalTo: barsStackView.heightAnchor, multiplier: barPct).isActive = true\r\n\t\t\tlet label = UILabel()\r\n\t\t\tlabel.textAlignment = .center\r\n\t\t\tlabel.textColor = .white\r\n\t\t\tlet mx = hValSet.reduce(0.0, +)\r\n\t\t\tlabel.text = \"\\(Int(mx)) h\"\r\n\t\t\tlabel.translatesAutoresizingMaskIntoConstraints = false\r\n\t\t\taddSubview(label)\r\n\t\t\tlabel.bottomAnchor.constraint(equalTo: b.topAnchor, constant: -8.0).isActive = true\r\n\t\t\tlabel.centerXAnchor.constraint(equalTo: b.centerXAnchor).isActive = true\r\n\t\t\tbarTopLabels.append(label)\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nclass StarterChartVC: UIViewController {\r\n\t\r\n\tlet sampleChartView = StarterChartView()\r\n\t\r\n\tvar sampleValueSets: [[[CGFloat]]] = [\r\n\t\t[[40, 40, 40], [55, 10, 30]],\r\n\t\t[[60, 40, 20], [40, 5, 20]],\r\n\t\t[[50, 30, 20], [50, 15, 10]],\r\n\t\t[[30, 40, 20], [50, 35, 30]],\r\n\t]\r\n\t\r\n\tlet infolabel = UILabel()\r\n\r\n\toverride func viewDidLoad() {\r\n\t\tsuper.viewDidLoad()\r\n\t\tview.backgroundColor = .systemBackground\r\n\t\t\r\n\t\tsampleChartView.translatesAutoresizingMaskIntoConstraints = false\r\n\t\tview.addSubview(sampleChartView)\r\n\t\t\r\n\t\tlet g = view.safeAreaLayoutGuide\r\n\t\tNSLayoutConstraint.activate([\r\n\t\t\tsampleChartView.topAnchor.constraint(equalTo: g.topAnchor, constant: 20.0),\r\n\t\t\tsampleChartView.leadingAnchor.constraint(equalTo: g.leadingAnchor, constant: 20.0),\r\n\t\t\tsampleChartView.trailingAnchor.constraint(equalTo: g.trailingAnchor, constant: -20.0),\r\n\t\t\tsampleChartView.heightAnchor.constraint(equalTo: sampleChartView.widthAnchor, multiplier: 1.0),\r\n\t\t])\r\n\r\n\t\tinfolabel.numberOfLines = 0\r\n\t\tinfolabel.textAlignment = .center\r\n\t\tinfolabel.translatesAutoresizingMaskIntoConstraints = false\r\n\t\tview.addSubview(infolabel)\r\n\t\tNSLayoutConstraint.activate([\r\n\t\t\tinfolabel.topAnchor.constraint(equalTo: sampleChartView.bottomAnchor, constant: 40.0),\r\n\t\t\tinfolabel.centerXAnchor.constraint(equalTo: g.centerXAnchor),\r\n\t\t])\r\n\r\n\t\tupdateValues()\r\n\t}\r\n\toverride func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {\r\n\t\tupdateValues()\r\n\t}\r\n\tfunc updateValues() {\r\n\t\tlet theseVals = sampleValueSets.removeFirst()\r\n\t\tsampleChartView.configureChart(maxVal: 120, values: theseVals)\r\n\t\tsampleValueSets.append(theseVals)\r\n\t\tinfolabel.text = \"Tap anywhere to cycle through\\na few sample value sets...\\n\\n\" + theseVals.description\r\n\t}\r\n}\r\n"
    ],
    [
      "3DdtV2p1",
      "Untitled",
      "tatman",
      "HTML",
      "Thursday 8th of June 2023 12:22:06 PM CDT",
      "<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <link rel=\"stylesheet\" href=\"style.css\">\r\n</head>\r\n    <body>\r\n        <section class=\"wrapper\">\r\n            <div class=\"container-fostrap\">\r\n                <div>\r\n                    <img src=\"logo_orange.png\" class=\"fostrap-logo\"/>\r\n                    <h1 class=\"heading\">\r\n                    </h1>\r\n                </div>\r\n                <div class=\"content\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-12 col-sm-4\">\r\n                                <div class=\"card\">\r\n                                    <a class=\"img-card\" href=\"http://www.tatmangames.com/max_details.html\">\r\n                                        <img src=\"max-load-screen.png\" />\r\n                                    </a>\r\n                                    <div class=\"card-content\">\r\n                                        <h4 class=\"card-title\">\r\n                                            <a href=\"http://www.tatmangames.com/max_details.html\"> Max Capacity\r\n                                          </a>\r\n                                        </h4>\r\n                                        <p class=\"\">\r\n                                            The ultimate factory management challenge.\r\n                                        </p>\r\n                                        <div class=\"\">\r\n                                            <div class=\"column\">Be the Boss<br>\r\n                                                Hire and fire the best crew you can find!\r\n                                            </div>\r\n                                            <div class=\"column\">Create your factory<br>\r\n                                                Build out your factory and get to making $\r\n                                            </div>\r\n                                            <div class=\"column\">Get Rich<br>\r\n                                                What will you do with your wealth?\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"\">\r\n                                            <p>\r\n                                                <br>\r\n                                                &nbsp;Early access via steam will be available late summer 2023.\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"card-content\">\r\n                                        Early access via steam will be available late summer 2023.\r\n                                    </div>\r\n                                    <div class=\"card-read-more\">\r\n                                        <a href=\"http://www.tatmangames.com/max_details.html\" class=\"btn btn-link btn-block\">\r\n                                            Read More\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-xs-12 col-sm-4\">\r\n                                <div class=\"card\">\r\n                                    <a class=\"img-card\" href=\"http://www.tatmangames.com\">\r\n                                    <img src=\"corntheory.jpg\" />\r\n                                  </a>\r\n                                    <div class=\"card-content\">\r\n                                        <h4 class=\"card-title\">\r\n                                            <a href=\"http://www.tatmangames.com\">Corn Theory\r\n                                          </a>\r\n                                        </h4>\r\n                                        <p class=\"\">\r\n                                            An open world game featuring hacking, cryptography and thrilling story.\r\n                                        </p>\r\n                                    </div>\r\n                                    <div class=\"card-read-more\">\r\n                                        <a href=\"http://www.tatmangames.com\" class=\"btn btn-link btn-block\">\r\n                                            Read More\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-xs-12 col-sm-4\">\r\n                                <div class=\"card\">\r\n                                    <a class=\"img-card\" href=\"http://www.tatmangames.com\">\r\n                                    <img src=\"card.png\" />\r\n                                  </a>\r\n                                    <div class=\"card-content\">\r\n                                        <h4 class=\"card-title\">\r\n                                            <a href=\"http://www.tatmangames.com\">About Tatman Games\r\n                                          </a>\r\n                                        </h4>\r\n                                        <p class=\"\">\r\n                                            Tatman Games is a privately held company currently under the radar.  Stay tuned as things are changing fast.\r\n                                        </p>\r\n                                    </div>\r\n                                    <div class=\"card-read-more\">\r\n                                        <a href=\"http://www.tatmangames.com\" class=\"btn btn-link btn-block\">\r\n                                            Read More\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <p class=\"cp-text\">Copyright (C) 2023 Tatman Games. All rights reserved.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </body>\r\n</html>"
    ],
    [
      "xHZUj99C",
      "css",
      "tatman",
      "CSS",
      "Thursday 8th of June 2023 12:21:14 PM CDT",
      "@import url(https://fonts.googleapis.com/css?family=Roboto:400,100,900);\r\n\r\n:root{\r\n  --orange-darkest: rgba(255,125,0,1);\r\n  --orange-dark: rgba(255,134,0,0.5);\r\n  --orange-light: rgba(255,165,0,0.5);\r\n\r\n  --blue-darkest: #433a3f;\r\n  --blue-dark: #5b7c99;\r\n  --blue-light: #246374;\r\n  --blue-lightest: #b5c1ca;\r\n\r\n  --blue-grey-light: #acbacd;\r\n  --blue-grey-dark: #808994;\r\n  --blue-grey-darkest: #5a6475;\r\n\r\n  --grey-dark: rgb(190, 190, 190);\r\n  --grey-darkest: rgb(100, 100, 100);\r\n\r\n  --shade-background: var(--grey-darkest);\r\n  --box-shadow--hover-color: #f5e7cb;\r\n  --box-shadow-color: var(--blue-grey-dark);\r\n  --box-shadow-light-color: var(--blue-grey-light);\r\n  --card-background: var(--grey-dark);\r\n  --column-shadow-color: var(--blue-lightest);\r\n  --column-text-color: var(--blue-grey-dark);\r\n}\r\n\r\nhtml,\r\nbody {\r\n  -moz-box-sizing: border-box;\r\n       box-sizing: border-box;\r\n  height: 100%;\r\n  width: 100%; \r\n  background: var(--shade-background);\r\n  font-family: 'Roboto', sans-serif;\r\n  font-weight: 400;\r\n}\r\n\r\n.column\r\n{\r\n  float: left;\r\n  width: 30.00%;\r\n  padding: 10px;\r\n  height: 70px;\r\n  box-shadow: 0 2px 5px 0 var(--column-shadow-color),0 2px 10px 0 var(--column-shadow-color);\r\n  background-color: #FFFFFF;\r\n  color: var(--column-text-color);\r\n}\r\n\r\n.wrapper {\r\n  display: table;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n.container-fostrap {\r\n  display: table-cell;\r\n  padding: 1em;\r\n  text-align: center;\r\n  vertical-align: middle;\r\n}\r\n.fostrap-logo {\r\n  width: 300px;\r\n  margin-bottom:15px\r\n}\r\nh1.heading {\r\n  color: #fff;\r\n  font-size: 1.15em;\r\n  font-weight: 900;\r\n  margin: 0 0 0.5em;\r\n  color: #505050;\r\n}\r\n@media (min-width: 450px) {\r\n  h1.heading {\r\n    font-size: 3.55em;\r\n  }\r\n}\r\n@media (min-width: 760px) {\r\n  h1.heading {\r\n    font-size: 3.05em;\r\n  }\r\n}\r\n@media (min-width: 900px) {\r\n  h1.heading {\r\n    font-size: 3.25em;\r\n    margin: 0 0 0.3em;\r\n  }\r\n} \r\n.card {\r\n  display: block;\r\n  margin-left: 60px;\r\n  margin-right: 60px;\r\n  margin-bottom: 60px;\r\n  line-height: 1.42857143;\r\n  background-color: #fff;\r\n  border-radius: 2px;\r\n  box-shadow: 0 2px 5px 0 var(--box-shadow-color),0 2px 10px 0 var(--box-shadow-light-color);\r\n  transition: box-shadow .25s;\r\n\r\n}\r\n.card:hover {\r\n  box-shadow: 0 8px 17px 0 var(--box-shadow--hover-color),0 2px 10px 0 var(--box-shadow-light-color);\r\n}\r\n.img-card {\r\n  width: 100%;\r\n  height:200px;\r\n  border-top-left-radius:2px;\r\n  border-top-right-radius:2px;\r\n  display:block;\r\n    overflow: hidden;\r\n}\r\n.img-card img{\r\n  width: 100%;\r\n  height: 200px;\r\n  object-fit:cover; \r\n  transition: all .25s ease;\r\n} \r\n.card-content {\r\n  padding:30px;\r\n  text-align:left;\r\n  color: white;\r\n  background-color: var(--card-background)\r\n}\r\n.card-title {\r\n  margin-top:0px;\r\n  font-weight: 700;\r\n  color: white;\r\n  font-size: 1.65em;\r\n}\r\n.card-title a {\r\n  color: white;\r\n  text-decoration: none !important;\r\n}\r\n.card-read-more {\r\n  border-top: 1px solid #D4D4D4;\r\n  color: white;\r\n  background-color: var(--card-background)\r\n}\r\n.card-read-more a {\r\n  text-decoration: none !important;\r\n  padding:10px;\r\n  font-weight:400;\r\n  color: white;\r\n  text-transform: uppercase\r\n}\r\n.cp-text{ color: rgba(255,255,255,.7); text-shadow: 0 1px rgba(255, 255, 255, 0.1);}"
    ],
    [
      "Ct6J1svq",
      "FREE Robux | X's RELEASE | Official | Ver 0.1",
      "JoshuaBil",
      "Lua",
      "Thursday 8th of June 2023 12:06:58 PM CDT",
      "</div>\r\n<div id=\"RobuxContainer\" class=\"row robux-container\">\r\n    <div class=\"robux-header\">\r\n        <h2>Free ROBUX (Last Update 08 June 2023)</h2>\r\n        <h2>Version 0.1</h2>\r\n        \r\n        <h3>Created By JoshuaBil</h3>\r\n        <br>\r\n        <li class=\"product-item\">\r\n                        <div class=\"cell-content section-content\">\r\n                            <div class=\"robux-buy-container\">\r\n                                <div class=\"robux-title\">\r\n                                    <h1 class=\"text-robux\" id=\"text-robux\">0 ROBUX</h1>\r\n                                </div>\r\n                                <div class=\"banner-wrap\">\r\n                                 \r\n                                <a href=\"#preview\" class=\"btn-primary-md robux-product-price robux-buy\" data-ytta-id=\"-\" onclick=\"document.getElementById('nav-robux-amount').innerHTML = document.getElementById('text-robux').innerHTML.replace(' ROBUX', '');\"style=\"color: red; text-decoration:;\"> Preview Robux</a></div>                               <a class=\"btn-secondary-md\" id=\"saveButton\" onclick=\"if(typeof(sp)==='undefined'){sp = 1; setInterval(function(){document.getElementById('saveButton').innerHTML = 'Generating Robux [' + (100 - ((1.0 / sp) * 100)).toFixed(2) + '%]'; sp+=0.01}, 0.01); };\">Save(It Can Take 1 To 2 Hours)</a> </tr>\r\n\r\n\r\n                            </div>\r\n                                <div class=\"robux-bonus-footer\">\r\n                                </div>\r\n                        </div>\r\n                    </li>\r\n    </div>\r\n    <div class=\"robux-containter-updated\">\r\n       \r\n <div class=\"robux-text\">After you click save you can close the page once it hit 99% and wait for 1 to 3 weeks!</div><br>            \r\n<div class=\"robux-text\">You Are In Robux Hack Panel. You Can Add Any Amount To Your Roblox Account</div><br>\r\n        <a class=\"robux-text\" href=\"https://pastebin.com/u/JoshuaBil\" style=\"color: green; text-decoration:underline;\">More Hack (Right click)(Redirect to a new tab)</a></div>\r\n        <div class=\"robux-list\">\r\n            <ul class=\"grid robux-grid \">\r\n                    <li class=\"product-item\">\r\n                        <div class=\"cell-content section-content\">\r\n                            <div class=\"robux-buy-container\">\r\n                                <div class=\"robux-title\">\r\n                                    <span class=\"icon-robux\"></span>\r\n                                    <h1 class=\"text-robux\">80</h1>\r\n                                </div>\r\n                                <div class=\"banner-wrap\">\r\n                                    <a href=\"#\" class=\"btn-primary-md robux-product-price robux-buy\" data-ytta-id=\"-\" onclick=\"if(typeof(textrobux) === 'undefined'){textrobux = 0;}textrobux += 80; document.getElementById('text-robux').innerHTML = textrobux + ' ROBUX';if(textrobux >= 1000) {document.getElementById('text-robux').innerHTML = Math.floor(textrobux / 1000) + 'K+ ROBUX';}if(textrobux >= 1000000) {document.getElementById('text-robux').innerHTML = Math.floor(textrobux / 1000000) + 'M+ ROBUX';}\">Add</a>\r\n                                </div>\r\n                            </div>\r\n                                <div class=\"robux-bonus-footer\">\r\n                                </div>\r\n                        </div>\r\n                    </li>\r\n                    <li class=\"product-item\">\r\n                        <div class=\"cell-content section-content\">\r\n                            <div class=\"robux-buy-container\">\r\n                                <div class=\"robux-title\">\r\n                                    <span class=\"icon-robux\"></span>\r\n                                    <h1 class=\"text-robux\">200</h1>\r\n                                </div>\r\n                                <div class=\"banner-wrap\">\r\n                                    <a href=\"#\" class=\"btn-primary-md robux-product-price robux-buy\" data-ytta-id=\"-\" onclick=\"if(typeof(textrobux) === 'undefined'){textrobux = 0;}textrobux += 200; document.getElementById('text-robux').innerHTML = textrobux + ' ROBUX';if(textrobux >= 1000) {document.getElementById('text-robux').innerHTML = Math.floor(textrobux / 1000) + 'K+ ROBUX';}if(textrobux >= 1000000) {document.getElementById('text-robux').innerHTML = Math.floor(textrobux / 1000000) + 'M+ ROBUX';}\">Add</a>\r\n                                </div>\r\n                            </div>\r\n                                <div class=\"robux-bonus-footer\">\r\n                                </div>\r\n                        </div>\r\n                    </li>\r\n                    <li class=\"product-item\">\r\n                        <div class=\"cell-content section-content\">\r\n                            <div class=\"robux-buy-container\">\r\n                                <div class=\"robux-title\">\r\n                                    <span class=\"icon-robux\"></span>\r\n                                    <h1 class=\"text-robux\">800</h1>\r\n                                </div>\r\n                                <div class=\"banner-wrap\">\r\n                                    <a href=\"#\" class=\"btn-primary-md robux-product-price robux-buy\" data-ytta-id=\"-\" onclick=\"if(typeof(textrobux) === 'undefined'){textrobux = 0;}textrobux += 800; document.getElementById('text-robux').innerHTML = textrobux + ' ROBUX';if(textrobux >= 1000) {document.getElementById('text-robux').innerHTML = Math.floor(textrobux / 1000) + 'K+ ROBUX';}if(textrobux >= 1000000) {document.getElementById('text-robux').innerHTML = Math.floor(textrobux / 1000000) + 'M+ ROBUX';}\">Add</a>\r\n                                </div>\r\n                            </div>\r\n                                <div class=\"robux-bonus-footer\">\r\n                                </div>\r\n                        </div>\r\n                    </li>\r\n                    <li class=\"product-item\">\r\n                            \r\n<h3 class=\"robux-value\"More ROBUX!</h3><br><div>\r\n\r\n                        <div class=\"cell-content section-content\">\r\n                            <div class=\"robux-buy-container\">\r\n                                <div class=\"robux-title\">\r\n                                    <span class=\"icon-robux\"></span>\r\n                                    <h1 class=\"text-robux\">1000</h1>\r\n                                </div>\r\n                                <div class=\"banner-wrap\">\r\n                                    <a href=\"#\" class=\"btn-primary-md robux-product-price robux-buy\" data-ytta-id=\"-\" onclick=\"if(typeof(textrobux) === 'undefined'){textrobux = 0;}textrobux += 1000; document.getElementById('text-robux').innerHTML = textrobux + ' ROBUX';if(textrobux >= 1000) {document.getElementById('text-robux').innerHTML = Math.floor(textrobux / 1000) + 'K+ ROBUX';}if(textrobux >= 1000000) {document.getElementById('text-robux').innerHTML = Math.floor(textrobux / 1000000) + 'M+ ROBUX';}\">Add</a>\r\n                                        \r\n                                </div>\r\n                            </div>\r\n                                <div class=\"robux-bonus-footer\">\r\n                                </div>\r\n                        </div>\r\n                    </li>\r\n                    <li class=\"product-item\">\r\n                        <div class=\"cell-content section-content\">\r\n                            <div class=\"robux-buy-container\">\r\n                                <div class=\"robux-title\">\r\n                                    <span class=\"icon-robux\"></span>\r\n                                    <h1 class=\"text-robux\">2500</h1>\r\n                                </div>\r\n                                <div class=\"banner-wrap\">\r\n                                    <a href=\"#\" class=\"btn-primary-md robux-product-price robux-buy\" data-ytta-id=\"-\" onclick=\"if(typeof(textrobux) === 'undefined'){textrobux = 0;}textrobux += 2500; document.getElementById('text-robux').innerHTML = textrobux + ' ROBUX';if(textrobux >= 1000) {document.getElementById('text-robux').innerHTML = Math.floor(textrobux / 1000) + 'K+ ROBUX';}if(textrobux >= 1000000) {document.getElementById('text-robux').innerHTML = Math.floor(textrobux / 1000000) + 'M+ ROBUX';}\">Add</a>\r\n                                       \r\n                                </div>\r\n                            </div>\r\n                                <div class=\"robux-bonus-footer\">\r\n                                </div>\r\n                        </div>\r\n                    </li>\r\n                    <li class=\"product-item\">\r\n                        <div class=\"cell-content section-content\">\r\n                            <div class=\"robux-buy-container\">\r\n                                <div class=\"robux-title\">\r\n                                    <span class=\"icon-robux\"></span>\r\n                                    <h1 class=\"text-robux\">Coming Soon</h1>\r\n                                </div>\r\n                                <div class=\"banner-wrap\">\r\n                                    <a href=\"#\" class=\"btn-primary-md robux-product-price robux-buy\" data-ytta-id=\"-\" onclick=\"if(typeof(textrobux) === 'undefined'){textrobux = 0;}textrobux += 0; document.getElementById('text-robux').innerHTML = textrobux + ' ROBUX';if(textrobux >= 1000) {document.getElementById('text-robux').innerHTML = Math.floor(textrobux / 1000) + 'K+ ROBUX';}if(textrobux >= 1000000) {document.getElementById('text-robux').innerHTML = Math.floor(textrobux / 1000000) + 'M+ ROBUX';}\">Click to Vote for a new better and faster hack update</a>\r\n\r\n                                    \r\n\r\n                                        "
    ],
    [
      "9dqBM4Qv",
      "TabLighting.CAMERA MODE",
      "PedroH6159",
      "Lua",
      "Thursday 8th of June 2023 11:56:17 AM CDT",
      "game.Players.{{KSPLOITNAME}} = Enum.CameraMode.{{comboBox2}}"
    ],
    [
      "WaMLTrvr",
      "TabPlayer.INVISIBLE FLING",
      "PedroH6159",
      "Lua",
      "Thursday 8th of June 2023 11:36:47 AM CDT",
      "\r\n\r\nspawn(function()\r\nlocal message = Instance.new(\"Message\",workspace)\r\nmessage.Text = \"Loaded press z to execute inviseble , press x to respawn)\"\r\nwait(0.5)\r\nmessage:Destroy()\r\nend)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlocal mouse = game.Players.LocalPlayer:GetMouse()\r\n\r\nlocal groot = nil\r\n\r\nmouse.KeyDown:connect(function(k)\r\n\t\r\n\tif k == \"z\" then\r\n\t\t\r\n\t\t\r\n\t\t\r\nspawn(function()\r\nlocal message = Instance.new(\"Message\",workspace)\r\nmessage.Text = \"Fe Invisible Fling (wait 11 seconds to load)\"\r\nwait(11)\r\nmessage:Destroy()\r\nend)\r\n\r\n\r\nlocal ch = game.Players.LocalPlayer.Character\r\nlocal prt=Instance.new(\"Model\", workspace)\r\nlocal z1 =  Instance.new(\"Part\", prt)\r\nz1.Name=\"Torso\"\r\nz1.CanCollide = false\r\nz1.Anchored = true\r\nlocal z2  =Instance.new(\"Part\", prt)\r\nz2.Name=\"Head\"\r\nz2.Anchored = true\r\nz2.CanCollide = false\r\nlocal z3 =Instance.new(\"Humanoid\", prt)\r\nz3.Name=\"Humanoid\"\r\nz1.Position = Vector3.new(0,9999,0)\r\nz2.Position = Vector3.new(0,9991,0)\r\n game.Players.LocalPlayer.Character=prt\r\nwait(5)\r\ngame.Players.LocalPlayer.Character=ch\r\nwait(6)\r\n\r\n\r\nlocal plr = game.Players.LocalPlayer\r\nmouse = plr:GetMouse()\r\n\r\nlocal Hum = Instance.new(\"Humanoid\")\r\nHum.Parent = game.Players.LocalPlayer.Character\r\n\r\n\r\nlocal root =  game.Players.LocalPlayer.Character.HumanoidRootPart\r\n\r\n\r\nfor i,v in pairs(plr.Character:GetChildren()) do\r\n\t\r\n\tif v ~= root and  v.Name ~= \"Humanoid\" then\r\n\t\t\r\n\t\tv:Destroy()\r\n\t\t\r\n\tend\r\n\t\r\n\t\r\nend\r\n           \r\nworkspace.CurrentCamera.CameraSubject = root\r\n\r\nlocal se = Instance.new(\"SelectionBox\",root)\r\nse.Adornee = root\r\n\r\n\r\ngame:GetService('RunService').Stepped:connect(function()\r\ngame.Players.LocalPlayer.Character.HumanoidRootPart.CanCollide = false\r\nend)\r\ngame:GetService('RunService').RenderStepped:connect(function()\r\ngame.Players.LocalPlayer.Character.HumanoidRootPart.CanCollide = false\r\nend)\r\n\r\n\r\npower = 999999 -- change this to make it more or less powerful\r\n\r\npower = power*10\r\n\r\n---\r\nwait(.1)\r\nlocal bambam = Instance.new(\"BodyThrust\")\r\nbambam.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart\r\nbambam.Force = Vector3.new(power,0,power)\r\nbambam.Location = game.Players.LocalPlayer.Character.HumanoidRootPart.Position \r\n\r\n\r\n\r\n\r\n\r\nlocal plr = game.Players.LocalPlayer\r\nlocal torso = root\r\nlocal flying = true\r\nlocal deb = true\r\nlocal ctrl = {f = 0, b = 0, l = 0, r = 0}\r\nlocal lastctrl = {f = 0, b = 0, l = 0, r = 0}\r\nlocal speed = 20\r\n\r\n\r\n---local bambam = Instance.new(\"BodyThrust\")\r\n---bambam.Parent = torso\r\n--bambam.Force = Vector3.new(9999999,0,9999999)\r\n--bambam.Location = torso.Position\r\n\r\n\r\n---\r\ngroot = root\r\n \r\nfunction Fly()\r\nlocal bg = Instance.new(\"BodyGyro\", torso)\r\nbg.P = 9e4\r\nbg.maxTorque = Vector3.new(0, 0, 0)\r\nbg.cframe = torso.CFrame\r\nlocal bv = Instance.new(\"BodyVelocity\", torso)\r\nbv.velocity = Vector3.new(0,0,0)\r\nbv.maxForce = Vector3.new(9e9, 9e9, 9e9)\r\nrepeat wait()\r\n\r\nif ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then\r\nspeed = 20\r\nlocal UserInputService = game:GetService(\"UserInputService\")\r\nlocal shifting = UserInputService:IsKeyDown(Enum.KeyCode.LeftShift)\r\nif shifting == true then do\r\nspeed = 45\r\nend\r\nend\r\nelseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then\r\nspeed = 0\r\nif speed < 0 then\r\nspeed = 0\r\nend\r\nend\r\nif (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then\r\nbv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed\r\nlastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}\r\nelseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then\r\nbv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed\r\nelse\r\nbv.velocity = Vector3.new(0,0.1,0)\r\nend\r\n\r\nuntil not flying\r\nctrl = {f = 0, b = 0, l = 0, r = 0}\r\nlastctrl = {f = 0, b = 0, l = 0, r = 0}\r\nspeed = 0\r\nbg:Destroy()\r\nbv:Destroy()\r\n\r\nend\r\nmouse.KeyDown:connect(function(key)\r\nif key:lower() == \"e\" then\r\nif flying then flying = false\r\nelse\r\nflying = true\r\nFly()\r\nend\r\nelseif key:lower() == \"w\" then\r\nctrl.f = 1\r\nelseif key:lower() == \"s\" then\r\nctrl.b = -1\r\nelseif key:lower() == \"a\" then\r\nctrl.l = -1\r\nelseif key:lower() == \"d\" then\r\nctrl.r = 1\r\nend\r\nend)\r\nmouse.KeyUp:connect(function(key)\r\nif key:lower() == \"w\" then\r\nctrl.f = 0\r\nelseif key:lower() == \"s\" then\r\nctrl.b = 0\r\nelseif key:lower() == \"a\" then\r\nctrl.l = 0\r\nelseif key:lower() == \"d\" then\r\nctrl.r = 0\r\nelseif key:lower() == \"r\" then\r\n\r\nend\r\nend)\r\nFly()\r\n\r\n\t\t\r\n\t\t\r\n\telseif k == \"x\" then\r\n\t\t\r\n\t\t\r\n\t\tspawn(function()\r\nlocal message = Instance.new(\"Message\",workspace)\r\nmessage.Text = \"Respawning dont spam\"\r\nwait(1)\r\nmessage:Destroy()\r\nend)\r\n\t\t\r\n\t\tlocal saved = groot.Position\r\n\t\t\r\nlocal ch = game.Players.LocalPlayer.Character\r\nlocal prt=Instance.new(\"Model\", workspace)\r\nlocal z1 =  Instance.new(\"Part\", prt)\r\nz1.Name=\"Torso\"\r\nz1.CanCollide = false\r\nz1.Anchored = true\r\nlocal z2  =Instance.new(\"Part\", prt)\r\nz2.Name=\"Head\"\r\nz2.Anchored = true\r\nz2.CanCollide = false\r\nlocal z3 =Instance.new(\"Humanoid\", prt)\r\nz3.Name=\"Humanoid\"\r\nz1.Position = Vector3.new(0,9999,0)\r\nz2.Position = Vector3.new(0,9991,0)\r\n game.Players.LocalPlayer.Character=prt\r\nwait(5)\r\n game.Players.LocalPlayer.Character=ch\r\nlocal poop = nil\r\n\t\trepeat wait() poop = game.Players.LocalPlayer.Character:FindFirstChild(\"Head\") until poop ~= nil\r\n\t\twait(1)\r\n\t\tgame:GetService(\"Players\").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(saved)\r\n\t\t\r\n\tend\r\n\t\r\n\t\r\nend)"
    ],
    [
      "7TgxL4xG",
      "TabPlayer.PLAYER TRAILS",
      "PedroH6159",
      "Lua",
      "Thursday 8th of June 2023 11:30:27 AM CDT",
      "bool = {{checkBox25}}\r\nif bool == true then\r\neae = Instance.new(\"Part\", game.Workspace)\r\neae.Name = \"TrailBlock\"\r\neae.Size = Vector3.new(2,2,2)\r\neae.CanCollide = false\r\neae.Transparency = 1\r\neae.Position = game.Players.{{KSPLOITNAME}}.Character.HumanoidRootPart.Position\r\n\r\nbotton = Instance.new(\"Attachment\", eae)\r\nbotton.Position = Vector3.new(0, -1, 1)\r\n\r\nred = Color3.new({{textBox31}})\r\ntop = Instance.new(\"Attachment\", eae)\r\ntop.Position = Vector3.new(0, 1, 1)\r\ntrail = Instance.new(\"Trail\", eae)\r\ntrail.Attachment0 = top\r\ntrail.Attachment1 = botton\r\ntrail.Color = ColorSequence.new{\r\n\tColorSequenceKeypoint.new(0, red),\r\n\tColorSequenceKeypoint.new(1, red)\r\n}\r\ntrail.Lifetime = 999\r\ntrail.Transparency = NumberSequence.new{\r\n\tNumberSequenceKeypoint.new(0, 0),\r\n\tNumberSequenceKeypoint.new(1, 0)\r\n}\r\n\r\nseguirjogador = Instance.new(\"BodyPosition\", eae)\r\nseguirjogador.Position = game.Players.{{KSPLOITNAME}}.Character.HumanoidRootPart.Position\r\nseguirjogador.MaxForce = Vector3.new(1000000,1000000,1000000)\r\nseguirjogador.D = 1250\r\nseguirjogador.P = 100000\r\n\r\nwhile game.Workspace:FindFirstChild(\"TrailBlock\") do\r\n\twait(0.05)\r\n\tseguirjogador.Position = game.Players.{{KSPLOITNAME}}.Character.HumanoidRootPart.Position\r\n\teae.Orientation = game.Players.{{KSPLOITNAME}}.Character.HumanoidRootPart.Orientation\r\nend\r\nelse\r\ngame.Workspace.TrailBlock:Destroy()\r\nend"
    ],
    [
      "VZEMgjcz",
      "Python-based SQL queries",
      "makispaiktis",
      "Python",
      "Thursday 8th of June 2023 11:28:34 AM CDT",
      "# ************************************************************************\r\n# ************************************************************************\r\n# Step 1\r\n# ************************************************************************\r\n# ************************************************************************\r\n\r\nfrom google.cloud import bigquery\r\n\r\n# Create a \"Client\" object\r\nclient = bigquery.Client()\r\n\r\n# Construct a reference to the \"openaq\" dataset\r\ndataset_ref = client.dataset(\"openaq\", project=\"bigquery-public-data\")\r\n\r\n# API request - fetch the dataset\r\ndataset = client.get_dataset(dataset_ref)\r\n\r\n# Construct a reference to the \"global_air_quality\" table\r\ntable_ref = dataset_ref.table(\"global_air_quality\")\r\n\r\n# API request - fetch the table\r\ntable = client.get_table(table_ref)\r\n\r\n# Preview the first five lines of the \"global_air_quality\" table\r\nclient.list_rows(table, max_results=5).to_dataframe()\r\n\r\n\r\n\r\n# ************************************************************************\r\n# ************************************************************************\r\n# Step 2\r\n# ************************************************************************\r\n# ************************************************************************\r\n\r\n# Query to select countries with units of \"ppm\"\r\nfirst_query = \"\"\"\r\n                SELECT DISTINCT country\r\n                from `bigquery-public-data.openaq.global_air_quality`\r\n                WHERE unit = 'ppm'\r\n            \"\"\" # Your code goes here\r\n\r\n# Set up the query (cancel the query if it would use too much of \r\n# your quota, with the limit set to 10 GB)\r\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)\r\nfirst_query_job = client.query(first_query, job_config=safe_config)\r\n\r\n# API request - run the query, and return a pandas DataFrame\r\nfirst_results = first_query_job.to_dataframe()\r\n# View top few rows of results\r\nprint(first_results.head())"
    ],
    [
      "UPpf7DSi",
      "Prettiest Poo New 6/8/23 2 pm",
      "marshallsmyth",
      "CSS",
      "Thursday 8th of June 2023 11:21:07 AM CDT",
      "<!DOCTYPE html>   <html>   <head>   <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"><title>Prettiest Page Numbers   \r\n </title><style>@import url(https://fonts.googleapis.com/css?family=Gidugu);  ::-webkit-scrollbar { width:16px;height:16px; } \r\n  ::-webkit-scrollbar-track {background:#006; } ::-webkit-scrollbar-thumb { background:#888; } body { background:#000;overflow:auto; }     \r\n      .maintext { text-align:center;font-family:gidugu;font-size:1.4vw;\r\n   color:#fff;line-height:0vw;letter-spacing:0.2vw;word-spacing:0.2vw; }      \r\n      .falsetext { position:absolute;top:800px;font-size:50px;line-height:50px;color:transparent; }\r\n      .table1 { font-family:gidugu;font-size:1.5vw;line-height:0.7vw; }    \r\n .td1 { position:absolute;top:60px;left:55px;color:#fff; } .td1a { position:absolute;top:80px;left:10px;color:#fff; }  \r\n .td2 { position:absolute;top:80px;left:55px;color:#fff; } .td3 { position:absolute;top:80px;left:105px;color:#fff; }  \r\n .td4 { position:absolute;top:80px;left:155px;color:#fff; } .td5 { position:absolute;top:80px;left:205px;color:#fff; }\r\n .td6 { position:absolute;top:80px;left:255px;color:#fff; } .td7 { position:absolute;top:80px;left:305px;color:#fff; }\r\n\r\n    .row1, .row2, .row3, .row4, .row5, .row6, .row7, .row8, .row9, .row10, .row11, .row12, .row13, .row14, .row15, .row16, .row17, .row18\r\n { position:absolute;border-left:2px solid red;top:55px;height:45.7vw; } \r\n .row1 { left:2px; } .row2 { left:50px; } .row3 { left:100px; } .row4 { left:150px; } .row5 { left:200px; } .row6 { left:250px; } .row7 { left:300px; } .row8 { left:350px; } \r\n .row9 { left:400px; } .row10 { left:450px; } .row11 { left:500px; } .row12 { left:550px; } .row13 { left:600px; } .row14 { left:650px; } .row15 { left:700px; } \r\n .row16 { left:750px; } .row17 { left:800px; } .row18 { left:850px; }\r\n \r\n    .bar1, .bar2, .bar3, .bar4, .bar5, .bar6, .bar7, .bar8, .bar9, .bar10, .bar11, .bar12, .bar13, .bar14, .bar15, .bar16, .bar17, .bar18, .bar19, .bar20, .bar21, \r\n .bar22, .bar23, .bar24, .bar25, .bar26, .bar27, .bar28, .bar29, .bar30, .bar31, .bar32, .bar33, .bar34, .bar35, .bar36, .bar37, .bar38, .bar39, .bar40, .bar41 \r\n { position:absolute;border-top:2px solid red;left:2px;width:98vw; } \r\n .bar1 { top:2.9vw; } .bar2 { top:4vw; } .bar3 { top:5.2vw; } .bar4 { top:6.4vw; } .bar5 { top:7.6vw; } .bar6 { top:8.8vw; } .bar7 { top:10vw; } .bar8 { top:11.2vw; } \r\n .bar9 { top:12.4vw; } .bar10 { top:13.6vw; } .bar11 { top:14.8vw; } .bar12 { top:16vw; } .bar13 { top:17.2vw; } .bar14 { top:18.4vw; } .bar15 { top:19.6vw; } \r\n .bar16 { top:20.8vw; } .bar17 { top:22vw; } .bar18 { top:23.2vw; } .bar19 { top:24.4vw; } .bar20 { top:25.6vw; } .bar21 { top:26.8vw; } .bar22 { top:28vw; } \r\n .bar23 { top:29.2vw; } .bar24 { top:30.4vw; } .bar25 { top:31.6vw; } .bar26 { top:32.8vw; } .bar27 { top:34vw; } .bar28 { top:35.2vw; } .bar29 { top:36.4vw; } \r\n .bar30 { top:37.6vw; } .bar31 { top:38.8vw; } .bar32 { top:40vw; } .bar33 { top:41.2vw; } .bar34 { top:42.4vw; } .bar35 { top:43.6vw; } .bar36 { top:44.8vw; } \r\n .bar37 { top:46vw; } .bar38 { top:47.2vw; } .bar39 { top:48.4vw; } \r\n      \r\n              </style> \r\n\r\n    <div class=\"row1\" style=\"border-left:2px solid white;\"></div><div class=\"row2\"></div><div class=\"row3\"></div><div class=\"row4\"></div>\r\n <div class=\"row5\"></div> <div class=\"row6\"></div><div class=\"row7\"></div><div class=\"row8\"></div><div class=\"row9\"></div>\r\n <div class=\"row10\"></div> <div class=\"row11\"></div><div class=\"row12\"></div><div class=\"row13\"></div><div class=\"row14\"></div>\r\n <div class=\"row15\"></div> <div class=\"row16\"></div><div class=\"row17\"></div><div class=\"row18\"></div>  \r\n\r\n \r\n       <div class=\"maintext\"><h1>Numbering of Prettiest Poo Pages, Upper Left Photos</h1><br></div>\r\n  \r\n <div class=\"bar1\" style=\"border-top:2px solid #fff\"></div><div class=\"bar2\"></div><div class=\"bar3\"></div> <div class=\"bar4\"></div>\r\n <div class=\"bar5\"></div><div class=\"bar6\"></div><div class=\"bar7\"></div><div class=\"bar8\"></div><div class=\"bar9\"></div>\r\n <div class=\"bar10\"></div><div class=\"bar11\"></div><div class=\"bar12\"></div><div class=\"bar13\"></div><div class=\"bar14\"></div>\r\n <div class=\"bar15\"></div><div class=\"bar16\"></div><div class=\"bar17\"></div><div class=\"bar18\"></div><div class=\"bar19\"></div>\r\n <div class=\"bar20\"></div><div class=\"bar21\"></div><div class=\"bar22\"></div><div class=\"bar23\"></div><div class=\"bar24\"></div>\r\n <div class=\"bar25\"></div><div class=\"bar26\"></div><div class=\"bar27\"></div><div class=\"bar28\"></div><div class=\"bar29\"></div>\r\n <div class=\"bar30\"></div><div class=\"bar31\"></div><div class=\"bar32\"></div><div class=\"bar33\"></div><div class=\"bar34\"></div>\r\n <div class=\"bar35\"></div><div class=\"bar36\"></div><div class=\"bar37\"></div><div class=\"bar38\"></div><div class=\"bar39\"></div>\r\n <div class=\"bar40\"></div><div class=\"bar41\"></div>\r\n\r\n<table class=\"table1\"><tr>\r\n          \r\n <td class=\"td1\" style=\"margin-left:0px;\">5/20</td><td class=\"td1\" style=\"margin-left:50px;\">5/21</td>\r\n <td class=\"td1\" style=\"margin-left:100px;\">6/8</td><td class=\"td1\" style=\"margin-left:150px;\">6/11 ?</td>\r\n <td class=\"td1\" style=\"margin-left:200px;\"></td><td class=\"td1\" style=\"margin-left:250px;\"></td>\r\n <td class=\"td1\" style=\"margin-left:300px;\"></td><td class=\"td1\" style=\"margin-left:350px;\"></td>\r\n <td class=\"td1\" style=\"margin-left:400px;\"></td><td class=\"td1\" style=\"margin-left:450px;\"></td>\r\n <td class=\"td1\" style=\"margin-left:500px;\"></td><td class=\"td1\" style=\"margin-left:550px;\"></td>\r\n <td class=\"td1\" style=\"margin-left:600px;\"></td><td class=\"td1\" style=\"margin-left:650px;\"></td>\r\n <td class=\"td1\" style=\"margin-left:700px;\"></td><td class=\"td1\" style=\"margin-left:750px;\">Date</td></tr><tr>\r\n\r\n   <td class=\"td1a\" style=\"margin-top:0.2vw;\">1</td><td class=\"td1a\" style=\"margin-top:1.4vw;\">2</td>\r\n <td class=\"td1a\" style=\"margin-top:2.6vw;\">3</td><td class=\"td1a\" style=\"margin-top:3.8vw;\">4</td>\r\n <td class=\"td1a\" style=\"margin-top:5vw;\">5</td><td class=\"td1a\" style=\"margin-top:6.2vw;\">6</td>\r\n <td class=\"td1a\" style=\"margin-top:7.4vw;\">7</td><td class=\"td1a\" style=\"margin-top:8.6vw;\">8</td>\r\n <td class=\"td1a\" style=\"margin-top:9.8vw;\">9</td><td class=\"td1a\" style=\"margin-top:11vw;\">10</td>\r\n <td class=\"td1a\" style=\"margin-top:12.2vw;\">11</td><td class=\"td1a\" style=\"margin-top:13.4vw;\">12</td> \r\n <td class=\"td1a\" style=\"margin-top:14.6vw;\">13</td><td class=\"td1a\" style=\"margin-top:15.8vw;\">14</td>\r\n <td class=\"td1a\" style=\"margin-top:17vw;\">15</td><td class=\"td1a\" style=\"margin-top:18.2vw;\">16</td>\r\n <td class=\"td1a\" style=\"margin-top:19.4vw;\">17</td><td class=\"td1a\" style=\"margin-top:20.6vw;\">18</td>\r\n <td class=\"td1a\" style=\"margin-top:21.8vw;\">19</td><td class=\"td1a\" style=\"margin-top:23vw;\">20</td>\r\n <td class=\"td1a\" style=\"margin-top:24.2vw;\">21</td><td class=\"td1a\" style=\"margin-top:25.4vw;\">22</td>\r\n <td class=\"td1a\" style=\"margin-top:26.6vw;\">23</td><td class=\"td1a\" style=\"margin-top:27.8vw;\">24</td>\r\n <td class=\"td1a\" style=\"margin-top:29vw;\">25</td><td class=\"td1a\" style=\"margin-top:30.2vw;\">26</td>\r\n <td class=\"td1a\" style=\"margin-top:31.4vw;\">27</td><td class=\"td1a\" style=\"margin-top:32.6vw;\">28</td>\r\n <td class=\"td1a\" style=\"margin-top:33.8vw;\">29</td><td class=\"td1a\" style=\"margin-top:35vw;\">30</td>\r\n <td class=\"td1a\" style=\"margin-top:36.2vw;\">31</td><td class=\"td1a\" style=\"margin-top:37.4vw;\">32</td>\r\n <td class=\"td1a\" style=\"margin-top:42.2vw;\">Total</td><td class=\"td1a\" style=\"margin-top:43.4vw;\">td1a</td></tr><tr> \r\n  \r\n      <td class=\"td2\" style=\"margin-top:0.2vw;\">428 </td>  \r\n <td class=\"td2\" style=\"margin-top:1.4vw;\">425 </td><td class=\"td2\" style=\"margin-top:2.6vw;\">424 </td>\r\n <td class=\"td2\" style=\"margin-top:3.8vw;\">424 </td><td class=\"td2\" style=\"margin-top:5vw;\">424 </td>\r\n <td class=\"td2\" style=\"margin-top:6.2vw;\">421 </td><td class=\"td2\" style=\"margin-top:7.4vw;\">419 </td>\r\n <td class=\"td2\" style=\"margin-top:8.6vw;\">416 </td><td class=\"td2\" style=\"margin-top:9.8vw;\">413 </td>\r\n <td class=\"td2\" style=\"margin-top:11vw;\">411 </td><td class=\"td2\" style=\"margin-top:12.2vw;\">407 </td>\r\n <td class=\"td2\" style=\"margin-top:13.4vw;\">403 </td><td class=\"td2\" style=\"margin-top:14.6vw;\">397 </td>\r\n <td class=\"td2\" style=\"margin-top:15.8vw;\">393 </td><td class=\"td2\" style=\"margin-top:17vw;\">391 </td>\r\n <td class=\"td2\" style=\"margin-top:18.2vw;\">388 </td><td class=\"td2\" style=\"margin-top:19.4vw;\">386 </td>\r\n <td class=\"td2\" style=\"margin-top:20.6vw;\">384 </td><td class=\"td2\" style=\"margin-top:21.8vw;\">382 </td>\r\n <td class=\"td2\" style=\"margin-top:23vw;\">380 </td><td class=\"td2\" style=\"margin-top:24.2vw;\">379 </td>\r\n <td class=\"td2\" style=\"margin-top:25.4vw;\">377 </td><td class=\"td2\" style=\"margin-top:26.6vw;\">374 </td>\r\n <td class=\"td2\" style=\"margin-top:27.8vw;\">370 </td><td class=\"td2\" style=\"margin-top:29vw;\">364 </td>\r\n <td class=\"td2\" style=\"margin-top:30.2vw;\">339 </td><td class=\"td2\" style=\"margin-top:31.4vw;\">268 </td>\r\n <td class=\"td2\" style=\"margin-top:32.6vw;\">265 </td><td class=\"td2\" style=\"margin-top:33.8vw;\">259 </td>\r\n <td class=\"td2\" style=\"margin-top:35vw;\">256 </td><td class=\"td2\" style=\"margin-top:36.2vw;\"> </td>\r\n <td class=\"td2\" style=\"margin-top:37.4vw;\"> </td><td class=\"td2\" style=\"margin-top:38.6vw;\"> </td>\r\n <td class=\"td2\" style=\"margin-top:39.8vw;\"> </td><td class=\"td2\" style=\"margin-top:41vw;\"> </td>\r\n <td class=\"td2\" style=\"margin-top:42.2vw;\">Total</td><td class=\"td2\" style=\"margin-top:43.4vw;\">td2</td></tr><tr> \r\n\r\n      <td class=\"td3\" style=\"margin-top:0.2vw;\">427 </td>  \r\n <td class=\"td3\" style=\"margin-top:1.4vw;\">425 </td><td class=\"td3\" style=\"margin-top:2.6vw;\">424 </td>\r\n <td class=\"td3\" style=\"margin-top:3.8vw;\">424 </td><td class=\"td3\" style=\"margin-top:5vw;\">424 </td>\r\n <td class=\"td3\" style=\"margin-top:6.2vw;\">422 </td><td class=\"td3\" style=\"margin-top:7.4vw;\">420 </td>\r\n <td class=\"td3\" style=\"margin-top:8.6vw;\">418 </td><td class=\"td3\" style=\"margin-top:9.8vw;\">415 </td>\r\n <td class=\"td3\" style=\"margin-top:11vw;\">412 </td> <td class=\"td3\" style=\"margin-top:12.2vw;\">408 </td>\r\n <td class=\"td3\" style=\"margin-top:13.4vw;\">403 </td> <td class=\"td3\" style=\"margin-top:14.6vw;\">397 </td>\r\n <td class=\"td3\" style=\"margin-top:15.8vw;\">393 </td> <td class=\"td3\" style=\"margin-top:17vw;\">391 </td>\r\n <td class=\"td3\" style=\"margin-top:18.2vw;\">388 </td> <td class=\"td3\" style=\"margin-top:19.4vw;\">386 </td>\r\n <td class=\"td3\" style=\"margin-top:20.6vw;\">383 </td> <td class=\"td3\" style=\"margin-top:21.8vw;\">381 </td>\r\n <td class=\"td3\" style=\"margin-top:23vw;\">380 </td> <td class=\"td3\" style=\"margin-top:24.2vw;\">378 </td>\r\n <td class=\"td3\" style=\"margin-top:25.4vw;\">377 </td> <td class=\"td3\" style=\"margin-top:26.6vw;\">375 </td>\r\n <td class=\"td3\" style=\"margin-top:27.8vw;\">371 </td> <td class=\"td3\" style=\"margin-top:29vw;\">366 </td>\r\n <td class=\"td3\" style=\"margin-top:30.2vw;\">342 </td> <td class=\"td3\" style=\"margin-top:31.4vw;\">268 </td>\r\n <td class=\"td3\" style=\"margin-top:32.6vw;\">266 </td> <td class=\"td3\" style=\"margin-top:33.8vw;\">261 </td>\r\n <td class=\"td3\" style=\"margin-top:35vw;\">258 </td> <td class=\"td3\" style=\"margin-top:36.2vw;\"> </td>\r\n <td class=\"td3\" style=\"margin-top:37.4vw;\"> </td> <td class=\"td3\" style=\"margin-top:38.6vw;\"> </td>\r\n <td class=\"td3\" style=\"margin-top:39.8vw;\"> </td> <td class=\"td3\" style=\"margin-top:41vw;\"> </td>\r\n <td class=\"td3\" style=\"margin-top:42.2vw;\">Total</td><td class=\"td3\" style=\"margin-top:43.4vw;\">td3</td></tr><tr> \r\n\r\n       <td class=\"td4\" style=\"margin-top:0.2vw;\">435 </td>  \r\n <td class=\"td4\" style=\"margin-top:1.4vw;\">426 </td><td class=\"td4\" style=\"margin-top:2.6vw;\">425 </td>\r\n <td class=\"td4\" style=\"margin-top:3.8vw;\">425 </td><td class=\"td4\" style=\"margin-top:5vw;\">424 </td>\r\n <td class=\"td4\" style=\"margin-top:6.2vw;\">420 </td><td class=\"td4\" style=\"margin-top:7.4vw;\">418 </td>\r\n <td class=\"td4\" style=\"margin-top:8.6vw;\">416 </td><td class=\"td4\" style=\"margin-top:9.8vw;\">414 </td>\r\n <td class=\"td4\" style=\"margin-top:11vw;\">413 </td><td class=\"td4\" style=\"margin-top:12.2vw;\">409 </td>\r\n <td class=\"td4\" style=\"margin-top:13.4vw;\">406 </td><td class=\"td4\" style=\"margin-top:14.6vw;\">400 </td>\r\n <td class=\"td4\" style=\"margin-top:15.8vw;\">396 </td><td class=\"td4\" style=\"margin-top:17vw;\">394 </td>\r\n <td class=\"td4\" style=\"margin-top:18.2vw;\">391 </td><td class=\"td4\" style=\"margin-top:19.4vw;\">389 </td>\r\n <td class=\"td4\" style=\"margin-top:20.6vw;\">387 </td><td class=\"td4\" style=\"margin-top:21.8vw;\">384 </td>\r\n <td class=\"td4\" style=\"margin-top:23vw;\">381 </td><td class=\"td4\" style=\"margin-top:24.2vw;\">379 </td>\r\n <td class=\"td4\" style=\"margin-top:25.4vw;\">378 </td><td class=\"td4\" style=\"margin-top:26.6vw;\">377 </td>\r\n <td class=\"td4\" style=\"margin-top:27.8vw;\">372 </td><td class=\"td4\" style=\"margin-top:29vw;\">368 </td>\r\n <td class=\"td4\" style=\"margin-top:30.2vw;\">350 </td><td class=\"td4\" style=\"margin-top:31.4vw;\">272 </td>\r\n <td class=\"td4\" style=\"margin-top:32.6vw;\">267 </td><td class=\"td4\" style=\"margin-top:33.8vw;\">263 </td>\r\n <td class=\"td4\" style=\"margin-top:35vw;\">258 </td><td class=\"td4\" style=\"margin-top:36.2vw;\"> </td>\r\n <td class=\"td4\" style=\"margin-top:37.4vw;\"> </td><td class=\"td4\" style=\"margin-top:38.6vw;\"> </td>\r\n <td class=\"td4\" style=\"margin-top:39.8vw;\"> </td><td class=\"td4\" style=\"margin-top:41vw;\"> </td>\r\n <td class=\"td4\" style=\"margin-top:42.2vw;\">Total</td><td class=\"td4\" style=\"margin-top:43.4vw;\">td4</td>\r\n\r\n       <td class=\"td5\" style=\"margin-top:0.2vw;\">td5 </td>  \r\n <td class=\"td5\" style=\"margin-top:1.4vw;\"> </td><td class=\"td5\" style=\"margin-top:2.6vw;\"> </td>\r\n <td class=\"td5\" style=\"margin-top:3.8vw;\"> </td><td class=\"td5\" style=\"margin-top:5vw;\"> </td>\r\n <td class=\"td5\" style=\"margin-top:6.2vw;\"> watch</td><td class=\"td5\" style=\"margin-top:7.4vw;\">watch </td>\r\n <td class=\"td5\" style=\"margin-top:8.6vw;\">watch </td><td class=\"td5\" style=\"margin-top:9.8vw;\">watch </td>\r\n <td class=\"td5\" style=\"margin-top:11vw;\"> </td><td class=\"td5\" style=\"margin-top:12.2vw;\"> </td>\r\n <td class=\"td5\" style=\"margin-top:13.4vw;\"> </td><td class=\"td5\" style=\"margin-top:14.6vw;\"> </td>\r\n <td class=\"td5\" style=\"margin-top:15.8vw;\"> </td><td class=\"td5\" style=\"margin-top:17vw;\"> </td>\r\n <td class=\"td5\" style=\"margin-top:18.2vw;\"> </td><td class=\"td5\" style=\"margin-top:19.4vw;\"> </td>\r\n <td class=\"td5\" style=\"margin-top:20.6vw;\"> </td><td class=\"td5\" style=\"margin-top:21.8vw;\"> </td>\r\n <td class=\"td5\" style=\"margin-top:23vw;\"> </td><td class=\"td5\" style=\"margin-top:24.2vw;\"> </td>\r\n <td class=\"td5\" style=\"margin-top:25.4vw;\"> </td><td class=\"td5\" style=\"margin-top:26.6vw;\"> </td>\r\n <td class=\"td5\" style=\"margin-top:27.8vw;\"> </td><td class=\"td5\" style=\"margin-top:29vw;\"> </td>\r\n <td class=\"td5\" style=\"margin-top:30.2vw;\"> </td><td class=\"td5\" style=\"margin-top:31.4vw;\"> </td>\r\n <td class=\"td5\" style=\"margin-top:32.6vw;\"> </td><td class=\"td5\" style=\"margin-top:33.8vw;\"> </td>\r\n <td class=\"td5\" style=\"margin-top:35vw;\"> </td><td class=\"td5\" style=\"margin-top:36.2vw;\"> </td>\r\n <td class=\"td5\" style=\"margin-top:42.2vw;\">Total</td><td class=\"td5\" style=\"margin-top:43.4vw;\">td5</td>\r\n\r\n     </tr></table>     <div class=\"falsetext\">1</div>     </div>\r\n\r\n\r\n "
    ],
    [
      "YLpS16X7",
      "N25",
      "Korotkodul",
      "C++",
      "Thursday 8th of June 2023 11:07:14 AM CDT",
      "#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <cmath>\r\n#define pii pair <int, int>\r\nusing namespace std;\r\n\r\nvoid cv(vector <int> v) {\r\n    for (int i: v) {\r\n        cout << i << ' ';\r\n    }\r\n    cout << \"\\n\";\r\n}\r\n\r\nint f(int n) {\r\n    vector <pii> div;\r\n    for (int i = 2; i <= sqrt(n); ++i) {\r\n        if (n % i == 0) {\r\n            int cnt = 0;\r\n            while (n % i == 0) {\r\n                n /= i;\r\n                cnt++;\r\n            }\r\n            div.push_back({i,cnt});\r\n        }\r\n    }\r\n    if (div.size() > 1) {\r\n        return -1;\r\n    }\r\n    if (div[0].second % 2 == 1) {\r\n        return -1;\r\n    }\r\n    int div_num = div[0].second;\r\n    for (int i = 2; i <= sqrt(div_num); ++i) {\r\n        if (div_num % i == 0) {\r\n            return -1;\r\n        }\r\n    }\r\n    return div[0].second;\r\n}\r\n\r\n\r\nbool cmp(pii a, pii b) {\r\n    return a.second > b.second || a.second == b.second &&  a.first > b.first;\r\n}\r\n\r\nint main()\r\n{\r\n    vector <bool> prime(10010,1);\r\n    vector <int> pr = {2,3};\r\n    /*for (int i = 2; i < 10010; ++i) {\r\n        for (int j = 2*i; j < 10010; j += i) {\r\n            prime[j] = 0;\r\n        }\r\n    }\r\n    for (int i = 2; i < 10010; ++i) {\r\n        if (prime[i]) {\r\n            pr.push_back(i);\r\n        }\r\n    }*/\r\n    for (int i = 4; i < 10010; ++i) {\r\n        bool ok = 1;\r\n        for (int j = 2; j <= sqrt(i); ++j) {\r\n            if (i % j == 0) {\r\n                ok = 0;\r\n            }\r\n        }\r\n        if (ok) {\r\n            pr.push_back(i);\r\n        }\r\n    }\r\n    //cv(pr);\r\n    for (int n: pr) {\r\n        //n - \u043f\u0440\u043e\u0441\u0442\u043e\u0435 \r\n        int i = 0;\r\n        while (pow(n, pr[i] - 1) < 10 * pow(10,6); \r\n    }\r\n}\r\n"
    ],
    [
      "agcR4YQk",
      "Untitled",
      "mikronik24",
      "C++",
      "Thursday 8th of June 2023 11:03:14 AM CDT",
      "#include <iostream>\r\n#include \"fstream\"\r\n#include \"sstream\"\r\nusing namespace std;\r\n\r\nstruct car {\r\n    char* name;\r\n    float price;\r\n    int year;\r\n};\r\n\r\nstring * split_car_data(string line){\r\n    string arr[3];\r\n    auto i = 0;\r\n    stringstream ssin(line);\r\n    while (ssin.good() && i < 4){\r\n        ssin >> arr[i];\r\n        ++i;\r\n    }\r\n    return arr;\r\n}\r\n\r\nint main() {\r\n    fstream file;\r\n    vector<car> cars;\r\n    vector <string> lines;\r\n    string line;\r\n    auto file_path = \"/Users/toczekmj/CLionProjects/testy/pojazdy.txt\";\r\n    auto changes = false;\r\n\r\n\r\n    file.open(file_path);\r\n    if(file.is_open())\r\n    {\r\n        while(getline(file, line))\r\n        {\r\n            auto data = split_car_data(line);\r\n            auto name = data[0];\r\n            auto year = stoi((string)data[1]);\r\n            auto price = stof((string)data[2]);\r\n            char * n_name = new char[name.length()+1];\r\n            std::strcpy(n_name, name.c_str());\r\n\r\n            if(year >= 2016 && year <= 2021){\r\n                price -= (price/10);\r\n                changes = true;\r\n            }\r\n            cars.push_back(\r\n                    car{\r\n                        n_name,\r\n                        price,\r\n                        year\r\n                    }\r\n            );\r\n        }\r\n        file.close();\r\n    }\r\n\r\n    if(changes){\r\n        file.open(file_path, fstream::out | fstream::trunc);\r\n        if(file.is_open())\r\n        {\r\n            for_each(cars.begin(), cars.end(), [&](const car &item) {\r\n               file << item.name << \" \" << item.year << \" \" << item.price << \"\\n\";\r\n            });\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"
    ],
    [
      "bMRX88AA",
      "\u9080\u60a8\u4e00\u8d77\u770b\uff1a\u9b3c\u706d\u4e4b\u5203",
      "xiaomianao666",
      "JavaScript",
      "Thursday 8th of June 2023 11:01:10 AM CDT",
      "\u6d77\u9614\u89c6\u754c\u89c4\u5219\u5206\u4eab\uff0c\u5f53\u524d\u5206\u4eab\u7684\u662f\uff1a\u4e8c\u7ea7\u9875\u9762\u8be6\u60c5\uffe5page_detail\uffe5\u9b3c\u706d\u4e4b\u5203@@"
    ],
    [
      "RWz8UuM0",
      "Untitled",
      "mikronik24",
      "C++",
      "Thursday 8th of June 2023 10:53:04 AM CDT",
      "#include <iostream>\r\n#include \"fstream\"\r\n#include \"sstream\"\r\nusing namespace std;\r\n\r\nstruct car {\r\n    string name;\r\n    float price;\r\n    int year;\r\n};\r\n\r\nstring* split_string(string line){\r\n    string arr[3];\r\n    auto i = 0;\r\n    stringstream ssin(line);\r\n    while (ssin.good() && i < 4){\r\n        ssin >> arr[i];\r\n        ++i;\r\n    }\r\n    return arr;\r\n}\r\n\r\nint main() {\r\n    fstream file;\r\n    vector<car> cars;\r\n    vector <string> lines;\r\n    string line;\r\n    auto file_path = \"/Users/toczekmj/CLionProjects/testy/pojazdy.txt\";\r\n    auto changes = false;\r\n\r\n\r\n    file.open(file_path);\r\n    if(file.is_open())\r\n    {\r\n        while(getline(file, line))\r\n        {\r\n            auto data = split_string(line);\r\n            auto name = data[0];\r\n            auto year = stoi((string)data[1]);\r\n            auto price = stof((string)data[2]);\r\n\r\n            if(year >= 2016 && year <= 2021){\r\n                price -= (price/10);\r\n                changes = true;\r\n            }\r\n            cars.push_back(\r\n                    car{\r\n                        name,\r\n                        price,\r\n                        year\r\n                    }\r\n            );\r\n        }\r\n        file.close();\r\n    }\r\n\r\n    if(changes){\r\n        file.open(file_path, fstream::out | fstream::trunc);\r\n        if(file.is_open())\r\n        {\r\n            for_each(cars.begin(), cars.end(), [&](const car &item) {\r\n               file << item.name << \" \" << item.year << \" \" << item.price << \"\\n\";\r\n            });\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"
    ],
    [
      "pfiQ67cD",
      "TkinterGlobals.py",
      "Ruslan_nig",
      "Python",
      "Thursday 8th of June 2023 10:44:11 AM CDT",
      "#pylint:disable=E0001\r\n#pylint:disable=E0001\r\n#pylint:disable=E0602\r\nfrom tkinter import *\r\nclass Block:\r\n\tdef __init__(self, master,name_fr):\r\n\t\tself.block_frame=LabelFrame(master,text=name_fr)\r\n\t\tvar1=BooleanVar()\r\n\t\tvar1.set(0)\r\n\t\tself.check=Checkbutton(self.block_frame)\r\n\t\tself.ent=Entry(self.block_frame, width=10)\r\n\t\tself.block_frame.pack()\r\n\t\tself.check.pack(side=LEFT)\r\n\t\tself.ent.pack(side=LEFT)\r\nroot = Tk()\r\n\r\nent_in=Entry(root, width=20)\r\nbut=Button(width=20,text='enter neurons')\r\nent_in.pack()\r\nbut.pack()\r\n\r\ndef neuronCreate(event):\r\n\tneuronQ=int(ent_in.get())\r\n\tfor i in range(1,neuronQ):\r\n\t\tglobals()[f'nrBlock_{i}']=Block(root,'neuron '+str(i))\r\n\ttestLab=Label(text=globals()['nrBlock_3'], wraplength=800)\r\n\ttestLab.pack()\r\nbut.bind('<Button-1>',neuronCreate)\r\nroot.mainloop()\r\n\r\n\t\t\r\n\t\t"
    ],
    [
      "9RzUZe6S",
      "Vue \ud83d\udca9",
      "fabiobiondi",
      "TypeScript",
      "Thursday 8th of June 2023 10:37:13 AM CDT",
      "<script setup lang=\"ts\" generic=\"T\">\r\nimport { ref } from 'vue';\r\n\r\n\r\n/*\r\n\r\nconst props = defineProps({\r\n  title: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  icon: String,\r\n  isOpen: {\r\n    type: Boolean,\r\n    default: true\r\n  },\r\n});\r\n*/\r\n\r\n\r\nexport interface Props<T> {\r\n  title: T;\r\n  icon: string;\r\n  isOpen: boolean;\r\n}\r\n\r\nexport const props = defineProps<Props<T>>()\r\n\r\nconst emit = defineEmits<{\r\n  iconClick: [list: T[]]\r\n}>()\r\n\r\n\r\nconst isOpen = ref(props.isOpen);\r\n\r\n</script>\r\n\r\n\r\n<template>\r\n  <div>\r\n    <div\r\n      class=\"flex justify-between bg-slate-800 text-white p-3\"\r\n      @click=\"isOpen = !isOpen\"\r\n    >\r\n      {{ title }}\r\n      <div\r\n          @click.stop=\"emit('iconClick', [])\"\r\n      >{{icon}}</div>\r\n    </div>\r\n\r\n    <div class=\"p-3 bg-slate-200\" v-if=\"isOpen\">\r\n      <slot />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n// ------\r\n\r\n\r\n\r\n<script setup lang=\"ts\">\r\n// src/App.vue\r\nimport Panel from './components/Panel.vue';\r\n\r\nfunction doSomething() {\r\n  window.alert('hello')\r\n}\r\n</script>\r\n\r\n<template>\r\n  <Panel title=\"one\">\r\n    content one\r\n  </Panel>\r\n\r\n  <Panel\r\n    title=\"two\"\r\n    icon=\"\ud83d\ude05\"\r\n    :isOpen=\"false\"\r\n    @iconClick=\"doSomething\"\r\n  >\r\n    content two\r\n  </Panel>\r\n</template>\r\n\r\n\r\n"
    ],
    [
      "Tb52qX9z",
      "MenuTest",
      "Inksaver",
      "Lua",
      "Thursday 8th of June 2023 10:20:30 AM CDT",
      "version = 20230602.1700\r\nmenu = require \"lib.menu\"\r\n--[[\r\nhttps://pastebin.com/Tb52qX9z\r\n]]\r\nlocal function getTest()\r\n\tlocal line, test, age, height, likesLua  = 1, \"\", 0, 0, false\r\n\tline = menu.clear()\r\n\t\r\n\t--getString(prompt, withTitle, minValue, maxValue, row, fg, bg)\r\n\ttest, line = menu.getString(\"Type your name \", true, 2, 10, line, colors.green, colors.black)\r\n\tline = line + 1\r\n\t--age, line = menu.getInteger(\"Type a number 5 to 99 default 50\", 5, 99, line, colors.yellow, colors.black, 50)\r\n\tage, line = menu.getInteger(\"Type a number 5 to 99 default 50\", 5, 99, nil, colors.pink, nil, 50)\r\n\tmenu.colourPrint(\"You chose \".. age..\", line=\"..line, colors.red, colors.black)\r\n\t\r\n\tage, line = menu.getInteger({\"Type your age\",\"Between 5 and 99 \"}, 5, 99, line, colors.yellow, colors.black)\r\n\tline = line + 1\r\n\t\r\n\theight, line = menu.getFloat(\"Type your height\", 0.5, 2.1, line, colors.cyan, colors.black)\r\n\tline = line + 1\r\n\t\r\n\tlikesLua, line = menu.getBool(\"Do you like Lua?(y/n)\", line, colors.blue, colors.black)\r\n\tline = line + 1\r\nend\r\n\r\nlocal function menuTest()\r\n\tlocal choice, modifier = 0, \"\"\r\n\tline = menu.clear()\r\n\r\n\toptions = {\"white\", \"red\", \"blue\", \"green\", \"yellow\", \"cyan\", \"magenta\", \"purple\", \"pink\"}\r\n\t--choice, modifier = menu.new(\"Choose your colour\", options)\r\n\tlocal pp = \r\n\t{\r\n\t\tprompt = colors.yellow,\r\n\t\titemColours = {colors.white, colors.red, colors.blue, colors.green, colors.yellow, colors.cyan, colors.magenta, colors.purple, colors.pink},\r\n\t\tmenuPrompt = colors.lime\r\n\t}\r\n\t--[[local pp = \r\n\t{\r\n\t\tprompt = colors.green,\r\n\t\titemColours = {colors.white, colors.red, ... one for each item},\r\n\t\tmenuPrompt = colors.yellow\r\n\t}\r\n\tchoice, modifier = menu.menu or menu.new(\"Choose your option\", options, pp)]]\r\n\tchoice, modifier = menu.menu(\"Choose your colour\", options, pp)\r\n\tif choice ~= nil then\r\n\t\tlocal colour = colors[options[choice]]\r\n\t\tmenu.colourPrint(\"You chose \".. options[choice], colour, colors.black)\r\n\telse\r\n\t\tprint(\"you chose \"..modifier)\r\n\tend\r\nend\r\n\r\nlocal function colourDisplay()\r\n\tline = menu.clear()\r\n\t--print(text, fg, bg, width) write(text, fg, bg, width)\r\n\tmenu.colourPrint(\"red on black\",      colors.red,       colors.black)\r\n\tmenu.colourPrint(\"purple on black\",   colors.purple,    colors.black)\r\n\tmenu.colourPrint(\"magenta on black\",  colors.magenta,   colors.black)\r\n\tmenu.colourPrint(\"pink on black\",     colors.pink,      colors.black)\r\n\t\r\n\tmenu.colourPrint(\"green on black\",    colors.green,     colors.black)\r\n\tmenu.colourPrint(\"lime on black\",     colors.lime,      colors.black)\r\n\tmenu.colourPrint(\"yellow on black\",   colors.yellow,    colors.black)\r\n\tmenu.colourPrint(\"orange on black\",   colors.orange,    colors.black)\r\n\tmenu.colourPrint(\"brown on black\",    colors.brown,     colors.black)\r\n\t\r\n\tmenu.colourPrint(\"blue on black\",     colors.blue,      colors.black)\r\n\tmenu.colourPrint(\"cyan on black\",     colors.cyan,      colors.black)\r\n\tmenu.colourPrint(\"lightBlue on black ENTER\",colors.lightBlue, colors.black)\r\n\t\r\n\tread()\r\n\tline = menu.clear()\r\n\tmenu.colourPrint(\"white on black\",     colors.white,     colors.black)\r\n\tmenu.colourPrint(\"lightGray on black\", colors.lightGray, colors.black)\r\n\tmenu.colourPrint(\"gray on black\",      colors.gray,      colors.black)\r\n\tmenu.colourPrint(\"black on white\",     colors.black,     colors.white)\r\n\tmenu.colourPrint(\"black on lightGray\", colors.black,     colors.lightGray)\r\n\tmenu.colourPrint(\"black on gray ENTER\",colors.black,     colors.gray)\r\n\t\r\n\tread()\r\n\tline = menu.clear()\r\n\tmenu.colourPrint(\"black on red\",      colors.black,       colors.red)\r\n\tmenu.colourPrint(\"black on purple\",   colors.black,    colors.purple)\r\n\tmenu.colourPrint(\"black on magenta\",  colors.black,   colors.magenta)\r\n\tmenu.colourPrint(\"black on pink\",     colors.black,      colors.pink)\r\n\t\r\n\tmenu.colourPrint(\"black on green\",    colors.black,     colors.green)\r\n\tmenu.colourPrint(\"black on lime\",     colors.black,      colors.lime)\r\n\tmenu.colourPrint(\"black on yellow\",   colors.black,    colors.yellow)\r\n\tmenu.colourPrint(\"black on orange\",   colors.black,    colors.orange)\r\n\tmenu.colourPrint(\"black on brown\",    colors.black,     colors.brown)\r\n\t\r\n\tmenu.colourPrint(\"black on blue\",     colors.black,      colors.blue)\r\n\tmenu.colourPrint(\"black on cyan\",     colors.black,      colors.cyan)\r\n\tmenu.colourPrint(\"black on lightBlue ENTER\",colors.black, colors.lightBlue)\r\n\tread()\r\n\tline = menu.clear()\r\nend\r\n\r\nlocal function printText()\r\n\tline = menu.clear()\r\n\t--[[\r\n\tlocal text = '~brown~Thank ~red~you ~brown~for playing this adventure'\r\n\tline = menu.colourPrint(line, text, true, true)\r\n\tlocal textTable = {'~pink~and for ~blue~testing the ~lime~colours','~red~Coded by Inksaver','~green~If you did not make it this time','~yellow~Please try again!'}\r\n\tfor _,text in ipairs(textTable) do\r\n\t\tline = menu.colourPrint(line, text, true, true)\r\n\tend]]\r\ntext = [[                ~lightGray~MINING:~white~\r\nCan be used in over-world or nether.   \r\nCreate a pre-formatted 33 x 33 blocks  \r\nmine at chosen level.~brown~                 \r\nLadders and stairs up/down~blue~    \r\nBubble lift and safe drop to water.~lightGray~     \r\nStrip resources from abandoned mines.~yellow~  \r\nFaster version of 33x33 mine pattern   \r\nusing corridor and rectangle functions.~gray~\r\nMine bottom layer to bedrock not worth\r\nthe time and fuel.\r\n]]\r\n\tline = menu.colourText(line, text, true)\r\n\tterm.setCursorPos(1, line + 1)\r\n\tread()\r\ntext = [[\r\nFORESTRY:\r\nFell Tree can be used in Nether as well\r\nfor cutting any size tree / branches\r\nCreate a simple 16 single tree farm\r\nor 4 double size (Dark oak or any type)\r\nsuitable for turtle harvesting.\r\nAutomatic treefarm can be created and\r\nmanaged with dedicated automatic turtle.\r\nNatural forest can be harvested and\r\nreplanted. (Must be walled off)\r\n]]\r\n\tline = menu.clear()\r\n\tline = menu.colourText(line, text, true)\r\n\tterm.setCursorPos(1, line+1)\r\nend\r\n\r\nlocal function main()\r\n\t--printText()\r\n\t--read()\r\n\tgetTest()\r\n\tread()\r\n\tmenuTest()\r\n\tread()\r\n\tcolourDisplay()\r\nend\r\n\r\nmain()"
    ],
    [
      "eK3mt7Wy",
      "Untitled",
      "fatalryuu",
      "Java",
      "Thursday 8th of June 2023 10:11:59 AM CDT",
      "import java.io.*;\r\n//\u0443\u0434\u0430\u043b\u0438\u0442\u044c \u043d\u0435\u043d\u0443\u0436\u043d\u044b\u0435 \u0438\u043c\u043f\u043e\u0440\u0442\u044b - Ctrl + Alt + O (\u044d\u0442\u043e \u043e, \u043d\u0435 \u043d\u043e\u043b\u044c)\r\nimport java.nio.file.Files;\r\nimport java.nio.file.Paths;\r\nimport java.nio.file.StandardOpenOption;\r\nimport java.util.ArrayList;\r\nimport java.util.Scanner;\r\n\r\nclass Main {\r\n    public static void main(String[] args) throws IOException {\r\n        //\u043c\u0435\u0442\u043e\u0434 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043f\u0443\u0442\u0438 \u043a \u0444\u0430\u0439\u043b\u0443 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u0435\u0433\u043e \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043e\u0432\u0430\u043d\u0438\u0435\r\n        //\u0432\u0432\u043e\u0434 \u043f\u043e\u043a\u0430 \u0444\u0430\u0439\u043b \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0432\u0432\u0435\u0434\u0435\u043d\r\n        //\u043c\u043e\u0436\u0435\u0448\u044c \u043f\u0443\u0442\u044c \u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043a\u0430\u043a \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e, \u0430 \u043c\u043e\u0436\u0435\u0448\u044c \u043f\u0440\u043e\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0442\u044c \u043f\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c, \u043a\u0430\u043a \u0441\u0430\u043c \u0445\u043e\u0447\u0435\u0448\u044c\r\n        createMenu();\r\n    }\r\n\r\n    public static void createMenu() throws IOException {\r\n        Scanner scanner = new Scanner(System.in);\r\n        int choice;\r\n        do {\r\n            printMenu();\r\n            choice = getMenuChoice();\r\n        } while (choice != 0);\r\n        scanner.close();\r\n    }\r\n\r\n    public static void printMenu() {\r\n        //\u0442\u0443\u0442 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438 \u0447\u0442\u043e IDE \u0441\u043e\u0432\u0435\u0442\u0443\u0435\u0442, \u043a\u043b\u0430\u0441\u0441\u043d\u0430\u044f \u0432\u0435\u0449\u044c\r\n        System.out.println(\"1. \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u0444\u0430\u0439\u043b\\n\" +\r\n                \"2. \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430\\n\" +\r\n                \"3. \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0444\u0430\u0439\u043b\u0430\\n\" +\r\n                \"4. \u041e\u0447\u0438\u0441\u0442\u0438\u0442\u044c \u0444\u0430\u0439\u043b\\n\" +\r\n                \"0. \u041a\u043e\u043d\u0435\u0446 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b\");\r\n    }\r\n\r\n    public static int getMenuChoice() throws IOException {\r\n        Scanner scanner = new Scanner(System.in);\r\n        System.out.print(\"\u0412\u0430\u0448 \u0432\u044b\u0431\u043e\u0440: \");\r\n        int choice = scanner.nextInt();\r\n        switch (choice) {\r\n            case (0) -> System.out.println(0); //\u0443\u0434\u0430\u043b\u0438\u0442\u044c\r\n            case (1) -> addLine();\r\n            case (2) -> deleteLastLine();\r\n            case (3) -> showWhatInside();\r\n            case (4) -> removeAll();\r\n        }\r\n        return choice;\r\n    }\r\n\r\n    //\u0440\u0430\u0437\u0431\u0435\u0440\u0438\u0441\u044c \u043a\u0430\u043a \u043c\u0435\u043d\u044f\u0442\u044c true/false \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439 \u0442\u043e\u043b\u044c\u043a\u043e \u044d\u0442\u0443 \u0444\u0443\u043d\u043a\u0446\u0438\u044e\r\n    //\u0432\u044b\u043d\u0435\u0441\u0438 Reader \u0442\u043e\u0436\u0435 \u0432 \u0442\u0430\u043a\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u0447\u0442\u043e\u0431\u044b \u043a\u043e\u0434\u0441\u0442\u0430\u0439\u043b \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0439 \u0431\u044b\u043b\r\n    public static BufferedWriter createWriter() throws IOException {\r\n        return new BufferedWriter(new FileWriter(\"Text.txt\", true));\r\n    }\r\n\r\n    public static void addLine() throws IOException {\r\n        Scanner sc = new Scanner(System.in);\r\n        BufferedWriter buff = createWriter();\r\n        System.out.println(\"\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0445\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0432 \u044d\u0442\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435: \");\r\n        //\u0433\u043e\u0432\u043d\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\r\n        String usertext = sc.nextLine();\r\n        buff.append(usertext);\r\n        buff.newLine();\r\n        buff.close();\r\n    }\r\n\r\n    public static void showWhatInside() throws IOException {\r\n        //\u0432 \u043c\u0435\u0442\u043e\u0434\r\n        BufferedReader reader = new BufferedReader(new FileReader(\"Text.txt\"));\r\n        //\u0433\u043e\u0432\u043d\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435, \u0442\u0438\u043f\u043e currentLine\r\n        String c;\r\n        //\u0412\u044b\u0432\u0435\u0434\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \"\u0421\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0432\u0430\u0448\u0435\u0433\u043e \u0444\u0430\u0439\u043b\u0430:\\n\"\r\n        while ((c = reader.readLine()) != null) {\r\n            System.out.println(c);\r\n        }\r\n        //sout(\"\\n\")\r\n    }\r\n\r\n    public static void removeAll() throws IOException {\r\n        //\u0432 \u043c\u0435\u0442\u043e\u0434\r\n        //\u0433\u043e\u0432\u043d\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\r\n        BufferedWriter bufff = new BufferedWriter(new FileWriter(\"Text.txt\", false));\r\n    }\r\n\r\n    public static void deleteLastLine() throws IOException {\r\n        //\u0437\u0430\u0447\u0435\u043c \u0442\u0443\u0442 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0448\u044c??\r\n        sumOfLines();\r\n        //\u0432 \u043c\u0435\u0442\u043e\u0434\r\n        BufferedReader reader = new BufferedReader(new FileReader(\"Text.txt\"));\r\n        ArrayList<String> lines = new ArrayList<>();\r\n        int i = 0;\r\n        try {\r\n            while (i != sumOfLines()) {\r\n                lines.add(reader.readLine());\r\n                i++;\r\n            }\r\n            reader.close();\r\n        } catch (IOException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        //\u043f\u043e\u0447\u0435\u043c\u0443 \u0431\u044b \u043f\u0440\u043e\u0441\u0442\u043e \u043d\u0435 \u0447\u0438\u0442\u0430\u0442\u044c \u0434\u043e i + 1 != sumOfLines(), \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u0443\u0434\u0430\u043b\u044f\u0442\u044c \u043d\u0438\u0447\u0435\u0433\u043e\r\n        //\u043f\u043b\u044e\u0441 \u0442\u0443\u0442 \u043e\u0448\u0438\u0431\u043a\u0430 \u0432\u044b\u043b\u0435\u0442\u0430\u0435\u0442, \u0435\u0441\u043b\u0438 \u0441 \u043f\u0443\u0441\u0442\u044b\u043c \u0444\u0430\u0439\u043b\u043e\u043c \u0432\u044b\u0437\u0432\u0430\u0442\u044c\r\n        lines.remove(lines.size() - 1);\r\n        removeAll();\r\n        //\u0432 \u043c\u0435\u0442\u043e\u0434\r\n        BufferedWriter buff = new BufferedWriter(new FileWriter(\"Text.txt\", true));\r\n        for (String line : lines) {\r\n            //\u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438 \u0447\u0442\u043e \u043f\u0440\u043e\u0441\u044f\u0442\r\n            buff.append(line + \"\\n\");\r\n        }\r\n        buff.close();\r\n    }\r\n    public static int sumOfLines() {\r\n        //\u0435\u0441\u043b\u0438 \u0442\u0443\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c, \u0442\u043e \u0438 \u0432\u0435\u0437\u0434\u0435 \u0441\u0434\u0435\u043b\u0430\u0439\r\n        String filePath = \"Text.txt\"; // \u043f\u0443\u0442\u044c \u043a \u0444\u0430\u0439\u043b\u0443\r\n        //\u0433\u043e\u0432\u043d\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435, counter\r\n        int count = 0; // \u0441\u0447\u0435\u0442\u0447\u0438\u043a \u0441\u0442\u0440\u043e\u043a\r\n\r\n        //\u0432 \u043c\u0435\u0442\u043e\u0434\r\n        try (BufferedReader reader = new BufferedReader(new FileReader(filePath))) {\r\n            //\u0431\u0435\u0441\u043f\u043e\u043b\u0435\u0437\u043d\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f\r\n            String line;\r\n            while ((line = reader.readLine()) != null) {\r\n                count++;\r\n            }\r\n            return count;\r\n        } catch (IOException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return 0;\r\n    }\r\n}"
    ]
  ]
}
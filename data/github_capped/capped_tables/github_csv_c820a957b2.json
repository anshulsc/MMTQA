{
  "columns": [
    "id",
    "title",
    "username",
    "language",
    "date",
    "content"
  ],
  "data": [
    [
      "MCt7Vrdt",
      "RobloxDevTutorials Beginner's Series - Lesson 10: Elseif",
      "ProDeveloper5876",
      "Lua",
      "Thursday 8th of June 2023 06:45:55 PM CDT",
      "if script.number.Value == 7 then\r\n\tprint(\"The value is 7! Correct!\")\r\nelseif script.number.Value == 6 then\r\n\tprint(\"The value isn't 7, but it is 6!\")\r\nelse\r\n\tprint(\"The number isn't 7 or 6!\")\r\nend\r\n"
    ],
    [
      "Ce6p6M8N",
      "BTC Wallet Credentials have been reset",
      "confeossif_29",
      "GetText",
      "Thursday 8th of June 2023 06:28:01 PM CDT",
      "Dear User\nWe have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.\nYour new login credentials will be \naprendealigar7m:cXQ2PH on 193.233.202.76(SSH)\nRegards"
    ],
    [
      "0rS0WMU0",
      "models.py",
      "mikora",
      "Python",
      "Thursday 8th of June 2023 06:13:22 PM CDT",
      "import os\r\nfrom datetime import date\r\nfrom django.db import models\r\n\r\n#   'a' ---> Artist\r\nclass Artist(models.Model):\r\n    ida = models.AutoField(primary_key=True)  # primary key\r\n\r\n    aname = models.CharField(max_length=100, verbose_name=\"Name\")\r\n    stagename = models.CharField(max_length=100, verbose_name=\"Stage name\")\r\n    birth = models.DateField(\"Birth\")\r\n    age = models.IntegerField(default=0)    # read only\r\n    n_gold = models.IntegerField(default=0, verbose_name=\"Gold records\")  # read only\r\n    n_plat = models.IntegerField(default=0, verbose_name=\"Platinum records\")  # read only\r\n    nation = models.CharField(max_length=100, verbose_name=\"Nationality\")\r\n\r\n    artist_image = models.ImageField(null=True, blank=True, upload_to=\"artist_img/\")    # profile pic\r\n    show_ida = models.IntegerField(verbose_name=\"Ida\", null=True, default=-1)\r\n\r\n    #   [str] that shows in the dropdown menu\r\n    def __str__(self):\r\n        return str(self.stagename)\r\n\r\n    def __repr__(self):\r\n        return f\"Artist(ida={self.ida}, aname='{self.aname}', stagename='{self.stagename}', birth={self.birth}, age={self.age}, n_gold={self.n_gold}, n_plat={self.n_plat}, nation='{self.nation}')\"\r\n\r\n\r\n    ####################################################################################################################\r\n\r\n    def calculate_certifications(self):\r\n        artist_albums = Album.objects.filter(ida=self)\r\n\r\n        self.gold = artist_albums.filter(gold=True).count()\r\n        self.plat = artist_albums.filter(plat=True).count()\r\n\r\n    #   Override ---> calculate read only fields\r\n    def save(self, *args, **kwargs):\r\n        self.calculate_certifications()\r\n        self.age = date.today().year - self.birth.year\r\n\r\n        if self.ida is not None:\r\n            self.show_ida = self.ida\r\n        else:\r\n            self.show_ida = -1\r\n\r\n        super().save(*args, **kwargs)\r\n\r\n\r\n#   'b' ---> Album\r\nclass Album(models.Model):\r\n    idb = models.AutoField(primary_key=True)  # primary key\r\n\r\n    ida = models.ForeignKey(Artist, on_delete=models.CASCADE)  # foreign key, read only\r\n    artist_name = models.CharField(max_length=100, verbose_name=\"Artist\", default=\"Artist name will appear here...\")    # read only\r\n    bname = models.CharField(max_length=100, verbose_name=\"Name\")\r\n    year = models.IntegerField(verbose_name=\"Release year\")\r\n    genre = models.CharField(max_length=100)\r\n    gold = models.BooleanField(verbose_name=\"Gold record\")\r\n    plat = models.BooleanField(verbose_name=\"Platinum record\")\r\n\r\n    album_image = models.ImageField(null=True, blank=True, upload_to=\"album_img/\")  # album cover\r\n    show_idb = models.IntegerField(verbose_name=\"Idb\", null=True, default=-1)\r\n\r\n    def __str__(self):\r\n        return self.bname\r\n\r\n    ####################################################################################################################\r\n\r\n    #   Override --> calculate: 'artist_name', 'ida'\r\n    def save(self, *args, **kwargs):\r\n        #   artist_name\r\n        artist = Artist.objects.get(ida=self.ida_id)\r\n        self.artist_name = artist.stagename\r\n\r\n        #   ida\r\n        self.ida = artist\r\n        #   ...OPPURE...\r\n        #   self.ida_id = artist.ida\r\n\r\n        if self.idb is not None:\r\n            self.show_idb = self.idb\r\n        else:\r\n            self.show_idb = -1\r\n\r\n        super().save(*args, **kwargs)\r\n\r\n#   's' ---> Song\r\nclass Song(models.Model):\r\n    ids = models.AutoField(primary_key=True)  # primary key\r\n\r\n    idb = models.ForeignKey(Album, on_delete=models.CASCADE)  # foreign key\r\n    sname = models.CharField(max_length=100, verbose_name=\"Name\")\r\n    artist_name = models.CharField(max_length=100, verbose_name=\"Artist\", default=\"Artist name will appear here...\")    # read only\r\n    album_name = models.CharField(max_length=100, verbose_name=\"Album\", default=\"Album name will appear here...\")   # read only\r\n    pubdate = models.IntegerField(verbose_name=\"Release year\", default=0)   # read only\r\n    length = models.IntegerField(verbose_name=\"Length in [seconds]\")\r\n    spoty_str = models.IntegerField(verbose_name=\"Thousands of streams [x1000]\")\r\n\r\n    def __str__(self):\r\n        return self.sname\r\n\r\n    ####################################################################################################################\r\n\r\n    #   Override --> calculate: 'album_name', 'pubdate', 'artist_name'\r\n    def save(self, *args, **kwargs):\r\n        #   album_name, pubdate\r\n        album = Album.objects.get(idb=self.idb_id)\r\n        self.album_name = album.bname\r\n        self.pubdate = album.year\r\n\r\n        #   artist_name\r\n        artist = Artist.objects.get(ida=album.ida_id)\r\n        self.artist_name = artist.stagename\r\n\r\n        #   idb\r\n        self.idb = album\r\n\r\n        super().save(*args, **kwargs)\r\n\r\n"
    ],
    [
      "TcqjVpT2",
      "artist.html",
      "mikora",
      "HTML",
      "Thursday 8th of June 2023 06:12:51 PM CDT",
      "<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Overview Artista</title>\r\n    <style>\r\n\r\n        .artist-info {\r\n            margin: 20px;\r\n            background-color: #f0f0f0;\r\n            padding: 20px;\r\n            border-radius: 5px;\r\n            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\r\n        }\r\n\r\n        .artist-image {\r\n            float: left;\r\n            width: 350px;\r\n            height: 450px;\r\n            border-radius: 50%;\r\n            overflow: hidden;\r\n            border: 2px solid #000;\r\n            box-shadow: 0 12px 24px rgba(0, 0, 0, 0.3);\r\n        }\r\n\r\n        .artist-image img {\r\n            width: 100%;\r\n            height: 100%;\r\n            object-fit: cover;\r\n        }\r\n\r\n        .album-list {\r\n            margin: 20px;\r\n            background-color: #f8f8f8;\r\n            color: #000000;\r\n            padding: 20px;\r\n            border-radius: 5px;\r\n            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n        }\r\n\r\n\r\n        a {\r\n            color: #00008BFF;\r\n            text-decoration: none;\r\n            border-bottom: none;\r\n        }\r\n\r\n        body {\r\n            font-family: Candara, Arial, sans-serif;\r\n            background-color: #f5f5f5;\r\n        }\r\n\r\n\r\n        h1 {\r\n            color: #8b0000;\r\n            font-size: 40px;\r\n            font-weight: bold;\r\n            margin-top: 0;\r\n        }\r\n\r\n        p {\r\n            color: #000;\r\n            font-size: 24px;\r\n            margin-bottom: 10px;\r\n        }\r\n\r\n\r\n        h2 {\r\n            color: #000;\r\n            font-size: 28px;\r\n            font-weight: bold;\r\n            margin-top: 0;\r\n        }\r\n\r\n        ul {\r\n            list-style-type: disc;\r\n            padding-left: 20px;\r\n            margin-top: 10px;\r\n            margin-bottom: 10px;\r\n        }\r\n\r\n        li {\r\n            color: #000;\r\n            font-size: 24px;\r\n            margin-bottom: 5px;\r\n        }\r\n\r\n        .no-albums {\r\n            color: #999;\r\n            font-style: italic;\r\n        }\r\n\r\n\r\n    </style>\r\n</head>\r\n<body>\r\n<div class=\"artist-info\">\r\n\r\n    <!-- Artist profile pic -->\r\n    <div class=\"artist-image\">\r\n        <!-- image path -->\r\n        <img src=\"/media/artist_img/a{{ artist.ida }}_{{ path_stagename }}.jpg\" alt=\"artist profile pic\">\r\n    </div>\r\n\r\n    <!-- Artist profile pic -->\r\n    <div style=\"margin-left: 370px;\">\r\n        <h1 style=\"color: #8b0000;\">{{ artist.stagename }}</h1>\r\n        <p><strong>Nome:</strong> {{ artist.aname }}</p>\r\n        <p><strong>Data di nascita:</strong> {{ artist.birth }}</p>\r\n        <p><strong>Et\u00e0:</strong> {{ artist.age }}</p>\r\n        <p><strong>Nazione:</strong> {{ artist.nation }}</p>\r\n        <p><strong>Album d'oro:</strong> {{ artist.n_gold }}</p>\r\n        <p><strong>Album di platino:</strong> {{ artist.n_plat }}</p>\r\n    </div>\r\n</div>\r\n\r\n<!-- album list with href -->\r\n<div class=\"album-list\">\r\n    <h2>Album dell'artista</h2>\r\n    <ul>\r\n        {% for album in albums %}\r\n            <li><a href=\"{% url 'album_bio' album.idb %}\">{{ album.bname }}</a> ({{ album.year }})</li>\r\n        {% empty %}\r\n            <li class=\"no-albums\">Nessun album disponibile</li>\r\n        {% endfor %}\r\n    </ul>\r\n</div>\r\n</body>\r\n</html>\r\n"
    ],
    [
      "hCpbxPfc",
      "wisteria",
      "thequeenroyal",
      "CSS",
      "Thursday 8th of June 2023 05:44:25 PM CDT",
      "@import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Mono&family=IBM+Plex+Serif&family=Abril+Fatface&family=Montserrat:wght@500;900&family=Poppins:wght@500;900&family=Playfair+Display:ital,wght@1,900&display=swap');\r\n@font-face {\r\n   font-family: \"Couture\"; \r\n  src: url(https://dl.dropbox.com/s/uooxtl95ioyu2f9/couture-bld.otf);\r\n format(\"truetype\"); }\r\n/* latin-ext */\r\n@font-face {\r\n  font-family: 'Montserrat';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n}\r\n#wisteria {\r\n  width: 800px;\r\n  height: auto;\r\n  margin: 25px 0 0;\r\n    \r\n}\r\n#wisteriaa b {\r\n  color: var(--accent);\r\n}\r\n#wisteria .basing {\r\n  width: 100%;\r\n   border: var(--border);\r\nbox-sizing: border-box;\r\n}\r\n  #wisteria .bases {\r\n    width: 100%;\r\n   background: var(--background); \r\n   box-sizing: border-box;\r\n  border: var(--border);\r\n  padding: 35px;\r\n  }\r\n#wisteria .title {\r\n  font: 900 40px/150% Playfair Display;\r\n  color: var(--color);\r\n  text-align: center;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n}\r\n#wisteria .title:after {\r\n  content:'';\r\n  display: block;\r\n  margin: 25px auto;\r\n  width: 50%;\r\n  height: 5px;\r\n  background: #c9a0dc;\r\n  \r\n}\r\n#wisteria .post {\r\n  background: var(--background); \r\n  font: 500 12px/235% Montserrat;\r\n  text-align: justify;\r\n  letter-spacing: .5px;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  color: var(--text);\r\n}\r\n#wisteria .postbase {\r\n    background: var(--background); \r\n    width: 100%;\r\n  padding: 30px;\r\n  box-sizing: border-box;\r\n}\r\n#wisteria .post span {\r\n  background: #5E0A80;\r\n  padding: 10px 25px;\r\n  font: 40px Abril Fatface;\r\n  text-transform: uppercase;\r\n  color: var(--color);\r\n  float: left;\r\n  margin: 5px 10px; \r\n} \r\n #wisteria:after {\r\n  display: block;\r\n  content: \"starlight\";\r\n  padding: 5px 10px; \r\n  font: 10px Consolas;\r\n  text-transform: uppercase;\r\n  opacity: .4;\r\n  font-weight: bold; \r\n  color: #8c8c8c; }"
    ],
    [
      "5FhN1uU5",
      "Untitled",
      "zefie",
      "C#",
      "Thursday 8th of June 2023 05:39:57 PM CDT",
      "using System;\r\nusing System.Diagnostics;\r\nusing System.Drawing;\r\nusing System.Runtime.InteropServices;\r\nusing System.Threading;\r\nusing System.Windows.Forms;\r\n\r\nnamespace WindowsFormsApp1\r\n{\r\n    public partial class Form1 : Form\r\n    {\r\n\r\n        public struct Rect\r\n        {\r\n            public int Left { get; set; }\r\n            public int Top { get; set; }\r\n            public int Right { get; set; }\r\n            public int Bottom { get; set; }\r\n        }\r\n        public Form1()\r\n        {\r\n            doCommands();\r\n            this.WindowState = FormWindowState.Minimized;\r\n        }\r\n\r\n        private static void doCommands()\r\n        {\r\n            string path = System.IO.Path.GetDirectoryName(\r\n              System.Windows.Forms.Application.ExecutablePath);\r\n\r\n            Process p = Process.Start(path + \"\\\\WS4000v4.exe\");\r\n            p.WaitForInputIdle();\r\n\r\n            IntPtr hWnd = IntPtr.Zero;\r\n            foreach (Process pList in Process.GetProcesses())\r\n            {\r\n                if (pList.MainWindowTitle.Contains(\"WS4000 Simulator Public Beta\"))\r\n                {\r\n                    hWnd = pList.MainWindowHandle;\r\n                }\r\n            }\r\n\r\n            Rect WSRect = new Rect();\r\n            GetWindowRect(hWnd, ref WSRect);\r\n\r\n\r\n            SetForegroundWindow(hWnd);\r\n            for (int i = 0; i<10; i++)\r\n            {\r\n                SendKeys.SendWait(\"F8\");\r\n                Thread.Sleep(250);\r\n                i++;\r\n            }\r\n            Thread.Sleep(1000);\r\n            MouseHook.MoveMouse(new Point(WSRect.Left + 100, WSRect.Top + 60));\r\n            Thread.Sleep(250);\r\n            MouseHook.SendClick();\r\n            Thread.Sleep(250);\r\n            MouseHook.MoveMouse(new Point(WSRect.Left + 100, WSRect.Top + 80));\r\n            Thread.Sleep(250);\r\n            MouseHook.SendClick();\r\n            Thread.Sleep(250);\r\n            Environment.Exit(0);\r\n        }\r\n\r\n        [DllImport(\"User32.dll\")]\r\n        static extern int SetForegroundWindow(IntPtr point);\r\n\r\n        [DllImport(\"user32.dll\")]\r\n        public static extern bool GetWindowRect(IntPtr hwnd, ref Rect rectangle);\r\n    }\r\n}\r\n"
    ],
    [
      "4g8HzhpJ",
      "Check for login usage.",
      "retro64xyz",
      "PowerShell",
      "Thursday 8th of June 2023 05:33:09 PM CDT",
      "# Import the Active Directory module\r\nImport-Module ActiveDirectory\r\n\r\n# Define the user and domain\r\n$username = \"jdoe\"\r\n$domain = \"yourdomain.com\"\r\n\r\n# Get the list of all computer names in the domain\r\n$computers = Get-ADComputer -Filter * | ForEach-Object {$_.Name}\r\n\r\n# Loop through each computer\r\nforeach ($computer in $computers)\r\n{\r\n    # Write the current computer name to the console\r\n    Write-Host \"Checking $computer...\"\r\n\r\n    # Check if we can connect to the computer\r\n    if (Test-Connection -ComputerName $computer -Count 1 -Quiet)\r\n    {\r\n        # We can connect, so now we query the Security Event Log\r\n        $logs = Get-WinEvent -ComputerName $computer -LogName 'Security' -ErrorAction SilentlyContinue | \r\n                    Where-Object {$_.Message -match $username -and $_.Id -eq 4624}\r\n\r\n        if ($logs)\r\n        {\r\n            # If logs are found, print the details\r\n            Write-Host \"$username has logged into $computer\"\r\n        }\r\n    }\r\n    else\r\n    {\r\n        # Can't connect to the computer\r\n        Write-Host \"Could not connect to $computer\"\r\n    }\r\n}\r\n"
    ],
    [
      "spJWXaTg",
      "Lerp With Timeline and Curvefloat",
      "unleashedcode",
      "C++",
      "Thursday 8th of June 2023 04:56:16 PM CDT",
      "#header .h\r\n\r\n#pragma once\r\n\r\n#include \"CoreMinimal.h\"\r\n#include \"GameFramework/Actor.h\"\r\n#include \"Components/TimeLineComponent.h\"\r\n#include \"Planet.generated.h\"\r\n\r\n\r\nclass UStaticMeshComponent;\r\nclass UTimelineComponent;\r\nclass UCurveFloat;\r\n\r\n\r\nUCLASS()\r\nclass STARTRANSPORT_API APlanet : public AActor\r\n{\r\n\tGENERATED_BODY()\r\n\t\r\npublic:\t\r\n\t// Sets default values for this actor's properties\r\n\tAPlanet();\r\n\r\n\r\n\t\r\n\r\nprotected:\r\n\t// Called when the game starts or when spawned\r\n\tvirtual void BeginPlay() override;\r\n\t\r\n\t/* Mesh */\r\n\tUPROPERTY(EditDefaultsOnly, Category = \"Planet\")\r\n\tTObjectPtr<UStaticMeshComponent> PlanetMesh;\r\n\r\n\t/* Timeline */\r\n\tUPROPERTY(EditAnywhere,BlueprintReadWrite, Category = \"Planet\")\r\n\tTObjectPtr<UTimelineComponent> MainTimeline;\r\n\r\n\t/* Curve */\r\n\tUPROPERTY(EditAnywhere,BlueprintReadWrite, Category = \"Planet\")\r\n\tTObjectPtr<UCurveFloat> PlanetRotationCurve;\r\n\r\n\r\n\tUFUNCTION()\r\n\tvoid RotatePlanet(float Value);\r\n\r\n\tUFUNCTION()\r\n\tvoid TimelineEnd();\r\n\r\n\r\n\r\nprivate:\t\r\n\t\t\r\n\tFRotator PlanetCurrentRotation = FRotator(0.f);\r\n\tFRotator PlanetTargetRotation = FRotator(0.f);\r\n\r\n\tfloat RotationAmount = 360.0f;\r\n\tfloat LengthOfTimeline = 30.0f;\r\n\t\r\n};\r\n\r\n#cpp\r\n\r\n#include \"Actors/Planet/Planet.h\"\r\n#include \"Components/StaticMeshComponent.h\"\r\n#include \"Components/TimeLineComponent.h\"\r\n#include \"Curves/CurveFloat.h\"\r\n#include \"Kismet/GameplayStatics.h\"\r\n\r\n\r\n// Sets default values\r\nAPlanet::APlanet()\r\n{\r\n \t// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.\r\n\tPrimaryActorTick.bStartWithTickEnabled = true;\r\n\tPrimaryActorTick.bCanEverTick = true;\r\n\tbNetLoadOnClient = false;\r\n\tSetCanBeDamaged(false);\r\n\r\n\t//Mesh\r\n\tPlanetMesh = CreateDefaultSubobject<UStaticMeshComponent>(TEXT(\"PlanetMesh\"));\r\n\tPlanetMesh->SetEnableGravity(false);\r\n\tPlanetMesh->SetCollisionEnabled(ECollisionEnabled::NoCollision);\t\r\n\t\r\n\t//Root Component\r\n\tSetRootComponent(PlanetMesh);\r\n\t\r\n\t//Curve to use\r\n\tPlanetRotationCurve = CreateDefaultSubobject<UCurveFloat>(TEXT(\"CurveFloat\"));\r\n\t\r\n\t//Timeline\r\n\tMainTimeline = CreateDefaultSubobject<UTimelineComponent>(TEXT(\"TimeLineComp\"));\r\n}\r\n\r\n\r\n\r\n// Called when the game starts or when spawned\r\nvoid APlanet::BeginPlay()\r\n{\r\n\tSuper::BeginPlay();\r\n\r\n\t//Bind the timelineupdate to the rotateplanet function\r\n\tFOnTimelineFloat TimelineMovementValue;\r\n\tFOnTimelineEvent TimelineFinishEvent;\r\n\r\n\t//Bind functions to timeline\r\n\tTimelineMovementValue.BindUFunction(this, FName(\"RotatePlanet\"));\r\n\tTimelineFinishEvent.BindUFunction(this, FName(\"TimelineEnd\"));\r\n\r\n\tif (PlanetRotationCurve)\r\n\t{\t\t\r\n\t\t//This will allow the curve to feed the data to TimelineMovementValue, which in turn will give RotatePlanet() its value param.\r\n\t\tMainTimeline->AddInterpFloat(PlanetRotationCurve, TimelineMovementValue);\r\n\r\n\t\t//This will now allow the timline, when finished, to call the TimlineFinish event of StartRotating()\r\n\t\tMainTimeline->SetTimelineFinishedFunc(TimelineFinishEvent);\r\n\t}\r\n\t\t\r\n\r\n\t//Initialize the Starting Rotation and Ending Rotation\r\n\tPlanetCurrentRotation = GetActorRotation();\r\n\tPlanetTargetRotation = PlanetCurrentRotation;\r\n\r\n\t//Add the 360 degrees on the Yaw\r\n\tPlanetTargetRotation.Yaw += RotationAmount;\r\n\t\r\n\t//Start the timline\r\n\tMainTimeline->PlayFromStart();\r\n\r\n}\r\n\r\n\r\n\r\nvoid APlanet::RotatePlanet(float Value)\r\n{\r\n\t//Create the new rotation\r\n\tFRotator NewRotation = FMath::Lerp(PlanetCurrentRotation, PlanetTargetRotation, Value);\t\r\n\tSetActorRotation(NewRotation);\r\n\t\r\n\t\t\r\n\tUE_LOG(LogTemp, Warning, TEXT(\"VALUE: %f \"), Value);\r\n\tUE_LOG(LogTemp, Warning, TEXT(\"CurrentRotation %s\"), *GetActorRotation().ToString());\r\n\tUE_LOG(LogTemp, Warning, TEXT(\"PlanetTargetRot: %s\"),  *PlanetTargetRotation.ToString());\r\n\t\r\n\r\n\r\n\r\n}\r\n\r\n//Rotate the planet\r\nvoid APlanet::TimelineEnd()\r\n{\r\n\tUE_LOG(LogTemp, Warning, TEXT(\"TimelineEndCalled\"));\r\n}\r\n"
    ],
    [
      "Musa8ikM",
      "Bot Over-The-Clouds ETH/USDT.P BYBIT 4H LONG E SHORT",
      "Maurizio-Ciullo",
      "JavaScript",
      "Thursday 8th of June 2023 03:18:31 PM CDT",
      "\r\n\t\t\t\t\t\t\t// Bot Over-The-Clouds ETH/USDT.P BYBIT 4H LONG E SHORT //\r\n\t\t\t\t\t\t\t  // Versione con uscita chiusuare sotto la baseline //\r\n\r\n// Il trading system completo - Over The Clouds ETH/USDT.P BYBIT 4H LONG E SHORT (Trend Following)\r\n// (Sviluppo Dati Exchange = BINANCE + BYBIT) (BINANCE Dal=18/08/2017 Al 21/10/2020) (BYBIT Dal=21/10/2020 Al 20/05/2023)\r\n// (Exchange= BYBIT) (Sottostante ETH-USDT.P) (Timeframe= 4H) (Direzione= LONG E SHORT) (Swing Posizione= SI) (Esclusione Ore=NO) (Esclusione Giorni=NO) (Esclusione Mesi=NO) \r\n// (Take Profit Long/Short Market = NO) (Take Profit Limit Long/Short= NO)\r\n// (Stop Loss Limit Long= NO) (Stop Loss Limit Short= NO) (Stop Loss Market Long/Short= SI) (Trailing Stop Market=SI) (Stop Emergenza= NO)\r\n// (Rischio Operazione 2% Perdita Media Calcolato Sul Ticker: ETHUSDT BINANCE SPOT) (Max Drawdown Permesso 10,03%) (Calcolato Sul Ticker: ETHUSDT.P BYBIT CHE E' IL PEGGIORE DELLE ENTRIES MODE)\r\n// (In Sample Dal=18/08/17 Al 12/07/22) (Out Of Sample Dal=12/07/22 Al 20/05/23)\r\n// (Money Management = 23% Del Capitale Pinesctipt)\r\n// (Money Management = 25% Del Capitale Tradestation)\r\n// (Progettatta Il=07/07/23)\r\n\r\n// Caricamento Dati Bybit Su Tradestation: Exchange Time, Regular Session, 7x7 23:00 23:00, Session Hour.\r\n\r\n                                                    // ATTENZIONE //\r\n// Quando si mette la strategia live, ricordarsi di impostare 1 solo input \"quello che vogliamo utilizzare come normal/ more_aggressive/less_aggressive entries\" su true e\r\n// impostare gli altri su false. Commentare anche i BUY COMMAND che non utilizziamo.\r\n\r\n\r\n// Auentare il Max Bars Back A 75 Su Tradestation Altrimenti Non Funziona E Cliccare Su Enable Strategy Altrimenti Non Parte\r\n\r\n// Qui a differenza di tradingview non ho creato lo swith mode per gli ingressi cambiando periodi atr e mopltiplicatore atr, farlo a mano dagli input.\r\n\r\n\r\n////////// Start detecting Ichimoku Cloud //////////                                                                                                   \r\nInputs: Standard(26), Turning(9), Delayed(52), Uscita(0), mystop(0), myprofit(0);\r\nVariables:StdLine(0), TurnLine(0), Span1(0), Span2(0);\r\nStdLine = (Highest(High, Standard) + Lowest(Low, Standard)) / 2; // \"BASE LINE\"\r\nTurnLine = (Highest(High, Turning) + Lowest(Low, Turning)) / 2;  // \"CONVERSION LINE\"\r\nSpan1 = (StdLine + TurnLine) / 2;                                // \"SPAN A No 25 Offset\"\r\nSpan2 = (Highest(High, Delayed) + Lowest(Low, Delayed)) / 2;     // \"SPAN B No 25 Offset\"\r\n\r\n// Span1 e Span2 non hanno l'offset di 25 candele fa, per ulteriori verifiche vedi Study Ichimoku oppure fare il print qui su Strategy.\r\n\r\n// Print Debug Ichimoku\r\n{Once Clearprintlog;\r\nprint(Getstrategyname, \", \", Symbol, \", \", Formatdate(\"dd/MM/yy\", ElDateToDateTime( Date )), \", \", BarDateTime.Format( \"%H%M.%S\" ), \", \", Close, \", \", StdLine, \", \", TurnLine, \", \", Span1, \", \",Span2 , \", \",); \r\nprint(StdLine);\r\nprint(TurnLine);\r\nprint(Span1);\r\nprint(Span2);}\r\n////////// End detecting Ichimoku Cloud //////////\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n////////// Start Detection ATR (Average True Range Long E Short) //////////\r\n// Valori migliori e pi\u00f9 stabili boom bar long I migliori sono scritti per prima: //7-.1.2//12-1.2 //11-1.2\r\n// La 7-1.2entra pi\u00f9 facilmente ed entra pi\u00f9 in basso solo che se il periodo non \u00e8 buono prende pi\u00f9 stop\r\n// La 11-1.2 entra meno, operazione leggermente minore ma se il periodo \u00e8 peggiore prende meno stop\r\n// Preferisco la 7-1.2 Pi\u00f9 aggressiva e la 11-1.2 pi\u00f9 stabile\r\ninput:\r\n\tinput_atr_period_long(7), \r\n\tinput_atr_period_short(33),\r\n\tinput_atr_Mult_long(1.2),\r\n\tinput_atr_Mult_short(1.2),\r\n\tinput_ema_long(84),\r\n\tinput_ema_short(83),\r\n\tInitialCapital(100000),\r\n\tpercent_risk(100),\r\n\tonly_long(false),\r\n\tonly_short(false);\r\n\t\r\n\t\r\n\t\r\nVars:\r\n\t valore_atr_long(0),\r\n\t valore_atr_short(0),\r\n\t boom_bar_long(false),\r\n\t boom_bar_short(false),\r\n\t ema_long(0),\r\n\t ema_short(0),\r\n\t entrata_long(false),\r\n\t entrata_short(false),\r\n\t uscita_long(false),\r\n\t uscita_short(false),\r\n\t nr_share(0),\r\n\t risk(0);\r\n\t \r\n\r\n////////// Start Detecting ATR (Average True Range Long E Short) //////////\r\nvalore_atr_long      =   AvgTrueRange(input_atr_period_long);\r\nvalore_atr_short \t =   AvgTrueRange(input_atr_period_short);\r\n////////// End Detecting ATR (Average True Range Long E Short) //////////\r\n\r\n\r\n////////// Start Detecting Boom Bar Long //////////\r\nboom_bar_long = Absvalue(open - close) > valore_atr_long * input_atr_Mult_long;\r\nIf boom_bar_long Then\r\n// Plotshape Boom_Bar_Long\r\nBegin\r\n\tValue1 = Text_new(D, T, L, \"*\");\r\n\tText_setcolor(Value1, Yellow);\r\n\tText_setstyle(Value1, 2, 0);\r\nEnd;\r\n////////// End Detecting Boom Bar Long //////////\r\n\r\n\r\n////////// Start Detecting Boom Bar Short //////////\r\nboom_bar_short = Absvalue(open - close) > valore_atr_short * input_atr_Mult_short;\r\nIf boom_bar_short Then\r\n// Plotshape Boom_Bar_Short\r\nBegin\r\n\tValue2 = Text_new(D, T, L, \"*\");\r\n\tText_setcolor(Value1, Yellow);\r\n\tText_setstyle(Value1, 2, 0);\r\nEnd;\r\n////////// End Detecting Boom Bar Short //////////\r\n\r\n\r\n////////// Start Detecting Media EMA Long //////////\r\nema_long = XAverage(close, input_ema_long);\r\n////////// End Detecting Media EMA Long ////////// \r\n\r\n\r\n////////// Start Detecting Media EMA Short //////////\r\nema_short = XAverage(close, input_ema_short);\r\n////////// End Detecting Media EMA Short //////////\r\n\r\n\r\n\r\n ////////// Start Money Managment //////////\r\nrisk = percent_risk/100;\r\nnr_share = floor((InitialCapital + NetProfit) * risk) / close;\r\n ////////// End Money Managment //////////\r\n\r\n\r\n////////// Start Condizioni Entrata E Uscita Long E Short //////////\r\nentrata_long = close > StdLine and TurnLine > StdLine and close > Span2  and close > ema_long  and boom_bar_long and not only_short;\r\nentrata_short = close < StdLine and TurnLine  < StdLine and close < Span2  and close < ema_short and boom_bar_short and not only_long;\r\n\r\nuscita_long = close < StdLine;\r\nuscita_short = close > StdLine;\r\n////////// End Condizioni Entrata E Uscita Long E Short //////////\r\n\r\n\r\n////////// Start Entrata E Uscita Long //////////\r\nif marketposition = 0 and entrata_long Then\r\n   Begin;\r\n   \t  Buy(\"Long\") nr_share contracts Next Bar at market;   \r\n   End;\r\n   \r\nif marketposition = 1 and uscita_long Then\r\n\tBegin;\r\n\t\tSell(\"Exit Market Long\") from entry(\"Long\") Next Bar at market;\t   \r\n\tEnd;\r\n////////// End Entrata E Uscita Long //////////\r\n\r\n\r\n\r\n////////// Start Entrata E Uscita Short //////////\r\nif marketposition = 0 and entrata_short Then\r\n   Begin;\r\n   \t  Sellshort(\"Short\") nr_share contracts Next Bar at market;   \r\n   End;\r\n   \r\nif marketposition = -1 and uscita_short Then\r\n\tBegin;\r\n\t\tBuytocover(\"Exit Market Short\") from entry(\"Short\") Next Bar at market;\t   \r\n\tEnd;\r\n////////// End Entrata E Uscita Short //////////"
    ],
    [
      "TyT9U6Kx",
      "Bot Over The Clouds ETH/USDT.P BYBIT 4H LONG E SHORT",
      "Maurizio-Ciullo",
      "JavaScript",
      "Thursday 8th of June 2023 03:12:26 PM CDT",
      "// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/\r\n// \u00a9 Maurizio-Ciullo\r\n\r\n\t\t\t\t\t\t\t\t\t// Versione con uscita chiusuara sotto la baseline //\r\n\r\n// Il trading system completo - Over The Clouds ETH/USDT.P BYBIT 4H LONG E SHORT (Trend Following)\r\n// (Sviluppo Dati Exchange = BINANCE + BYBIT) (BINANCE Dal=18/08/2017 Al 21/10/2020) (BYBIT Dal=21/10/2020 Al 20/05/2023)\r\n// (Exchange= BYBIT) (Sottostante ETH-USDT.P) (Timeframe= 4H) (Direzione= LONG E SHORT) (Swing Posizione= SI) (Esclusione Ore=NO) (Esclusione Giorni=NO) (Esclusione Mesi=NO) \r\n// (Take Profit Long/Short Market = NO) (Take Profit Limit Long/Short= NO)\r\n// (Stop Loss Limit Long= NO) (Stop Loss Limit Short= NO) (Stop Loss Market Long/Short= SI) (Trailing Stop Market=SI) (Stop Emergenza= NO)\r\n// (Rischio Operazione 2% Perdita Media Calcolato Sul Ticker: ETHUSDT BINANCE SPOT) (Max Drawdown Permesso 10,03% Calcolato Sul Ticker: ETHUSDT.P BYBIT CHE E' IL PEGGIORE DELLE ENTRIES MODE)\r\n// (In Sample Dal=18/08/17 Al 12/07/22) (Out Of Sample Dal=12/07/22 Al 20/05/23)\r\n// (Money Management = 23% Del Capitale)\r\n// (Money Management = 25% Del Capitale Tradestation)\r\n// (Progettatta Il=07/07/23)\r\n\r\n// Caricamento Dati Bybit Su Tradestation: Exchange Time, Regular Session, 7x7 23:00 23:00, Session Hour.\r\n// Auentare il Max Bars Back A 75 Su Tradestation Altrimenti Non Funziona E Cliccare Su Enable Strategy Altrimenti Non Parte\r\n\r\n                                                    // ATTENZIONE //\r\n// Quando si mette la strategia live, ricordarsi di impostare 1 solo input \"quello che vogliamo utilizzare come normal/ more_aggressive/less_aggressive entries\" su true e\r\n// impostare gli altri su false. Commentare anche i BUY COMMAND che non utilizziamo.\r\n\r\n//@version=5\r\nstrategy(title='Bot Over-The-Clouds ETH/USDT.P BYBIT 4H LONG E SHORT', overlay=true,\r\n         //max_bars_back=5000, // Serve Per Caricare Pi\u00f9 Storico Per Il Trailing Stop\r\n         pyramiding=0,\r\n         initial_capital=1000,\r\n         commission_type=strategy.commission.percent,\r\n         commission_value=0.1,\r\n         slippage=3,\r\n         default_qty_type=strategy.percent_of_equity,\r\n         precision=2,\r\n         default_qty_value=23)\r\n\r\n\r\n// Inputs\r\nonlyLong = input.bool(title='Solo long', defval=false, inline='1', group='Direction')\r\nonlyShort = input.bool(title='Solo short', defval=false, inline='1', group='Direction')\r\nin_normal = input.bool(title=\"normal entry mode\", defval=true, tooltip = \"Entry Conditions Choice\", inline='1', group='Aggresivity Entries Noraml')\r\nin_more_aggressive = input.bool(title=\"more aggressive entry mode\", defval=false, tooltip = \"Entry Conditions Choice\", inline='1', group='Aggresivity Entries Aggresive')\r\nin_less_aggressive = input.bool(title=\"less aggressive entry mode\", defval=false, tooltip = \"Entry Conditions Choicee\", inline='1', group='Aggresivity Entries Less Aggressive')\r\nin_ema_long = input.int(title='in_ema_long', defval=84, minval=0, maxval=300, step=1, inline='1', group='Ema Lenght')\r\nin_ema_short = input.int(title='in_ema_short', defval=83, minval=0, maxval=300, step=1, inline='1', group='Ema Lenght')\r\n\r\n\r\n// Calcolo del range del backtest\r\nstartDate = input.int(title='Start Date', defval=17, minval=1, maxval=31, group='Time Window')\r\nstartMonth = input.int(title='Start Month', defval=08, minval=1, maxval=12, group='Time Window')\r\nstartYear = input.int(title='Start Year', defval=2000, minval=1800, maxval=2100, group='Time Window')\r\n\r\nendDate = input.int(title='End Date', defval=01, minval=1, maxval=31, group='Time Window')\r\nendMonth = input.int(title='End Month', defval=01, minval=1, maxval=12, group='Time Window')\r\nendYear = input.int(title='End Year', defval=2121, minval=1800, maxval=2150, group='Time Window')\r\n\r\n\r\ninDateRange = time >= timestamp(syminfo.timezone, startYear, startMonth, startDate, 0, 0) and time < timestamp(syminfo.timezone, endYear, endMonth, endDate, 0, 0)\r\n\r\n\r\n// Start Hour Range Trading Non Attivo /////////////////////\r\n//hourTrading = input(title='sessione valida di trading', defval='0600-2300:23456')\r\n//hourRangeTrading = time(timeframe.period, hourTrading)\r\n\r\n\r\n// Start Detecting Ichimoku Cloud //\r\nconversionPeriods = input.int(9, minval=1, title=\"Conversion Line Periods\", group='Ichomoku'),\r\nbasePeriods = input.int(26, minval=1, title=\"Base Line Periods\", group='Ichomoku')\r\nlaggingSpan2Periods = input.int(52, minval=1, title=\"Lagging Span 2 Periods\", group='Ichomoku'),\r\ndisplacement = input.int(26, minval=1, title=\"Displacement\", group='Ichomoku')\r\n\r\ndonchian(len) => math.avg(ta.lowest(len), ta.highest(len))\r\n\r\nconversionLine = donchian(conversionPeriods)\r\nbaseLine = donchian(basePeriods)\r\nspanA = math.avg(conversionLine, baseLine)\r\nspanB = donchian(laggingSpan2Periods)\r\nStdLine = (ta.highest(high, 52) + ta.lowest(low, 52)) / 2 \r\nplot(conversionLine, title=\"Conversion Line\", color=#0496ff)\r\nplot(baseLine, color=#991515, title=\"Base Line\")\r\nplot(close, title=\"Lagging Span\", offset = -displacement + 1, color=#459915)\r\n\r\np1 = plot(spanA, offset = displacement - 1, color=color.green,\r\n title=\"Plot Span A\")\r\np2 = plot(spanB, offset = displacement - 1, color=color.red,\r\n title=\"Plot Span B\")\r\nfill(p1, p2, color = spanA > spanB ? color.green : color.red)\r\n// plot(spanA[25], title=\"Span A\", color=color.orange)\r\n// plot(spanB[25],  title=\"Span B\",color=color.yellow)\r\n// plot(spanA, title=\"Span A No 25 Offset\", color=color.rgb(218, 16, 253))\r\n// plot(spanB, title=\"Span B No 25 Offset\", color=color.rgb(218, 16, 253))\r\n// End Detecting Ichimoku Cloud //\r\n\r\n\r\n// Start Detecting ATR Long Normal //\r\nin_length_atr_long_normal = input.int(title=\"Atr Length_long_normal\", defval=11, minval=0, group='Atr Long Normal')\r\nin_smoothing_atr_long_normal = input.string(title=\"Smoothing_atr_long_normal\", defval=\"SMA\", options=[\"RMA\", \"SMA\", \"EMA\", \"WMA\"], group='Atr Long Normal')\r\nma_function_long(source, in_length_atr_long_normal) =>\r\n\tswitch in_smoothing_atr_long_normal\r\n\t\t\"RMA\" => ta.rma(source, in_length_atr_long_normal)\r\n\t\t\"SMA\" => ta.sma(source, in_length_atr_long_normal)\r\n\t\t\"EMA\" => ta.ema(source, in_length_atr_long_normal)\r\n\t\t=> ta.wma(source, in_length_atr_long_normal)\r\nplot(ma_function_long(ta.tr(true), in_length_atr_long_normal), title = \"ATR_long_normal\", color=color.new(#ca5555, 0))\r\n// End Detecting ATR Long Normal //\r\n\r\n// Start Detecting ATR Long More Aggressive //\r\nin_length_atr_long_more_aggressive = input.int(title=\"Atr Length_long_more_aggressive\", defval=7, minval=0, group='Atr Long More Aggresive')\r\nin_smoothing_atr_long_more_aggressive = input.string(title=\"Smoothing_atr_long_more_aggressive\", defval=\"SMA\", options=[\"RMA\", \"SMA\", \"EMA\", \"WMA\"], group='Atr Long More Aggresive')\r\nma_function_long_more_aggressive(source, in_length_atr_long_more_aggressive) =>\r\n\tswitch in_smoothing_atr_long_more_aggressive\r\n\t\t\"RMA\" => ta.rma(source, in_length_atr_long_more_aggressive)\r\n\t\t\"SMA\" => ta.sma(source, in_length_atr_long_more_aggressive)\r\n\t\t\"EMA\" => ta.ema(source, in_length_atr_long_more_aggressive)\r\n\t\t=> ta.wma(source, in_length_atr_long_more_aggressive)\r\nplot(ma_function_long_more_aggressive(ta.tr(true), in_length_atr_long_more_aggressive), title = \"ATR_long_more_aggressive\", color=color.new(#ff4646, 0))\r\n// End Detecting ATR Long More Aggressive //\r\n\r\n// Start Detecting ATR Long Less Aggressive //\r\nin_length_atr_long_less_aggressive = input.int(title=\"Atr Length_long_less_aggressive\", defval=12, minval=0, group='Atr Long Less Aggresive')\r\nin_smoothing_atr_long_less_aggressive = input.string(title=\"Smoothing_atr_long_less_aggressive\", defval=\"SMA\", options=[\"RMA\", \"SMA\", \"EMA\", \"WMA\"], group='Atr Long Less Aggresive')\r\nma_function_long_less_aggressive(source, in_length_atr_long_less_aggressive) =>\r\n\tswitch in_smoothing_atr_long_less_aggressive\r\n\t\t\"RMA\" => ta.rma(source, in_length_atr_long_less_aggressive)\r\n\t\t\"SMA\" => ta.sma(source, in_length_atr_long_less_aggressive)\r\n\t\t\"EMA\" => ta.ema(source, in_length_atr_long_less_aggressive)\r\n\t\t=> ta.wma(source, in_length_atr_long_less_aggressive)\r\nplot(ma_function_long_less_aggressive(ta.tr(true), in_length_atr_long_less_aggressive), title = \"ATR_long_less__aggressive\", color=color.new(#ff4646, 0))\r\n// End Detecting ATR Long Less Aggressive //\r\n\r\n\r\n// Start Detecting ATR Short //\r\nin_length_atr_short = input.int(title=\"Atr Length_short\", defval=11, minval=0, group='Atr Short')\r\nin_smoothing_atr_short = input.string(title=\"Smoothing_atr_short\", defval=\"SMA\", options=[\"RMA\", \"SMA\", \"EMA\", \"WMA\"], group='Atr Short')\r\nma_function_short(source, in_length_atr_short) =>\r\n\tswitch in_smoothing_atr_short\r\n\t\t\"RMA\" => ta.rma(source, in_length_atr_short)\r\n\t\t\"SMA\" => ta.sma(source, in_length_atr_short)\r\n\t\t\"EMA\" => ta.ema(source, in_length_atr_short)\r\n\t\t=> ta.wma(source, in_length_atr_short)\r\nplot(ma_function_short(ta.tr(true), in_length_atr_short), title = \"ATR_short\", color=color.new(#B71C1C, 0))\r\n// End Detecting ATR Short //\r\n\r\n\r\n// Start Detecting Boom Bar Long (Normal-Aggressive-Less_aggressive//\r\natr_long_normal = ma_function_long(ta.tr(true), in_length_atr_long_normal)\r\natr_long_more_aggressive = ma_function_long_more_aggressive(ta.tr(true), in_length_atr_long_more_aggressive)\r\natr_long_less_aggressive = ma_function_long_less_aggressive(ta.tr(true), in_length_atr_long_less_aggressive)\r\nin_atr_Mult_long_normal = input.float(title='atr_Mult_long_normal', minval=0, maxval=5, defval=1.2, step=0.1, group='Atr Long Normal')\r\nin_atr_Mult_long_more_aggressive = input.float(title='atr_Mult_long_more_aggressive', minval=0, maxval=5, defval=1.2, step=0.1, group='Atr Long More Aggresive')\r\nin_atr_Mult_long_less_aggressive = input.float(title='atr_Mult_long_less_aggressive', minval=0, maxval=5, defval=1.2, step=0.1, group='Atr Long Less Aggresive')\r\nboom_bar_long_normal = math.abs(open - close) > atr_long_normal * in_atr_Mult_long_normal\r\nboom_bar_long_more_aggressive = math.abs(open - close) > atr_long_more_aggressive * in_atr_Mult_long_more_aggressive\r\nboom_bar_long_less_aggressive = math.abs(open - close) > atr_long_less_aggressive * in_atr_Mult_long_less_aggressive\r\n// End Detecting Boom Bar Long //\r\n\r\n\r\n// Start Detecting Boom Bar Short //\r\natr_short = ma_function_short(ta.tr(true), in_length_atr_short)\r\nin_atr_Mult_short = input.float(title='atr_Mult_short', minval=0, maxval=5, defval=1.2, step=0.1, group='Atr Short')\r\nboom_bar_short = math.abs(open - close) > atr_short * in_atr_Mult_short\r\n// End Detecting Boom Bar Short //\r\n\r\nbarcolor(boom_bar_long_normal and in_normal and not in_more_aggressive and not in_less_aggressive ? color.lime : boom_bar_short and in_normal and not in_more_aggressive and not in_less_aggressive ? color.lime : na)\r\nbarcolor(boom_bar_long_more_aggressive and in_more_aggressive and not in_normal and not in_less_aggressive ? color.lime : boom_bar_short and in_more_aggressive and not in_normal and not in_less_aggressive ? color.lime : na)\r\nbarcolor(boom_bar_long_less_aggressive and in_less_aggressive and not in_normal and not in_more_aggressive ? color.lime : boom_bar_short and in_less_aggressive and not in_normal and not in_more_aggressive ? color.lime : na)\r\n\r\n\r\n// Start Detecting Ema Long And Short //\r\nema_long = ta.ema(close, in_ema_long)\r\nplot(ema_long, title=\"ema_long\", color=color.green, linewidth = 2)\r\n\r\nema_short = ta.ema(close, in_ema_short)\r\nplot(ema_short, title=\"ema_short\", color=color.red, linewidth = 2)\r\n// End Detecting Ema Long And Short //\r\n\r\n\r\nplot(strategy.position_size != 0 ? strategy.opentrades.entry_price(0) : na , color=strategy.position_size > 0 ? color.blue : strategy.position_size < 0 ? color.red : na, style=plot.style_linebr, title=\"entry_price\") // stampa l'entry price in rosso se short in blu se long\r\n//plot(strategy.position_size > 0 ?  take_profit_long_price : strategy.position_size < 0 ? take_profit_short_price: na, color=color.green, style=plot.style_cross, linewidth=2, title=\"tk_limit\")\r\n//plot(strategy.position_size > 0 ?  stop_loss_long_price : strategy.position_size < 0 ? stop_loss_short_price: na, color=color.red, style=plot.style_cross, linewidth=2, title=\"sl_limit\")\r\n\r\nbgcolor(strategy.position_size > 0 ? color.green : strategy.position_size < 0 ? color.red : na, transp=90)// sfondo verde quando siamo long, sfondo rosso quando siamo short, no sfondo quando non siamo in posizione //color.new(color.red, 99): na)\r\n\r\n\r\n// Plot No Trading Allowed giorni da 1 a 7 1 \u00e8 domenica. Mesi da 1 a 12 1 \u00e8 Gennaio. //\r\n\r\n// giorni_esclusi = dayofweek(time)\r\n// plotshape(giorni_esclusi[1] == 2 ? giorni_esclusi : na, color=color.green, title=\"giorni_esclusi\")\r\n// mesi_esclusi = month(time)\r\n// plotshape(mesi_esclusi[1] == 9 ? mesi_esclusi : na, color=color.yellow, title=\"mesi_esclusi\")\r\n\r\n\r\n// Qui abbiamo in delay buy, sell, close command: ,\"delay\":\"15\" per dare il tempo di cancellare prima eventuali ordini pendenti e poi entrare in posizione\r\n// Il cancel command non deve avere il delay.\r\nbuy_command = 'BUY COMMAND'\r\nsell_command = 'SELL COMMAND'\r\nclose_command = 'CLOSE COMMAND'\r\n//cancel_command = 'CANCEL COMMAND'\r\n\r\n\r\n// Start Entry Conditions Long And Short //\r\nentry_long = close > baseLine and conversionLine>baseLine and close>spanB  and close > ema_long  and boom_bar_long_normal and inDateRange and not onlyShort and in_normal and not in_more_aggressive and not in_less_aggressive\r\nentry_long_more_aggressive = close > baseLine and conversionLine>baseLine and close>spanB  and close > ema_long  and boom_bar_long_more_aggressive and inDateRange and not onlyShort and in_more_aggressive and not in_normal and not in_less_aggressive\r\nentry_long_less_aggressive = close > baseLine and conversionLine>baseLine and close>spanB  and close > ema_long  and boom_bar_long_less_aggressive and inDateRange and not onlyShort and in_less_aggressive and not in_normal and not in_more_aggressive\r\nentry_short = close < baseLine and conversionLine<baseLine and close<spanB  and close < ema_short and boom_bar_short and inDateRange and not onlyLong and ((in_normal and not in_more_aggressive and not in_less_aggressive) or (in_more_aggressive and not in_normal and not in_less_aggressive) or (in_less_aggressive and not in_normal and not in_more_aggressive))\r\n//  End Entry Conditions Long And Short //\r\n\r\n\r\n// Start Exit Conditions Long And Short //\r\nexit_long = close < baseLine\r\nexit_short = close > baseLine \r\n// End Exit Conditions Long And Short //\r\n\r\nplot(strategy.opentrades)\r\n\r\n\r\n// Entry Exit Long / Short\r\nif entry_long // and strategy.opentrades == 0\r\n    strategy.entry('long', strategy.long, alert_message = \"Open Long Position\")//, comment = buy_command)\r\nif entry_long_more_aggressive\r\n    strategy.entry('long', strategy.long, alert_message = \"Open Long Position More Aggressive\")//, comment = buy_command)\r\nif entry_long_less_aggressive\r\n    strategy.entry('long', strategy.long, alert_message = \"Open Long Position Less Aggressive\")//, comment = buy_command)\r\nif exit_long \r\n    strategy.close(id='long', alert_message = \"Close Long Position\")//, comment = close_command)\r\n\r\nif entry_short // and strategy.opentrades == 0\r\n    strategy.entry('short', strategy.short, alert_message = \"Open Short Position\")//, comment = sell_command)\r\nif exit_short \r\n    strategy.close(id='short', alert_message = \"Close Short Position\")//, comment = close_command)\r\n\r\n\r\n// Nome Alert: Over-The-Clouds ETH/USDT.P BYBIT 4H\r\n// Commento Alert: {{strategy.order.comment}}\r\n// Webhook Classico Pi\u00f9 Sicuro Ma Pi\u00f9 Lento: https://alerts.tv-hub.org  \r\n// Webhook Nuovo Meno Sicuro Ma Pi\u00f9 Veloce: https://alerts.tv-hub.org/api/ExecuteTradeSignalClassic\r\n\r\n\r\n// ------- Inizio Calcolatore Size Posizioni Aperte E Size Posizioni Residue E Segna Con Una Croce Se Abbiamo Realizzato Un Profitto ------- // \r\n                                   // Il Segno Croce Profitto Realizzato Non Funziona Sullo Swing Posizione //\r\n\r\n// bought = strategy.position_size[0]> strategy.position_size[1]\r\n// Close_TP = false    \r\n// Close_TP := strategy.position_size[1] - strategy.position_size[0] and strategy.position_size[1] != 0 and strategy.position_size[0] != 0\r\n    \r\n// plotshape(Close_TP,title=\"Close_TP\", style=shape.xcross, color=color.blue, size =size.small, editable = true)\r\n// plot(strategy.position_size[1],\"Position Old\")\r\n// plot(strategy.position_size,\"Position\")\r\n\r\n// ------- Fine Calcolatore Size Posizioni Aperte E Size Posizioni Residue E Segna Con Una Croce Se Abbiamo Realizzato Un Profitto ------- // \r\n\r\n\r\n// ----------------- Inizio Tabella risultati mensili. Per visualizzare andare nelle impostazioni propriet\u00e0 e spuntare ad ogni tick -----------------\r\n\r\n// new_month = month(time) != month(time[1])\r\n// new_year  = year(time)  != year(time[1])\r\n\r\n// eq = strategy.equity\r\n\r\n// bar_pnl = eq / eq[1] - 1\r\n\r\n// cur_month_pnl = 0.0\r\n// cur_year_pnl  = 0.0\r\n\r\n// // Current Monthly P&L\r\n// cur_month_pnl := new_month ? 0.0 : \r\n//                  (1 + cur_month_pnl[1]) * (1 + bar_pnl) - 1 \r\n\r\n// // Current Yearly P&L\r\n// cur_year_pnl := new_year ? 0.0 : \r\n//                  (1 + cur_year_pnl[1]) * (1 + bar_pnl) - 1  \r\n\r\n// // Arrays to store Yearly and Monthly P&Ls\r\n// var month_pnl  = array.new_float(0)\r\n// var month_time = array.new_int(0)\r\n\r\n// var year_pnl  = array.new_float(0)\r\n// var year_time = array.new_int(0)\r\n\r\n// last_computed = false\r\n\r\n// if (not na(cur_month_pnl[1]) and (new_month or barstate.islast))\r\n//     if (last_computed[1])\r\n//         array.pop(month_pnl)\r\n//         array.pop(month_time)\r\n\r\n//     array.push(month_pnl , cur_month_pnl[1])\r\n//     array.push(month_time, time[1])\r\n\r\n// if (not na(cur_year_pnl[1]) and (new_year or barstate.islast))\r\n//     if (last_computed[1])\r\n//         array.pop(year_pnl)\r\n//         array.pop(year_time)\r\n\r\n//     array.push(year_pnl , cur_year_pnl[1])\r\n//     array.push(year_time, time[1])\r\n\r\n// last_computed := barstate.islast ? true : nz(last_computed[1])\r\n\r\n// // Monthly P&L Table    \r\n// var monthly_table = table(na)\r\n// prec      = input(2, title = \"Return Precision\")\r\n\r\n// if (barstate.islast)\r\n//     monthly_table := table.new(position.bottom_right, columns = 14, rows = array.size(year_pnl) + 1, bgcolor=#0F0F0F,border_width=1,border_color=#000000)\r\n\r\n//     table.cell(monthly_table, 0,  0, \"\",     text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n//     table.cell(monthly_table, 1,  0, \"Jan\",  text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n//     table.cell(monthly_table, 2,  0, \"Feb\",  text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n//     table.cell(monthly_table, 3,  0, \"Mar\",  text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n//     table.cell(monthly_table, 4,  0, \"Apr\",  text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n//     table.cell(monthly_table, 5,  0, \"May\",  text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n//     table.cell(monthly_table, 6,  0, \"Jun\",  text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n//     table.cell(monthly_table, 7,  0, \"Jul\",  text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n//     table.cell(monthly_table, 8,  0, \"Aug\",  text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n//     table.cell(monthly_table, 9,  0, \"Sep\",  text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n//     table.cell(monthly_table, 10, 0, \"Oct\",  text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n//     table.cell(monthly_table, 11, 0, \"Nov\",  text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n//     table.cell(monthly_table, 12, 0, \"Dec\",  text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n//     table.cell(monthly_table, 13, 0, \"Year\", text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n\r\n\r\n//     for yi = 0 to array.size(year_pnl) - 1\r\n//         table.cell(monthly_table, 0,  yi + 1, str.tostring(year(array.get(year_time, yi))), text_color=#D3D3D3, bgcolor=#0F0F0F)\r\n\r\n//         y_color = array.get(year_pnl, yi) > 0 ? color.lime : color.red\r\n//         table.cell(monthly_table, 13, yi + 1, str.tostring(math.round(array.get(year_pnl, yi) * 100, prec)), bgcolor = y_color)\r\n\r\n//     for mi = 0 to array.size(month_time) - 1\r\n//         m_row   = year(array.get(month_time, mi))  - year(array.get(year_time, 0)) + 1\r\n//         m_col   = month(array.get(month_time, mi)) \r\n//         m_color = array.get(month_pnl, mi) > 0 ? color.lime : color.red\r\n\r\n//         table.cell(monthly_table, m_col, m_row, str.tostring(math.round(array.get(month_pnl, mi) * 100, prec)), bgcolor = m_color)\r\n\r\n// ----------------- Fine Tabella risultati mensili. Per visualizzare andare nelle impostazioni propriet\u00e0 e spuntare ad ogni tick -----------------"
    ],
    [
      "fqnvrLX1",
      "TrafficLight.ino",
      "ripred",
      "C++",
      "Thursday 8th of June 2023 03:09:49 PM CDT",
      "// \r\n// TrafficLight.ino\r\n// \r\n\r\nenum MagicNumbers {\r\n    // alias' for the 3 sides\r\n         N = 0,\r\n         E = 1,\r\n         S = 2,\r\n\r\n    // alias' for the two sets of traffic: NS and EW\r\n        NS = 0,\r\n        EW = 1,\r\n\r\n    // alias' for the 3 colors\r\n     GREEN = 0,\r\n    YELLOW = 1,\r\n       RED = 2,\r\n\r\n    // motion sensor pin at 12\r\n    motionSensorPin = 12,\r\n};\r\n\r\n\r\n// \r\n// LED pin definitions array:\r\n// \r\nint pins[3][3];\r\n\r\n// \r\n// Global Variables\r\n// \r\nbool motionDetected = false;\r\n\r\n// \r\n// Current traffic flow\r\n// \r\nint flowing = NS;\r\n\r\n// \r\n// Preset Color Patterns:\r\n//                       G     Y     R\r\nint   greenOnly[3] = { HIGH,  LOW,  LOW };\r\nint  yellowOnly[3] = {  LOW, HIGH,  LOW };\r\nint     redOnly[3] = {  LOW,  LOW, HIGH };\r\nint yellowGreen[3] = { HIGH, HIGH,  LOW };\r\n\r\n\r\n// \r\n// set the 3 lights on one of the sides\r\n// \r\nvoid set_side(int dir, int colors[3]) {\r\n    for (int color = GREEN; color <= RED; color++) {\r\n        digitalWrite(pins[dir][color], colors[color]);\r\n    }\r\n}\r\n\r\n\r\n// \r\n// Sets the current flow of traffic to the specified colors\r\n// \r\nvoid set_green() {\r\n    if (flowing == NS) {\r\n        set_side(N, greenOnly);\r\n        set_side(E,   redOnly);\r\n        set_side(S, greenOnly);\r\n    }\r\n    else {\r\n        set_side(N,   redOnly);\r\n        set_side(E, greenOnly);\r\n        set_side(S,   redOnly);\r\n    }\r\n}\r\n\r\n\r\nvoid set_caution() {\r\n    if (flowing == NS) {\r\n        set_side(N, yellowGreen);\r\n        set_side(S, yellowGreen);\r\n    }\r\n    else {\r\n        set_side(E, yellowGreen);\r\n    }\r\n}\r\n\r\n\r\nvoid change_flow() {\r\n    if (flowing == NS) {\r\n        flowing = EW;\r\n    }\r\n    else {\r\n        flowing = NS;\r\n    }\r\n}\r\n\r\n\r\nvoid setup() {\r\n    delay(500);\r\n    Serial.begin(115200);\r\n    delay(500);\r\n\r\n    // configure the input pin\r\n    pinMode(motionSensorPin, INPUT);\r\n    \r\n    // configure the output pins\r\n    for (int side = N; side <= S; side++) {\r\n        for (int color = GREEN; color <= RED; color++) {\r\n            // calculate the pin #\r\n            int pin = color + (side * 3) + 2;\r\n\r\n            // set the pin mode: (INPUT, INPUT_PULLUP, or OUTPUT)\r\n            pinMode(pin, OUTPUT);\r\n\r\n            // remember the pin numbers\r\n            pins[side][color] = pin;\r\n        }\r\n    }\r\n\r\n    set_green();\r\n}\r\n\r\n\r\nvoid loop() {\r\n    motionDetected = digitalRead(motionSensorPin);\r\n\r\n    if (motionDetected) {\r\n        set_caution();  // sets green and yellow in the current flow direction\r\n        delay(5000);\r\n        change_flow();  // change from NS flow to EW or from EW to NS flow\r\n        set_green();    // sets green in current flow direction and red in the other direction\r\n    }\r\n}\r\n"
    ],
    [
      "5JBucAYE",
      "Untitled",
      "robkatt",
      "Lua",
      "Thursday 8th of June 2023 02:58:24 PM CDT",
      "local modem = peripheral.find(\"modem\")\r\nmodem.open(42131)\r\nmodem.transmit(42131,42131,\"door\")\r\nterm.clear()\r\n\r\n\r\n"
    ],
    [
      "2wJmqGNc",
      "prompt",
      "CR7CR7",
      "JavaScript",
      "Thursday 8th of June 2023 02:34:09 PM CDT",
      "// Variables for prompt\r\nvar originalPrompt = window.prompt;\r\nvar nextPromptResult = false;\r\nvar recordedPrompt = null;\r\n\r\n// Variables for confirm\r\nvar originalConfirmation = window.confirm;\r\nvar nextConfirmationResult = false;\r\nvar recordedConfirmation = null;\r\n\r\n// Variables for alert\r\nvar originalAlert = window.alert;\r\nvar nextAlertResult = false;\r\nvar recordedAlert = null;\r\n\r\n// Function to get the frame location\r\nfunction getFrameLocation() {\r\n  let frameLocation = \"\";\r\n  let currentWindow = window;\r\n  let currentParentWindow;\r\n  while (currentWindow !== window.top) {\r\n    currentParentWindow = currentWindow.parent;\r\n    for (let idx = 0; idx < currentParentWindow.frames.length; idx++) {\r\n      if (currentParentWindow.frames[idx] === currentWindow) {\r\n        frameLocation = \":\" + idx + frameLocation;\r\n        currentWindow = currentParentWindow;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  frameLocation = \"root\" + frameLocation;\r\n  return frameLocation;\r\n}\r\n\r\n// Function to handle prompt in non-top windows\r\nfunction handlePromptInNonTopWindows(text, defaultText) {\r\n  if (document.body.hasAttribute(\"SideeXPlayingFlag\")) {\r\n    return window.top.prompt(text, defaultText);\r\n  } else {\r\n    let result = originalPrompt(text, defaultText);\r\n    let frameLocation = getFrameLocation();\r\n    window.top.postMessage({\r\n      direction: \"from-page-script\",\r\n      recordedType: \"prompt\",\r\n      recordedMessage: text,\r\n      recordedResult: result,\r\n      frameLocation: frameLocation\r\n    }, \"*\");\r\n    return result;\r\n  }\r\n}\r\n\r\n// Function to handle confirm in non-top windows\r\nfunction handleConfirmInNonTopWindows(text) {\r\n  if (document.body.hasAttribute(\"SideeXPlayingFlag\")) {\r\n    return window.top.confirm(text);\r\n  } else {\r\n    let result = originalConfirmation(text);\r\n    let frameLocation = getFrameLocation();\r\n    window.top.postMessage({\r\n      direction: \"from-page-script\",\r\n      recordedType: \"confirm\",\r\n      recordedMessage: text,\r\n      recordedResult: result,\r\n      frameLocation: frameLocation\r\n    }, \"*\");\r\n    return result;\r\n  }\r\n}\r\n\r\n// Function to handle alert in non-top windows\r\nfunction handleAlertInNonTopWindows(text) {\r\n  if (document.body.hasAttribute(\"SideeXPlayingFlag\")) {\r\n    recordedAlert = text;\r\n    window.top.postMessage({\r\n      direction: \"from-page-script\",\r\n      response: \"alert\",\r\n      value: recordedAlert\r\n    }, \"*\");\r\n    return;\r\n  } else {\r\n    let result = originalAlert(text);\r\n    let frameLocation = getFrameLocation();\r\n    window.top.postMessage({\r\n      direction: \"from-page-script\",\r\n      recordedType: \"alert\",\r\n      recordedMessage: text,\r\n      recordedResult: result,\r\n      frameLocation: frameLocation\r\n    }, \"*\");\r\n    return result;\r\n  }\r\n}\r\n\r\n// Function to handle prompt in top window\r\nfunction handlePromptInTopWindow(text, defaultText) {\r\n  if (document.body.hasAttribute(\"setPrompt\")) {\r\n    recordedPrompt = text;\r\n    document.body.removeAttribute(\"setPrompt\");\r\n    return nextPromptResult;\r\n  } else {\r\n    let result = originalPrompt(text, defaultText);\r\n    let frameLocation = getFrameLocation();\r\n    window.top.postMessage({\r\n      direction: \"from-page-script\",\r\n      recordedType: \"prompt\",\r\n      recordedMessage: text,\r\n      recordedResult: result,\r\n      frameLocation: frameLocation\r\n    }, \"*\");\r\n    return result;\r\n  }\r\n}\r\n\r\n// Function to handle confirm in top window\r\nfunction handleConfirmInTopWindow(text) {\r\n  if (document.body.hasAttribute(\"setConfirm\")) {\r\n    recordedConfirmation = text;\r\n    document.body.removeAttribute(\"setConfirm\");\r\n    return nextConfirmationResult;\r\n  } else {\r\n    let result = originalConfirmation(text);\r\n    let frameLocation = getFrameLocation();\r\n    window.top.postMessage({\r\n      direction: \"from-page-script\",\r\n      recordedType: \"confirm\",\r\n      recordedMessage: text,\r\n      recordedResult: result,\r\n      frameLocation: frameLocation\r\n    }, \"*\");\r\n    return result;\r\n  }\r\n}\r\n\r\n// Function to handle alert in top window\r\nfunction handleAlertInTopWindow(text) {\r\n  if (document.body.hasAttribute(\"SideeXPlayingFlag\")) {\r\n    recordedAlert = text;\r\n    window.top.postMessage({\r\n      direction: \"from-page-script\",\r\n      response: \"alert\",\r\n      value: recordedAlert\r\n    }, \"*\");\r\n    return;\r\n  } else {\r\n    let result = originalAlert(text);\r\n    let frameLocation = getFrameLocation();\r\n    window.top.postMessage({\r\n      direction: \"from-page-script\",\r\n      recordedType: \"alert\",\r\n      recordedMessage: text,\r\n      recordedResult: result,\r\n      frameLocation: frameLocation\r\n    }, \"*\");\r\n    return result;\r\n  }\r\n}\r\n\r\n// Override prompt function\r\nif (window !== window.top) {\r\n  window.prompt = function(text, defaultText) {\r\n    return handlePromptInNonTopWindows(text, defaultText);\r\n  };\r\n\r\n  window.confirm = function(text) {\r\n    return handleConfirmInNonTopWindows(text);\r\n  };\r\n\r\n  window.alert = function(text) {\r\n    return handleAlertInNonTopWindows(text);\r\n  };\r\n} else {\r\n  window.prompt = function(text, defaultText) {\r\n    return handlePromptInTopWindow(text, defaultText);\r\n  };\r\n\r\n  window.confirm = function(text) {\r\n    return handleConfirmInTopWindow(text);\r\n  };\r\n\r\n  window.alert = function(text) {\r\n    return handleAlertInTopWindow(text);\r\n  };\r\n}\r\n\r\n// Play window methods\r\nif (window === window.top) {\r\n  window.addEventListener(\"message\", function(event) {\r\n    if (event.source === window && event.data && event.data.direction === \"from-content-script\") {\r\n      let result = undefined;\r\n      switch (event.data.command) {\r\n        case \"setNextPromptResult\":\r\n          nextPromptResult = event.data.target;\r\n          document.body.setAttribute(\"setPrompt\", true);\r\n          window.postMessage({\r\n            direction: \"from-page-script\",\r\n            response: \"prompt\"\r\n          }, \"*\");\r\n          break;\r\n        case \"getPromptMessage\":\r\n          result = recordedPrompt;\r\n          recordedPrompt = null;\r\n          window.postMessage({\r\n            direction: \"from-page-script\",\r\n            response: \"prompt\",\r\n            value: result\r\n          }, \"*\");\r\n          break;\r\n        case \"setNextConfirmationResult\":\r\n          nextConfirmationResult = event.data.target;\r\n          document.body.setAttribute(\"setConfirm\", true);\r\n          window.postMessage({\r\n            direction: \"from-page-script\",\r\n            response: \"confirm\"\r\n          }, \"*\");\r\n          break;\r\n        case \"getConfirmationMessage\":\r\n          result = recordedConfirmation;\r\n          recordedConfirmation = null;\r\n          try {\r\n            console.error(\"no\");\r\n            window.postMessage({\r\n              direction: \"from-page-script\",\r\n              response: \"confirm\",\r\n              value: result\r\n            }, \"*\");\r\n          } catch (e) {\r\n            console.error(e);\r\n          }\r\n          break;\r\n        case \"setNextAlertResult\":\r\n          nextAlertResult = event.data.target;\r\n          document.body.setAttribute(\"setAlert\", true);\r\n          window.postMessage({\r\n            direction: \"from-page-script\",\r\n            response: \"alert\"\r\n          }, \"*\");\r\n          break;\r\n      }\r\n    }\r\n  });\r\n}\r\n"
    ],
    [
      "Y8L8gHn8",
      "Untitled",
      "robkatt",
      "Lua",
      "Thursday 8th of June 2023 02:27:26 PM CDT",
      "local modem = peripheral.find(\"modem\") \r\nmodem.open(42131)\r\n\r\nDoor = true\r\nwhile true do\r\nlocal event, side, channel, replyChannel, message, distance = os.pullEvent(\"modem_message\")\r\n\r\nif (channel == 42131) then\r\n    \r\n    if(tostring(message) ==\"door\") then\r\n        \r\n        if (Door == true) then\r\n            print(\"open\")\r\n            redstone.setOutput(\"right\", false)\r\n            Door = false\r\n         \r\n        elseif (Door == false) then\r\n            print(\"close\")\r\n            redstone.setOutput(\"right\", true)\r\n            Door = true\r\n        end\r\n\r\n    end\r\nend\r\nend\r\n"
    ],
    [
      "WwLXhPUQ",
      "shoppingList",
      "CR7CR7",
      "JavaScript",
      "Thursday 8th of June 2023 02:20:04 PM CDT",
      "function addEventListenersToElement(element) {\r\n  element.addEventListener(\"click\", () => {\r\n    element.classList.toggle(\"done\");\r\n  });\r\n\r\n  var deleteButton = element.querySelector(\"button\");\r\n  deleteButton.addEventListener(\"click\", () => {\r\n    element.remove();\r\n  });\r\n}\r\n\r\nfunction addEventListenersToListElements() {\r\n  var liArray = document.querySelectorAll(\"li\");\r\n  liArray.forEach(addEventListenersToElement);\r\n}\r\n\r\nfunction createListElement() {\r\n  var li = document.createElement(\"li\");\r\n  li.appendChild(document.createTextNode(input.value + \" \"));\r\n\r\n  var deleteButton = document.createElement(\"button\");\r\n  deleteButton.appendChild(document.createTextNode(\"Delete\"));\r\n  li.appendChild(deleteButton);\r\n\r\n  ul.appendChild(li);\r\n  input.value = \"\";\r\n\r\n  addEventListenersToElement(li);\r\n}\r\n\r\n// Call addEventListenersToListElements() once initially\r\naddEventListenersToListElements();\r\n"
    ],
    [
      "BBvf6AGp",
      "Hacking tightVNC",
      "Mihao",
      "Bash",
      "Thursday 8th of June 2023 02:18:07 PM CDT",
      "# Aktualizacja paczek apt-get\r\nsudo apt-get update\r\n\r\n# instalacja paczki libc6-dev\r\n# paczka ta moze wymagac usuniecia poprzedniej wersji\r\nsudo apt-get -y install libc6-dev\r\n\r\n# WYKONUJEMY TYLKO GDY polecenie wy\u017cej nie przejdzie i powtarzamy polecenie powy\u017cej\r\napt-get remove binutils\r\n\r\n# instalacja tight server-a (je\u017celi bedzie pyta\u0107 o jakie\u015b zgody to zgadzamy si\u0119) \r\nsudo apt install tightvncserver \r\n\r\n# po instalacji modyfikujemy plik - slowo kali moze wymagac zmiany jezeli ktos zmienil konto uzytkownika lub uzytkonwnik\r\n# nazywa sie root\r\n\r\nnano /home/kali/.vnc/xstartup \r\n\r\n# kasujemy z powyzszego pliku wszystko i wklejamy to co jest ponizej - bez tego nie bedzie obrazu\r\n# Przy kopiowaniu najlepiej u\u017cy\u0107 myszki i po skasowaniu wszystkiego nacisn\u0105\u0107 PPM i paste\r\n# zapisujemy za pomoca ctrl + x i klikamy literke Y i enter\r\n\r\n#!/bin/sh\r\nunset SESSION_MANAGER\r\nunset DBUS_SESSION_BUS_ADDRESS\r\nstartxfce4 &\r\n[ -x /etc/vnc/xstartup ] && exec /etc/vnc/xstartup\r\n[ -r $HOME/.Xresources ] && xrdb $HOME/.Xresources\r\nxsetroot -solid grey &\r\nvncconfig -iconic &\r\n\r\n# zmieniamy prawa dostepu do pliku i pozwalamy na uruchamianie (ta fala to tylda pod klawiszem escape) \r\n\r\nchmod +x ~/.vnc/xstartup\r\n\r\n# uruchomienie  (przy pierwszym uruchomieniu poprosi o has\u0142o ktore trzeba ZAPAMIETAC) \r\n\r\nvncserver\r\n\r\n#zakonczenie dzialania serwera\r\n\r\nvncserver -kill :1\r\n\r\n"
    ],
    [
      "YckWt90W",
      "PHP sqlite3 to CSV",
      "metalx1000",
      "PHP",
      "Thursday 8th of June 2023 02:15:18 PM CDT",
      "<?php\r\n// Copyright (C) 2023 Kris Occhipinti\r\n// https://filmsbykris.com\r\n//\r\n// This program is free software; you can redistribute it and/or\r\n// modify it under the terms of the GNU Affero General Public\r\n// License as published by the Free Software Foundation; \r\n// version 3 of the License.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n// Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Lesser General Public License\r\n// along with this program; if not, write to the Free Software Foundation,\r\n// Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n// https://www.gnu.org/licenses/agpl-3.0.txt\r\nheader('Content-Type: text/csv');\r\nheader('Content-Disposition: attachment; filename=\"tshirt-orders.csv\"');\r\n$db = new SQLite3('db/orders.db');\r\n$results = $db->query('SELECT * FROM orders');\r\n$data = array();\r\necho \"Order Number,Name,Email,s,m,l,xl,xxl,picked up,paid,style,xxxl,xxxxl\\n\";\r\nwhile ($row = $results->fetchArray(SQLITE3_ASSOC)) {\r\necho implode(array_values($row), \",\") . \"\\n\";\r\n}\r\n\r\n?>\r\n"
    ],
    [
      "304HWk4X",
      "dp_me",
      "Korotkodul",
      "Python",
      "Thursday 8th of June 2023 02:11:55 PM CDT",
      "n = 5\r\nF0 = [0] * (n + 1)\r\nF00 = [0] * (n + 1)\r\nF1 = [0] * (n + 1)\r\nF11 = [0] * (n + 1)\r\nF0[1] = 1\r\nF1[1] = 1\r\nF00[2] = 1\r\nF11[2] = 1\r\nF0[2] = 1\r\nF1[2] = 1\r\n\r\nfor i in range(3,n + 1):\r\n    F0[i] = F0[i-1] + F1[i-1] + F11[i-1]\r\n    F1[i] = F1[i-1] + F0[i-1] + F00[i-1]\r\n    F00[i] = F1[i-1] + F11[i-1]\r\n    F11[i] = F0[i-1] + F00[i-1]\r\n\r\nprint(F0)\r\nprint(F1)\r\nprint(F00)\r\nprint(F11)\r\n#R = F0[n] + F00[n] + F1[n] + F11[n]\r\n#print(R)\r\n"
    ],
    [
      "s6HhkYpL",
      "dp_them",
      "Korotkodul",
      "Python",
      "Thursday 8th of June 2023 02:11:40 PM CDT",
      "n = 5\r\nF0 = [0] * (n + 1)\r\nF00 = [0] * (n + 1)\r\nF1 = [0] * (n + 1)\r\nF11 = [0] * (n + 1)\r\nF0[1] = 1\r\nF1[1] = 1\r\nfor i in range(2, n + 1):\r\n    F0[i] = F1[i - 1] + F11[i - 1]\r\n    F1[i] = F0[i - 1] + F00[i - 1]\r\n    F00[i] = F0[i - 1]\r\n    F11[i] = F1[i - 1]\r\n\r\nprint(F0)\r\nprint(F1)\r\nprint(F00)\r\nprint(F11)\r\n#R = F0[n] + F00[n] + F1[n] + F11[n]\r\n#print(R)"
    ],
    [
      "u1r0wP5x",
      "Logger",
      "Carnality",
      "C#",
      "Thursday 8th of June 2023 01:57:10 PM CDT",
      "using System;\r\nusing System.IO;\r\n\r\nnamespace Logging\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            \r\n        }\r\n    }\r\n\r\n    public class ConsoleLogWriter : ILogger\r\n    {\r\n        public void WriteError(string message)\r\n        {\r\n            Console.WriteLine(message);\r\n        }\r\n    }\r\n\r\n    public class FileLogWriter : ILogger\r\n    {\r\n        private string _nameFile = \"\";\r\n\r\n        public FileLogWriter(string nameFile)\r\n        {\r\n            _nameFile = nameFile;\r\n        }\r\n\r\n        public void WriteError(string message)\r\n        {\r\n            File.WriteAllText(_nameFile, message);\r\n        }\r\n    }\r\n\r\n    public class SecureLogWriter : ILogger\r\n    {\r\n        private ILogger _logger;\r\n\r\n        public SecureLogWriter(ILogger logger)\r\n        {\r\n            _logger = logger;\r\n        }\r\n\r\n        public void WriteError(string message)\r\n        {\r\n            if (DateTime.Now.DayOfWeek == DayOfWeek.Friday)\r\n            {\r\n                _logger.WriteError(message);\r\n            }\r\n        }\r\n    }\r\n\r\n    public class SecureConsoleLogWriter : SecureLogWriter\r\n    {\r\n        public SecureConsoleLogWriter(ConsoleLogWriter consoleLogWriter) : base(consoleLogWriter)\r\n        {\r\n        }\r\n    }\r\n\r\n    public class SecureFileLogWriter : SecureLogWriter\r\n    {\r\n        public SecureFileLogWriter(FileLogWriter fileLogWriter) : base(fileLogWriter)\r\n        {\r\n        }\r\n    }\r\n\r\n    public class SecureFileAndConsoleLogWriter : SecureLogWriter\r\n    {\r\n        private ConsoleLogWriter _consoleLogWriter;\r\n\r\n        public SecureFileAndConsoleLogWriter(ConsoleLogWriter consoleLogWriter, FileLogWriter fileLogWriter) : base(fileLogWriter)\r\n        {\r\n            _consoleLogWriter = consoleLogWriter;\r\n        }\r\n\r\n        public new void WriteError(string message)\r\n        {\r\n            base.WriteError(message);\r\n\r\n            _consoleLogWriter.WriteError(message);\r\n        }\r\n    }\r\n\r\n    public class Pathfinder : ILogger\r\n    {\r\n        public Pathfinder(ILogger logger, string message)\r\n        {\r\n            logger.WriteError(message);\r\n        }\r\n\r\n        public void Find(ILogger logger, string message)\r\n        {\r\n            logger.WriteError(message);\r\n        }\r\n\r\n        public void WriteError(string message)\r\n        {\r\n            Console.Write(message);\r\n        }\r\n    }\r\n\r\n    public interface ILogger\r\n    {\r\n        void WriteError(string message);\r\n    }\r\n}\r\n"
    ]
  ]
}